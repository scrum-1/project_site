<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>機械設計專題 (虎尾科大MDE) - 2016g1</title><link href="http://project.mde.tw/blog/" rel="alternate"></link><link href="http://project.mde.tw/blog/feeds/2016g1.atom.xml" rel="self"></link><id>http://project.mde.tw/blog/</id><updated>2017-03-15T23:00:00+08:00</updated><entry><title>Pyquino 日誌 - 106/03/15</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060315.html" rel="alternate"></link><published>2017-03-15T23:00:00+08:00</published><updated>2017-03-15T23:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-03-15:/blog/pyquino-ri-zhi-1060315.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;完成gcode送值到Vrep&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;討論vrep的ik合成&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;完成gcode送值到Vrep&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;討論vrep的ik合成&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;開發日誌
＝＝＝&lt;/p&gt;
&lt;h2&gt;完成gcode送值到Vrep&lt;/h2&gt;
&lt;p&gt;利用gcode parser 解析gcode為點位置,及可以完成送刀尖點到vrep裡面進行模擬&lt;/p&gt;
&lt;h2&gt;Vrep的ik&lt;/h2&gt;
&lt;p&gt;和武鉦老師討論到vrep的可行性部份,做出一個任意的機構,列用vrep的ik解題方法,把逆向運動學解出來後,使用自己寫的控制器,完成一套任意機械,都可以直接做出來控制器,讓使用者使用&lt;/p&gt;
&lt;p&gt;今天沒有很多時間來製作網誌,明天在詳細講述內容&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/vrep.png?raw=true"&gt;&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/03/13</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060313.html" rel="alternate"></link><published>2017-03-13T23:00:00+08:00</published><updated>2017-03-13T23:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-03-13:/blog/pyquino-ri-zhi-1060313.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;製作gcode解析器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目標&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;製作gcode解析器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目標&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;推導並聯桿機器,推導ik逆向運動學&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新新的轉換界面設計&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;開發日誌
＝＝＝&lt;/p&gt;
&lt;h2&gt;逆向運動學推導&lt;/h2&gt;
&lt;p&gt;la 連桿長度&lt;/p&gt;
&lt;p&gt;to 噴頭到中間圓盤的圓心差距(Z)&lt;/p&gt;
&lt;p&gt;pa 中間圓盤圓心到旁邊球頭接頭的距離&lt;/p&gt;
&lt;p&gt;sp 中間圓心到旁邊滑塊的距離&lt;/p&gt;
&lt;p&gt;先定義已知的項目&lt;/p&gt;
&lt;p&gt;$$a_{1x}&lt;/p&gt;
&lt;p&gt;a_{1y}&lt;/p&gt;
&lt;p&gt;a_{1z}$$&lt;/p&gt;
&lt;p&gt;$$a_{1x} = (tx + pa)$$&lt;/p&gt;
&lt;p&gt;$$a_{1y} = (ty)$$&lt;/p&gt;
&lt;p&gt;$$a_{1z} = (tz+to)$$&lt;/p&gt;
&lt;p&gt;$$a_{2x} = sp $$&lt;/p&gt;
&lt;p&gt;$$a_{2y} = 0 $$&lt;/p&gt;
&lt;p&gt;$$a_{2z} = ??? $$&lt;/p&gt;
&lt;p&gt;因為要得到每個滑塊要移動的量(a2z),未知滑塊的高度&lt;/p&gt;
&lt;p&gt;利用畢氏定理可以得到旁邊滑塊的伸縮量&lt;/p&gt;
&lt;p&gt;$$aa = \sqrt{(a_{2x}-a_{1x})^2-(a_{2y}-a_{1y})^2}$$&lt;/p&gt;
&lt;p&gt;$$ha = \sqrt{(l_{a})^2-(aa)^2}$$&lt;/p&gt;
&lt;p&gt;$$a_{2z} = tz + to +ha $$&lt;/p&gt;
&lt;p&gt;後面再把圖補上&lt;/p&gt;
&lt;p&gt;更新了新的界面負責把值傳到vrep裡面,目前已經把gcode解出來,也把逆向運動學推導完成&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine/dynamic_math.jpg?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/panel.png?raw=true"&gt;&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/03/11</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060311.html" rel="alternate"></link><published>2017-03-11T23:00:00+08:00</published><updated>2017-03-11T23:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-03-11:/blog/pyquino-ri-zhi-1060311.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;製作gcode解析器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目標&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;製作gcode解析器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;目標&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;製作了Gcode解析器,可以將檔案轉換成（Ⅹ Y Z)的位置和傳出來給Vrep的列印機使用,目前單純就列表在圖框中,接下來會結合pyqtgraphy進行3d的模型繪製&lt;/p&gt;
&lt;p&gt;製作方法為分析每行G指令在運作的方式&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/yQhrVN6.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/ueUhBRv.png"&gt;&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/26</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060226.html" rel="alternate"></link><published>2017-02-26T23:00:00+08:00</published><updated>2017-02-26T23:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-26:/blog/pyquino-ri-zhi-1060226.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vrep連動控制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新增remoteAPI到pyqruino裡面&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Vrep連動控制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;新增remoteAPI到pyqruino裡面&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;使用remoteAPI來控制Vrep內步的馬達旋轉，目前還沒製做把值存進去的功能，還在思考要如何內外同動，包括訊號傳輸，有想過直接使用之前做的可變電阻的方式，利用Arduino直接使用lua收值把外部的狀況輸入到內部裡面，這部分還在思考要怎麼製做比較盡善盡美。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine/pyquino_vrep.PNG?raw=true"&gt;&lt;/p&gt;
&lt;h2&gt;增加檔案&lt;/h2&gt;
&lt;p&gt;新增了core裡面的涵式庫，將RemoteAPI的dll包到裡面，目前.so的部分還沒做，要等換到linux系統的時候在製做兩個不一樣版本的差異。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine/file_update.PNG?raw=true"&gt;&lt;/p&gt;
&lt;h2&gt;程式部分&lt;/h2&gt;
&lt;p&gt;在思考要不要額外把串列通訊的部分拉成獨立的控制，不然要一個使用者，在使用串列通訊的功能的時候安裝opengl或者pyqtgraphy之類的模組，感覺有些不適當，除非說變成將得到的值畫成圖表之類的可能比較好。&lt;/p&gt;
&lt;p&gt;RemoteAPI在連線部分，不太確定支援的式點對點的控制還是說連線是走同一條線路，這部分要再看資料的規定才會理解他的運作方法，現在的寫法是每按一個按鈕就連線一次，不太確定這樣會不會有問題發生，這可能要看技術手冊或者使用後才會知道。&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/25</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060225.html" rel="alternate"></link><published>2017-02-25T23:00:00+08:00</published><updated>2017-02-25T23:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-25:/blog/pyquino-ri-zhi-1060225.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;機器繪製完成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匯入Vrep內部&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;機器繪製完成&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匯入Vrep內部&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;利用熟悉的繪圖軟體先將圖趕出來了，也已經匯入到Vrep內部，內部控制我可能先做單純讓兩顆馬達旋轉，先不設定這個複雜的仿生機構，先將控制介面包到Pyquino的分支裡面使用，依靠之前使用RemoAPI來控制Vrep馬達。&lt;/p&gt;
&lt;p&gt;實體部分規畫&lt;/p&gt;
&lt;p&gt;-馬達 MG996R(360度連續型)&lt;/p&gt;
&lt;p&gt;-板件，使用雷射切割壓克力來製做&lt;/p&gt;
&lt;p&gt;-連接件 螺絲，最長桿還在思考&lt;/p&gt;
&lt;p&gt;-控制板 Arduino uno&lt;/p&gt;
&lt;p&gt;-電源供應，電池盒&lt;/p&gt;
&lt;p&gt;可以的話先設計好介面進行控制真的Arduino和內部的馬達，都先不要進行機構上的運行。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine/vrep_import.PNG?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine/setting.PNG?raw=true"&gt;&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/19</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060219.html" rel="alternate"></link><published>2017-02-19T21:00:00+08:00</published><updated>2017-02-19T21:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-19:/blog/pyquino-ri-zhi-1060219.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;更換github名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;release version beta0.1 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新部分Ui&lt;/p&gt;
&lt;p&gt;*PyQtgraphy&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;更換github名字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;release version beta0.1 &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;更新部分Ui&lt;/p&gt;
&lt;p&gt;*PyQtgraphy&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;開發日誌&lt;/h1&gt;
&lt;p&gt;[倉儲位置][https://github.com/kmolLin/Pyquino/tree/master] ，已經更新名字和release測試版，目前實測是可以使用控制機器&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/page.PNG?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/betarelease.PNG?raw=true"&gt;&lt;/p&gt;
&lt;p&gt;製作了launch.py來執行程式&lt;/p&gt;
&lt;pre class="brush: python"&gt;
python3 launchPyquino.py
&lt;/pre&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/12</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060212.html" rel="alternate"></link><published>2017-02-12T21:00:00+08:00</published><updated>2017-02-12T21:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-12:/blog/pyquino-ri-zhi-1060212.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修理部分Bug&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;opengl&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;機器設計&lt;/p&gt;
&lt;p&gt;*規劃部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修理部分Bug&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;opengl&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;機器設計&lt;/p&gt;
&lt;p&gt;*規劃部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;開發日誌&lt;/h1&gt;
&lt;h2&gt;部分Bug&lt;/h2&gt;
&lt;p&gt;在送值到機器，會因為機器收值的方式不同，導致如取值不像同。舉例來說在不同胞率得到的值會不相同，因此最好的辦法是送16進位的編碼給機器最好(hex)，在win遇到Big5編碼以及Utf8兩個編碼影響，目前還沒有測試在linux部分的編碼問題，現在一律採用Utf-8的編碼來解決這部分的問題。&lt;/p&gt;
&lt;h2&gt;OpenGL&lt;/h2&gt;
&lt;p&gt;這部分還在詳閱相關的開發手冊，還沒真正將Stl匯入到平台裡面，要整合Vrep的話，因為還沒回學校，沒辦法上Service.mde.tw，可能要等回去學校才開始進行開發。&lt;/p&gt;
&lt;p&gt;*整理code部分&lt;/p&gt;
&lt;p&gt;這部分還沒開始整理，下個禮拜會慢慢的把code整理以及加上註解，讓所有人都可以知道如何使用這部分的程式來和機器溝通，Vrep的介面會根據老師想要模擬的部分來進行設計，可能就是包括機器的移動和Gcode模擬，這部分會和老師在討論。&lt;/p&gt;
&lt;h1&gt;機器設計&lt;/h1&gt;
&lt;p&gt;我先設計了一台小三軸來進行輔助控制和設計，如果直接動到真正3D列印機上面可能會有非預期的整合問題出現，打算先用自己設計的機器和韌體進行控制。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/machine.PNG?raw=true"&gt;&lt;/p&gt;
&lt;h2&gt;規劃&lt;/h2&gt;
&lt;p&gt;-使用控制板Arduino Mega2560 + ramps1.4(擴充版) &lt;/p&gt;
&lt;p&gt;-馬達(42步進馬達)&lt;/p&gt;
&lt;p&gt;-皮帶(GT2)&lt;/p&gt;
&lt;p&gt;-部分零組件(3D列印)&lt;/p&gt;
&lt;p&gt;-板件設計(雷射切割)&lt;/p&gt;
&lt;p&gt;-power supply使用12V輸出&lt;/p&gt;
&lt;p&gt;-上銀滑軌(MGW9C)&lt;/p&gt;
&lt;p&gt;採取工具機的控制方式G碼來進行控制，使用Arduino EEPROM的方式把文件存取到Arduinio的記憶體裡，這部分韌體我再來進行開發和控制，要先把成品做完才有辦法寫控制，除非利用Vrep等模擬軟體，輔助開發韌體，我想要同時兩邊一起跑來驗證，設計出來的機台在運作上沒有問題，也可以當個範本來輔助機台設計上使用。&lt;/p&gt;
&lt;p&gt;二年級協同的部分可以使用我們開發出來的工具，來進行機器的設計，像是仿生獸的範例是非常不錯的，可以先引導他們使用Pyslvs的部分來繪製連桿機構，在使用Vrep來進行模擬，實體可能會做不到，他們在使用Pyslvs應該會花上許多時間可能兩週可能三週，模擬組裝就可以花上到期中的時間，在操作Vrep中remote_API一定會花上更多的時間，Pyqtuino的Vrep部分可能會趕不上讓學員使用，那邊開發需要花上一點時間研究API的部分，可能先請他們可以用Scite啟動python程式讓機器運動，並控制馬達的轉速，利用command line輸入的方式進行控制，將會提升他們對於程式語言的設計能力。&lt;/p&gt;
&lt;p&gt;4042的學員，已經有交代他們先研究我們之前所做的教學以及Pyslvs的使用，實際上讀取到多少，我也不確定，要等開學再看看每個學員讀到多少。&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/09</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060209.html" rel="alternate"></link><published>2017-02-09T21:00:00+08:00</published><updated>2017-02-09T21:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-09:/blog/pyquino-ri-zhi-1060209.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pyqtgraphy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mointor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;opengl&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分頁更新&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;pyqtgraphy&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;mointor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;opengl&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分頁更新&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;開發日誌&lt;/h1&gt;
&lt;h2&gt;pyqtgraphy&lt;/h2&gt;
&lt;p&gt;+&lt;a href="http://www.pyqtgraph.org/"&gt;pyqtgraph&lt;/a&gt; 安裝
+&lt;a href="https://github.com/pyqtgraph/pyqtgraph"&gt;pyqtgraph install&lt;/a&gt; 使用的版本為 0.10.0版本
+&lt;a href="http://www.pyqtgraph.org/documentation/"&gt;pyqtgraph documentation&lt;/a&gt; Api文件相關說明&lt;/p&gt;
&lt;h2&gt;mointor新增opengl的分頁&lt;/h2&gt;
&lt;p&gt;-新增一頁負責開啟Gui的部分，以便讓使用者看檔案的3D樣子&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/pyopengl.PNG?raw=true"&gt;&lt;/p&gt;
&lt;h2&gt;OpenGL&lt;/h2&gt;
&lt;p&gt;-目前只顯示範例教學的部分，將平台搬進去使用，接下來會對這個對話方框新增開啟檔案、stl顯示等功能。
-區隔兩邊功能，分為操控以及預覽圖檔的部分。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/pyquino/opengl.PNG?raw=true"&gt;&lt;/p&gt;
&lt;h2&gt;分頁更新&lt;/h2&gt;
&lt;p&gt;新增了兩個對話框，一個對Vrep、一個對Gcode解析、在考慮要不要新增stl預覽的部分，這幾個部分都使用pyqtgraphy來預覽，目前都還沒加入解析的部分，pyqtgraphy的部分還需要研讀，目前還沒看完相關文件。&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/08</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060208.html" rel="alternate"></link><published>2017-02-08T21:00:00+08:00</published><updated>2017-02-08T21:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-08:/blog/pyquino-ri-zhi-1060208.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Digital Lcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move locate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以選擇步數移動&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Menu bar更新Help&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;測試部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;開發日誌&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Digital Lcd&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Move locate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可以選擇步數移動&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Menu bar更新Help&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;測試部分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;開發日誌&lt;/h1&gt;
&lt;h2&gt;Digital Lcd&lt;/h2&gt;
&lt;p&gt;-使用者可以知道目前機器的位置和點座標，會根據使用者下的指令來更新點座標，也可以讓使用者決定要移動多少mm&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# step is mm
#step由使用者決定
serial.send(str('G90'+'x'+step))
&lt;/pre&gt;

&lt;h2&gt;Move locate&lt;/h2&gt;
&lt;p&gt;-根據&lt;a href="http://www.shapeoko.com/wiki/index.php/G-Code"&gt;Grbl Gcode&lt;/a&gt; 的protocol設定，有增量移動這個指令，單純想依靠這G90來跟機器溝通，不去記憶相關位置，而是直接藉著增量位置的值來確定目前機器移動的位置並顯示到LCD上面。&lt;/p&gt;
&lt;h2&gt;step步數決定&lt;/h2&gt;
&lt;p&gt;-製作了讓人決定每按一次按鈕要走幾步的選項，可以根據使用者需求自行增加或減少步數設定&lt;/p&gt;
&lt;h2&gt;Menu bar更新Help&lt;/h2&gt;
&lt;p&gt;-目前help裡面尚未新增資料，未來會參考其他應用程式放入使用教學、關於等相關資料。&lt;/p&gt;
&lt;h2&gt;測試影片&lt;/h2&gt;
&lt;iframe width="640" height="360" src="https://www.youtube.com/embed/XUkCgKuf0AE" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;OpenGL&lt;/h3&gt;

&lt;p&gt;目前偏向這個倉儲所展示的Gcode viewer&lt;/p&gt;
&lt;p&gt;+&lt;a href="https://github.com/jonathanwin/yagv"&gt;yagv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://thingiverse-production-new.s3.amazonaws.com/renders/ca/cf/bd/b0/86/yagv-0.3b-3_preview_featured.jpg"&gt;&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>Pyquino 日誌 - 106/02/07</title><link href="http://project.mde.tw/blog/pyquino-ri-zhi-1060207.html" rel="alternate"></link><published>2017-02-07T21:00:00+08:00</published><updated>2017-02-07T21:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-07:/blog/pyquino-ri-zhi-1060207.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pyquino develope&lt;/p&gt;
&lt;p&gt;開發進度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;整體&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開發功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*開發疑惑&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Pyquino develope&lt;/p&gt;
&lt;p&gt;開發進度&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;整體&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開發功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*開發疑惑&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;今日開發進度&lt;/h1&gt;
&lt;p&gt;新增了一個分頁(tab)來進行按鈕下指令進行控制機器的部分&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/y9NRVMm.png"&gt;&lt;/p&gt;
&lt;h3&gt;以及新增未來要加入Vrep控制的menu bar&lt;/h3&gt;

&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/E4svz9D.png"&gt;&lt;/p&gt;
&lt;h2&gt;整體&lt;/h2&gt;
&lt;p&gt;-現在還有許多地方需要優化和簡化程式，現在整個程式註解太多以及擁有許多無意義片段的程式碼，並不易閱讀，目前打算先將主功能開發完成再來進行優化的部分，目前還有許多功能未加入(數字顯示器、預覽gcode的opengl...等，這部分後面加入後會再進行優化。&lt;/p&gt;
&lt;p&gt;-在看程式碼的部分也需要優化和設定資料夾將他們拆開，而不是全部變成一包，非常凌亂無法協同開發，這部分會等到主功能開發完成再進行。&lt;/p&gt;
&lt;h2&gt;開發功能&lt;/h2&gt;
&lt;p&gt;-今日主要優化界面，以及設計出了人機介面，來和機器進行溝通，目前的按鈕已經可以正常發送G指令給機器，包括home unlock的部分，功能都已經開發完成，目前測試的方式單純和Arduino溝通，並沒有實際的列印機可以進行測試，等回到學校再進行測試。部分使用上邏輯的問題，會再思考方法避免發生或者警告使用者使用上的缺失。&lt;/p&gt;
&lt;p&gt;-接下來會優先開發讀取gcode並自動發送到機器裡面，並且使用open file的方式，新開一個視窗來額外處理讀取文件和送文件。&lt;/p&gt;
&lt;h2&gt;開發疑惑&lt;/h2&gt;
&lt;p&gt;-是否真的可以使用OpenGl來讀取gcode將3D模型變成線架構的模型讓人看&lt;/p&gt;
&lt;p&gt;-Opengl with PyQt5 的資料幾乎都找不到，幾乎都是顯示Pyopengl，這部分不太理解他的意義。&lt;/p&gt;</content><category term="Pyquino"></category></entry><entry><title>PyQt5 serial port</title><link href="http://project.mde.tw/blog/pyqt5-serial-port.html" rel="alternate"></link><published>2017-02-06T16:00:00+08:00</published><updated>2017-02-06T16:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-02-06:/blog/pyqt5-serial-port.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Serial tools develope&lt;/p&gt;
&lt;p&gt;tools開發&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Arduino_grbl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PyQt5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pyserial&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Serial tools develope&lt;/p&gt;
&lt;p&gt;tools開發&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Arduino_grbl&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PyQt5&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pyserial&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GUI&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;串列通訊工具開發&lt;/h1&gt;
&lt;p&gt;相關資料連結:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/smpss91341/PyQt5-pyserial"&gt;PyQt5-pyserial-tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/grbl/grbl"&gt;Arduino-grbl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://doc.qt.io/qt-5/search-results.html"&gt;Qt API&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/pyserial/"&gt;Pyserial&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;先備知識&lt;/h2&gt;
&lt;p&gt;在做通訊相關的程式需要了解的部分&lt;/p&gt;
&lt;p&gt;receive &amp;amp; send&lt;/p&gt;
&lt;p&gt;-理解目前的通訊協定(RS232 RS485...)&lt;/p&gt;
&lt;p&gt;-理解訊息傳送的方法&lt;/p&gt;
&lt;p&gt;-以及對方解讀的方法&lt;/p&gt;
&lt;h2&gt;目前開發進度&lt;/h2&gt;
&lt;p&gt;這次開發的主畫面(開發版)，基本和Arduino進行溝通已經可以進行回傳和送值的工作。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/ImxcqAY.png"&gt;&lt;/p&gt;
&lt;h3&gt;溝通對象(Arduino in grbl)&lt;/h3&gt;

&lt;p&gt;&lt;img alt="" src="http://i.imgur.com/uzHl6qj.jpg"&gt;&lt;/p&gt;
&lt;h2&gt;Grbl&lt;/h2&gt;
&lt;p&gt;-為目前世界開源CNC的控制韌體排名前幾名，許多的數值工具機都可以利用他所開發的韌體進行控制，包括我們常常使用的Ramps1.4控制卡，也可以使用他的arduino程式進行控制。&lt;/p&gt;
&lt;p&gt;-操作的方法，和使用一般CNC相同，可以下達Gcode &amp;amp; M command，可自行進行編碼和控制機台(F600、G01 X10 ....等)&lt;/p&gt;
&lt;h2&gt;Pyserial&lt;/h2&gt;
&lt;p&gt;-python模組，目前已經支援python3，可以省去處理許多非常細節關於串列通訊的部分，像是(記憶體位置，如何存取)&lt;/p&gt;
&lt;h2&gt;Gui開發&lt;/h2&gt;
&lt;p&gt;-目前開發到手動進行機器的溝通，基本的傳輸指令到控制卡裡面&lt;/p&gt;
&lt;p&gt;-接下來要開發模擬的部分，可以在內外同時進行溝通，目前不知道內部的模擬器要用什麼做，也許考慮vrep(?)。&lt;/p&gt;
&lt;p&gt;-要處理gcode的檔案，現在單純可以送指定到機器並回傳狀態到指令列，後面還需要優化界面才行。&lt;/p&gt;
&lt;p&gt;-開發環境目前選定win，我的linux系統崩毀，礙於網路速度太慢，就先從ana_2017進行開發&lt;/p&gt;</content><category term="serial_tools"></category></entry><entry><title>fix qt5 designer</title><link href="http://project.mde.tw/blog/fix-qt5-designer.html" rel="alternate"></link><published>2017-01-26T12:00:00+08:00</published><updated>2017-01-26T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-01-26:/blog/fix-qt5-designer.html</id><summary type="html">&lt;p&gt;無法啟動qtdesigner的問題
</summary><content type="html">&lt;p&gt;無法啟動qtdesigner的問題
&lt;/p&gt;
&lt;p&gt;要做圖形化設計的時候，除了憑空想像物件的形狀和位置，也可以利用一些輔助工具，像是QT designer，進行先調整繪畫的地方和使用方法。&lt;/p&gt;
&lt;p&gt;底下為老師ana2017_lite的win的部分&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在cmd裡面更新pip&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;接著安裝pip install pyqt5-tools&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝完成後可以在dist-package裡面看到QT designer了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;打開eric6裡面的 QT tools設定檔裡面加上位置就可以了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Y:\Anaconda3\Lib\site-packages\pyqt5-tools\designer&lt;/p&gt;
&lt;p&gt;圖片後面補上(家裡網路太慢了)&lt;/p&gt;</content><category term="ana2017"></category></entry><entry><title>自動控制(Record)</title><link href="http://project.mde.tw/blog/zi-dong-kong-zhi-record.html" rel="alternate"></link><published>2017-01-14T22:00:00+08:00</published><updated>2017-01-14T22:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2017-01-14:/blog/zi-dong-kong-zhi-record.html</id><summary type="html">&lt;p&gt;關於這門課用到的技術
</summary><content type="html">&lt;p&gt;關於這門課用到的技術
&lt;/p&gt;
&lt;h3&gt;選用的控制版子&lt;/h3&gt;

&lt;p&gt;Arduino + Ramps 1.4 + power supply&lt;/p&gt;
&lt;p&gt;&lt;img src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/autocontrol/IMG_0320.JPG?raw=true"&gt;&lt;/p&gt;
&lt;h3&gt;pin mapping&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://www.reprap.org/mediawiki/images/c/ca/Arduinomega1-4connectors.png"&gt;&lt;/p&gt;
&lt;h3&gt;Onshape 主體設計&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://cad.onshape.com/documents/5879d8f6ba925016dc1480bf/w/fbd34089a333cf550a7792fc/e/39d0a4577f2e92dbd563b6d5"&gt;設計圖&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這個再設計上有許多先天上的失誤，請不要直接使用，再傳動的部份需要額外思考，這一個月會再畫一個可以正常工作的三軸機器。&lt;/p&gt;
&lt;h3&gt;程式碼設計的部份&lt;/h3&gt;

&lt;p&gt;幾個要注意的地方&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.A4988控制晶片的方法
&lt;li&gt;2.步進馬達的使用
&lt;li&gt;3.對於控制版的腳位要查表
&lt;li&gt;4.對於電路有基本的理解
&lt;/ul&gt;

&lt;h3&gt;A4988 &amp; 步進馬達&lt;/h3&gt;

&lt;p&gt;&lt;img src="https://a.pololu-files.com/picture/0J3360.1200.png?d94ef1356fab28463db67ff0619afadf"&gt;&lt;/p&gt;
&lt;p&gt;會需要控制step以及dir的腳位，dir的腳位決定正轉反轉假設輸入high為正轉那low就是反轉。&lt;/p&gt;
&lt;p&gt;step腳位決定這個馬達要走幾步，譬如說我配的皮帶輪齒數是20齒的，我步進馬達轉一圈假設是3200步，我的一齒可以帶動皮帶移動1mm，寫個簡單的數學式子就會變成底下這樣。&lt;/p&gt;
&lt;p&gt;$$\theta_T = cos^{-1}(\frac{x^2+y^2-L1^2-L2^2}{2\times L1\times L2})$$&lt;/p&gt;
&lt;p&gt;$$\frac{20}{3200}=\frac{1}{x}$$&lt;/p&gt;
&lt;p&gt;$$x=\frac{3200}{20}\times 1mm$$&lt;/p&gt;
&lt;p&gt;$$x=160step$$&lt;/p&gt;
&lt;p&gt;我要移動1mm需要多少步數&lt;/p&gt;
&lt;p&gt;這對後面機器的校正也會用到，假設說讓機器移動10mm可是卻只移動一半，表示step少一半，再補正回去就可以讓機器正常運轉。&lt;/p&gt;
&lt;h3&gt;控制版腳位&lt;/h3&gt;

&lt;p&gt;這塊版子再當初設計的時候加入了許多可以讓使用者字定義的部份，預留了analogread 以及digital output再aux的部份，讓使用者自行對他定義和使用，我們這次有使用到一顆Servo來夾取一枝筆，當作Z軸使用，再查詢腳位花了一些時間，直到後來才發現左下角，作者有預留給大家使用，分別式D4、D5、D6、D11這4個腳位使用，切忌物將地線和火線接相反。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/smpss91341/automaticcontrol/tree/master/final_control/arduino_autocontrol0113"&gt;程式碼的倉儲&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;腳位的部份我都已經定義好了，可以直接使用。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/autocontrol/2.JPG?raw=true"&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Xy_UETovoK0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h4&gt;後面想要加的東西&lt;/h4&gt;

&lt;p&gt;想要做一個端口，將可以利用python做介面來進行裡面和外面同時可以控制，內部可以先模擬完外面再進行執行。機構再從新想一個，這個問題有點多沒有考慮到。&lt;/p&gt;</content><category term="machine"></category></entry><entry><title>RSA 模組</title><link href="http://project.mde.tw/blog/rsa-mo-zu.html" rel="alternate"></link><published>2016-12-27T20:00:00+08:00</published><updated>2016-12-27T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-27:/blog/rsa-mo-zu.html</id><summary type="html">&lt;p&gt;再看完資料後就整理出來的部份&lt;/p&gt;
</summary><content type="html">&lt;p&gt;再看完資料後就整理出來的部份&lt;/p&gt;


&lt;h3&gt;16版本沒有python2的工具包 因此先不考慮使用16版本的ubuntu&lt;/h3&gt;

&lt;p&gt;Ode--13版本的binding已經改成python3的版本了，改法如下&lt;/p&gt;
&lt;p&gt;setup.py裡面有一個解的地方再18行後面加上讓他去解碼的時候用utf8&lt;/p&gt;
&lt;pre class="brush: python"&gt;
try:
    ode_cflags = [x.decode("utf-8") for x in ode_cflags]

    ode_libs = [x.decode("utf-8") for x in ode_libs]

except:
    pass

    &lt;/pre&gt;

&lt;p&gt;這樣就可以執行他的demo tutorial的範例程式碼
不過這邊只包含open dynamic engine 的引擎部份已經改成python可以控控制他了
這邊要補充一點，因為是compolier C++成so故只要串口做好，就不用在從新make 和install&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/4vMSxYC.png"&gt;&lt;/p&gt;
&lt;p&gt;接下來處理VTK的部份，這部份官網有相關的技術手冊，需要自己cmake所以相對麻煩
中途需要安裝opengl以及ccmake來指定路徑
(教學)[http://ghoshbishakh.github.io/blog/blogpost/2016/07/13/building-vtk-with-python3-wrappers.html]&lt;/p&gt;
&lt;p&gt;ARS模組的部份
只需要把幾個模組的部份改成python3的版本就可以使用了，例如exception , e: 改成exception as e還有print的部份要加括號大致上就這樣，已經修改完成了。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/c7F2ntS.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/leaCRh9.png"&gt;&lt;/p&gt;
&lt;p&gt;今天卡在VTK的部份，最近幾天再把他解出來就可以使用了&lt;/p&gt;
&lt;p&gt;這次改這個open dynamic system改的很快，原因是因為許多問題都是以前已經碰過的，一下就知道如何解題目了，只剩下這個難搞的VTK部份，主要是作者把VTK綁在他自己的模組裡面，像from ars import app就可以呼叫他自己用的模組，這部份我可能再找時間把他做完，剩沒幾步路了。GO&lt;/p&gt;</content><category term="ARS"></category></entry><entry><title>ARS 模組</title><link href="http://project.mde.tw/blog/ars-mo-zu.html" rel="alternate"></link><published>2016-12-26T20:00:00+08:00</published><updated>2016-12-26T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-26:/blog/ars-mo-zu.html</id><summary type="html">&lt;p&gt;再看完資料後就整理出來的部份&lt;/p&gt;
</summary><content type="html">&lt;p&gt;再看完資料後就整理出來的部份&lt;/p&gt;


&lt;p&gt;&lt;a href="http://ars-project.readthedocs.io/en/latest/installation/prerequisites.html"&gt;官方技術手冊&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;使用方法(這邊先講python2的方法)&lt;/h2&gt;

&lt;p&gt;第一步 先把四樣工具找齊&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python-related packages
&lt;li&gt;numpy  cython (這邊用到的模組python)
&lt;li&gt;VTK  (GUI)
&lt;li&gt;Open Dynamics Engine (ODE)  這一個要自己build出來
&lt;/ul&gt;

&lt;p&gt;以下式我測試成功的版本  明天會再用虛擬機跑看看不一樣版本的問題是否有衝突&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;apt-get install python python-dev python-support&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;apt-get install python-numpy cython&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;apt-get install libvtk5.8 python-vtk&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the ode-0.12.tar.gz and unpacking &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;cd ode-0.12&lt;/p&gt;
&lt;p&gt;./configure --enable-double-precision --with-trimesh=opcode --enable-new-trimesh --enable-shared&lt;/p&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;p&gt;make install&lt;/p&gt;
&lt;p&gt;5.因為ODE裡面有python wrapper 要安裝他的binding到自己的python/distage&lt;/p&gt;
&lt;p&gt;cd bindings/python/&lt;/p&gt;
&lt;p&gt;python setup.py install&lt;/p&gt;
&lt;p&gt;安裝的部份就是這些工具了&lt;/p&gt;
&lt;h2&gt;可能要轉成python3的部份&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;VTK(如果要沿用的話)
&lt;li&gt;numpy  cython (這部份可以沿用)
&lt;li&gt;VTK  (要看官方是否有更新或改成OpenGl)
&lt;li&gt;Open Dynamics Engine (ODE)  C++那部份不用動，要動的部份會是在bindings/wrapper
&lt;li&gt;還有ARS模組的python程式碼 
&lt;/ul&gt;

&lt;h2&gt;這部份是DEMO用的&lt;/h2&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/879RXmX.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/EVvOX8F.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/pOZmIll.png"&gt;&lt;/p&gt;
&lt;h2&gt;要做的部份&lt;/h2&gt;

&lt;p&gt;接下來要做的部份就是把他改成python3&lt;/p&gt;
&lt;p&gt;我應該會優先改wrapper再改RSA模組，並且測試和新版的ODE-13符不符合使用上的問題，使用虛擬機測試。&lt;/p&gt;
&lt;p&gt;Wrapper可以優先測試import Ode，我會再測試。&lt;/p&gt;</content><category term="ARS"></category></entry><entry><title>四連桿合成編譯</title><link href="http://project.mde.tw/blog/si-lian-gan-he-cheng-bian-yi.html" rel="alternate"></link><published>2016-12-12T20:00:00+08:00</published><updated>2016-12-12T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-12:/blog/si-lian-gan-he-cheng-bian-yi.html</id><summary type="html">&lt;p&gt;平面四連桿尺寸合成研讀&lt;/p&gt;
</summary><content type="html">&lt;p&gt;平面四連桿尺寸合成研讀&lt;/p&gt;


&lt;p&gt;已經將學長的code看完RGA(基因演算法)的部分&lt;/p&gt;
&lt;p&gt;學長是使用cython來寫演算法的部分，python主要是程式架構而已，要啟動他必須藉著python找答案&lt;/p&gt;
&lt;p&gt;GA演算法大致上的作法&lt;/p&gt;
&lt;p&gt;1.Cp(複製)&lt;/p&gt;
&lt;p&gt;2.crossower(交配)&lt;/p&gt;
&lt;p&gt;3.mutate(突變)&lt;/p&gt;
&lt;p&gt;4.fitness(適應值)&lt;/p&gt;
&lt;p&gt;5.report(回報)&lt;/p&gt;
&lt;p&gt;6.getParamValue&lt;/p&gt;
&lt;p&gt;設定邊界(Ax,Ay) (Dx,Dy) 是兩個fix的座標點的上下界&lt;/p&gt;
&lt;p&gt;Max upper AX AY DX DY L0 L1 L2 L3 L4&lt;/p&gt;
&lt;p&gt;Min lower AX AY DX DY L0 L1 L2 L3 L4&lt;/p&gt;
&lt;p&gt;目標點給的點數，學長的論文裡面是(0,0)到(10,10)的點&lt;/p&gt;
&lt;p&gt;target path [(x,y)(x1,y1)()()()()()()]&lt;/p&gt;
&lt;p&gt;all Expression 這項我不懂&lt;/p&gt;
&lt;p&gt;A,L0,a0,D,B,B,L1,L2,D,C,B,L3,L4,C,E&lt;/p&gt;
&lt;p&gt;Driving  A 驅動桿&lt;/p&gt;
&lt;p&gt;Follower D 被動桿&lt;/p&gt;
&lt;p&gt;Link L0 L1 L2 L3 L4 連接桿&lt;/p&gt;
&lt;p&gt;connect  L1 連接桿&lt;/p&gt;
&lt;p&gt;nParm 19 這樣不懂&lt;/p&gt;
&lt;p&gt;nPop 250  這樣不懂&lt;/p&gt;
&lt;p&gt;pCross 0.95 交配率&lt;/p&gt;
&lt;p&gt;pMute 0.05 突變率&lt;/p&gt;
&lt;p&gt;pWin 0.05  勝率&lt;/p&gt;
&lt;p&gt;bDelta 5  突變參數&lt;/p&gt;
&lt;p&gt;maxGen 1500  最大子代&lt;/p&gt;
&lt;p&gt;report 100  回報週期&lt;/p&gt;
&lt;p&gt;我目前是在linux上面做，先將cython編譯成so來做連接庫&lt;/p&gt;
&lt;p&gt;python3 setup.py ext_build &lt;/p&gt;
&lt;p&gt;做成連結庫，這部分有個問題，我有辦法做成在linux電腦上面都能用的連結庫嗎?
底下是我的倉儲&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/smpss91341/pyslvs_generate/blob/master"&gt;pyslvs_generate&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以及我解出來的答案，會有19組 ，我當時猜想會不會是取前9組答案就好，因為後面那些答案我不知道是要做什麼的
-29.8262,26.5961,-36.8366,3.3764,4.2368,29.9217,9.2923,36.5820,39.4538,59.0497,4                                                                                                                     1.7408,50.1189,34.8905,30.3267,77.2301,85.4167,102.6586,68.3543,94.1729&lt;/p&gt;
&lt;p&gt;這些答案排版起來就是(Ax,Ay) (Dx,Dy) L0 L1 L2 L3 L4&lt;/p&gt;
&lt;p&gt;(Ax,Ay)  (-29.8262,26.5961)&lt;/p&gt;
&lt;p&gt;(Dx,Dy)  (-36.8366,3.3764)&lt;/p&gt;
&lt;p&gt;L0   4.2368&lt;/p&gt;
&lt;p&gt;L1  29.9217&lt;/p&gt;
&lt;p&gt;L2  9.2923&lt;/p&gt;
&lt;p&gt;L3  36.5820&lt;/p&gt;
&lt;p&gt;L4  39.4538&lt;/p&gt;
&lt;p&gt;第10項以後我就不知道要做什麼了，回傳的答案給的，這個是通過
(1 ,1),(2 ,2),(3 ,3),(4 ,4),(5 ,5),(6 ,6),(7 ,7),(8 ,8),(9 ,9),(10,10) 這些點座標的連桿&lt;/p&gt;</content><category term="四連桿合成"></category></entry><entry><title>四連桿合成</title><link href="http://project.mde.tw/blog/si-lian-gan-he-cheng.html" rel="alternate"></link><published>2016-12-08T20:00:00+08:00</published><updated>2016-12-08T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-08:/blog/si-lian-gan-he-cheng.html</id><summary type="html">&lt;p&gt;平面四連桿尺寸合成研讀&lt;/p&gt;
</summary><content type="html">&lt;p&gt;平面四連桿尺寸合成研讀&lt;/p&gt;


&lt;p&gt;學長的論文裡面包含了許多範例和數學方程式，也有看到可以加到我們的Pyslvs裡面，說不定接下來就可以只靠路徑就把四連桿的樣子做出來。&lt;/p&gt;
&lt;h2&gt;找不到學長當時論文的電子檔&lt;/h2&gt;

&lt;h2&gt;分析連桿的位置&lt;/h2&gt;
&lt;p&gt;兩點一線一夾角&lt;/p&gt;
&lt;p&gt;圖形後面再補上，還在研究latex畫圖&lt;/p&gt;
&lt;h2&gt;對四連桿機構進行分析&lt;/h2&gt;
&lt;p&gt;學長著重在RRRR連桿組的設計&lt;/p&gt;
&lt;h2&gt;接下來對演算法進行分析&lt;/h2&gt;
&lt;p&gt;GA(基因演算法)&lt;/p&gt;
&lt;p&gt;DE(差分演算法)&lt;/p&gt;
&lt;p&gt;FA(螢火蟲演算法)&lt;/p&gt;
&lt;h2&gt;問題點&lt;/h2&gt;
&lt;p&gt;學長裡面用到的方程式不太理解他的意思&lt;/p&gt;
&lt;p&gt;$$Fit_{min} = \sum_{i=0}^{n}\sqrt{(O_{x,i}-N_{x,i})^2+(O_{y,i}-N_{y,i})^2}$$&lt;/p&gt;
&lt;p&gt;這個式子不太理解他在求什麼東西&lt;/p&gt;
&lt;p&gt;O和N的代表意義&lt;/p&gt;</content><category term="四連桿合成"></category></entry><entry><title>寫字機</title><link href="http://project.mde.tw/blog/xie-zi-ji.html" rel="alternate"></link><published>2016-12-07T20:00:00+08:00</published><updated>2016-12-07T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-07:/blog/xie-zi-ji.html</id><summary type="html">&lt;p&gt;起源
一般寫字機，都是用最基本的XYZ型式做的，因為在thingverse上面找到相關的機器，想說就來做做看。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;起源
一般寫字機，都是用最基本的XYZ型式做的，因為在thingverse上面找到相關的機器，想說就來做做看。&lt;/p&gt;


&lt;p&gt;&lt;a href="http://www.thingiverse.com/thing:1517211"&gt;thingverse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://thingiverse-production-new.s3.amazonaws.com/renders/1a/c8/b9/18/eb/4d67f546ef9ffa51918d3309259fbfb4_preview_featured.jpg"&gt;&lt;/p&gt;
&lt;p&gt;在機構方面看到許多相關資料，想試試看不一樣的機構製做這個平台，因此搜尋了CoreXY這種結構的皮帶運動，看他的介紹是可以在高速運動下使用的機構，因為手邊也有3D列印機，就把他列印出來試試看可不可行。&lt;/p&gt;
&lt;h3&gt;電機相關&lt;/h3&gt;

&lt;p&gt;在機構處理完就開始找電控的板子，因為這台機台和CNC的控制方式類似，同樣都擁有XY兩軸，在加上手邊只有arduino ，就嘗試性的google了一下:"Arduino CNC"，結果就找到了這塊版子&lt;/p&gt;
&lt;p&gt;&lt;img src="http://3.bp.blogspot.com/-ZKQO9V8WN5Y/VJqsswmk3uI/AAAAAAAAFVM/_g8BcOxZfsQ/s1600/DSC04958.JPG"&gt;&lt;/p&gt;
&lt;p&gt;這塊版子在大量生產下的原因，價錢也非常的平價，加上也是開源系統，全部控制加一加，1000元以內有找，加上這塊板子也是用A4988這塊驅動晶片，和大部分3D列印機的驅動晶片相同，因為有四組，可以控制四顆馬達。&lt;/p&gt;
&lt;p&gt;在晶片上面可以看到有個可以旋轉的螺絲頭，他是負責調電壓，扭力要大一點就把電壓開大一點(千萬不要開太大會超燙)，大約就調到0.37V就已經很夠了，因為不是重負荷，調整的方法就是，使用三用電錶，一端放在螺絲上，一端在地線，就可以測得他的電壓，切記小心，不小心短路就沒了。&lt;/p&gt;
&lt;p&gt;接下來就開始往韌體方向尋找相關方法，還在想說可能要自己寫控制器，算數學的時候，發現到一套從以前就已經開源的CNC韌體Grbl，在裡面的程式碼可以學習相關的控制器撰寫，&lt;a href="http://bengler.no/grbl"&gt;grbl&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;控制方面&lt;/h3&gt;

&lt;p&gt;在一般傳統CNC，都會有sensor，知道目前刀軸現在的位置，程式會判斷是否要補正，但是這些感測器的價錢都不便宜，就我們學生而言，這已經不是負荷的起的價錢，Grbl利用一些方法來防止步數少的問題，&lt;/p&gt;
&lt;p&gt;EX:梯形速度規畫&lt;/p&gt;
&lt;p&gt;&lt;img src="http://1.bp.blogspot.com/-0sE-adjlNH4/VJquqjygi-I/AAAAAAAAFWA/k6iB81WbMtk/s1600/1seg.png"&gt;&lt;/p&gt;
&lt;p&gt;遇到圓角切削，如果按照剛剛看到的梯形會變成非常多小段進行控制，運轉會有問題&lt;/p&gt;
&lt;p&gt;&lt;img src="http://4.bp.blogspot.com/-Wo_9Km2DHME/VJquqgsWgfI/AAAAAAAAFWE/pTZYW4P2nrw/s1600/cur-seg-issue.png"&gt;&lt;/p&gt;
&lt;p&gt;他的解法就變成了這樣Vjunction，主要是用在兩條線夾角趨近於180度，那就有可能是高密度曲線&lt;/p&gt;
&lt;p&gt;&lt;img src="http://2.bp.blogspot.com/-SYTIJ1CO0ws/VJquqshLc4I/AAAAAAAAFWM/XnbTXLagyAM/s1600/2block-jun.png"&gt;&lt;/p&gt;
&lt;p&gt;可是一但遇到夾角為90度，那代表他會變成往反方向移動，那就要確實減速
&lt;img src="http://2.bp.blogspot.com/-h6LGIQVnmAU/VJqsucN6dkI/AAAAAAAAFVY/W1cmgbbq4cA/s1600/eq1.png"&gt;&lt;/p&gt;
&lt;p&gt;1.Ventry 是第一條線的速度向量&lt;/p&gt;
&lt;p&gt;2.Vexit 是第二條線的速度向量&lt;/p&gt;
&lt;p&gt;3.Ventry和Vexit的夾角 θ&lt;/p&gt;
&lt;p&gt;4.綠色線 δ 為一常數&lt;/p&gt;
&lt;p&gt;5.R 為圓的半徑&lt;/p&gt;
&lt;p&gt;式子(1)：基本 sin 函數, θ, δ, Ventry 邊組成的三角形來計算&lt;/p&gt;
&lt;p&gt;式子(2)(3)：把它左右搬移一下, 得到求 R 的算式&lt;/p&gt;
&lt;p&gt;由於式子 (3) 可以用其下方的算式替換, 結果就是我們只要運用兩次開根號就求得解&lt;/p&gt;
&lt;p&gt;雖然我們畫圖可以很清楚知道 θ 的角度, 但是 CNC 機器只收到該往哪裡移動&lt;/p&gt;
&lt;p&gt;它並沒法知道夾角, 而求這夾角需要頭痛的 acos 來先找到 θ 值&lt;/p&gt;
&lt;p&gt;但是對於8bit的 MCU這會是運算負擔，在Grbl裡面的planner.c 的 plan_buffer_line&lt;/p&gt;
&lt;p&gt;他的韌體有許多可以用到的數學，值得一一解開看他的控制器，可惜的是目前的專業知識不夠讓我完全了解他的程式在訴說的事情，雖然都有註解可以查，可能會慢慢的解開一包包在寫的東西。&lt;/p&gt;</content><category term="python-control"></category></entry><entry><title>機台控制</title><link href="http://project.mde.tw/blog/ji-tai-kong-zhi.html" rel="alternate"></link><published>2016-12-02T20:00:00+08:00</published><updated>2016-12-02T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-12-02:/blog/ji-tai-kong-zhi.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;已經可以使用python進行控制了,只是目前gui還在實做當中,或許再一陣子就可以做出gui了,目前單獨用讀檔案的方式在送值到機器裡面。&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/bo7XS4TGyNs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="python-control"></category></entry><entry><title>automatic control</title><link href="http://project.mde.tw/blog/automatic-control.html" rel="alternate"></link><published>2016-10-01T20:00:00+08:00</published><updated>2016-10-01T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-10-01:/blog/automatic-control.html</id><summary type="html">&lt;p&gt;自動控制系統中理解的部份筆記&lt;/p&gt;
</summary><content type="html">&lt;p&gt;自動控制系統中理解的部份筆記&lt;/p&gt;


&lt;p&gt;相關名詞：&lt;/p&gt;
&lt;p&gt;1.控制器&lt;/p&gt;
&lt;p&gt;2.pole&lt;/p&gt;
&lt;p&gt;3.古典控制&lt;/p&gt;
&lt;p&gt;4.現代控制&lt;/p&gt;
&lt;p&gt;5.後現代控制&lt;/p&gt;
&lt;p&gt;6.拉普拉斯變換&lt;/p&gt;
&lt;p&gt;7.回授(sensor)&lt;/p&gt;
&lt;p&gt;大致上是這些相關名詞真的要使用的話看是要用現代的理論(數值的方法讓他學習),或者利用古典的方式推出數學方程式,利用laplace的方法,將T domain 轉到S domain將解解出來後,再進行調值和使用讓(kp ki kd )利用pid的方式進行控制相關的物理量。
才看一部分的自動控制,感覺還有一大部分會不了解,光是這樣我就決的自動控制在機械裡面是不可或缺的,只要他要動,就可以設計一套控制器來控制他,無論是在簡單的馬達控制或者是大型的機台控制,這些理論一定會實際的應用在這些控制器裡面。&lt;/p&gt;</content><category term="python-control"></category></entry><entry><title>python3 control</title><link href="http://project.mde.tw/blog/python3-control.html" rel="alternate"></link><published>2016-09-29T20:00:00+08:00</published><updated>2016-09-29T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-09-29:/blog/python3-control.html</id><summary type="html">&lt;p&gt;安裝與使用教學&lt;/p&gt;
</summary><content type="html">&lt;p&gt;安裝與使用教學&lt;/p&gt;


&lt;p&gt;可以使用pip3 install的方式進行安裝&lt;/p&gt;
&lt;p&gt;1.要先安裝Slycot&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jgoppert/Slycot"&gt;Slycot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可以使用pip進行安裝&lt;/p&gt;
&lt;p&gt;2.再來需要安裝一些工具&lt;/p&gt;
&lt;p&gt;numpy&lt;/p&gt;
&lt;p&gt;matplotlib&lt;/p&gt;
&lt;p&gt;3.接者才能進行安裝python-control&lt;/p&gt;
&lt;p&gt;pip install control&lt;/p&gt;
&lt;p&gt;如果是python3版本的話,他有相對應的版本,會自動選擇,前提是要使用pip3&lt;/p&gt;
&lt;p&gt;安裝完以後就可以跑模擬和使用他的模組了&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coursemdetw/project_site_files/gh-pages/files/2016spring/g1/python_control.png"&gt;&lt;/p&gt;</content><category term="python-control"></category></entry><entry><title>dynamic engine with python3</title><link href="http://project.mde.tw/blog/dynamic-engine-with-python3.html" rel="alternate"></link><published>2016-09-25T20:00:00+08:00</published><updated>2016-09-25T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-09-25:/blog/dynamic-engine-with-python3.html</id><summary type="html">&lt;p&gt;今天在找相關開源的運算引擎找到的資料&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今天在找相關開源的運算引擎找到的資料&lt;/p&gt;


&lt;p&gt;&lt;a href="https://github.com/pybox2d/pybox2d"&gt;pybox2d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;今天找到一篇看似可以使用的開源運動模擬,範例裡面是使用pygame來顯示運動模擬,而且是符合python3 版本的,可能先從這邊下手,或者有找到更好的大型模擬引擎,已經有先build成so 和swig寫的啟動檔,執行他的範例是使用自由落體當範例,看起來是可以使用的,但是裡面的物理引擎沒有大型的這麼強大（bullet newton ),因為編成so和swig,就可以和pyslvs一樣做成可攜系統,直接包在裡面使用,而部用綁系統。&lt;/p&gt;
&lt;p&gt;open dynamic engine 還沒真的深入下去看資料和相關python的部份,昨天作的bullet再python2的部份,確定真的可以使用,有一個範例是作自由落體的部份看值大致上是差不多相等的。&lt;/p&gt;
&lt;p&gt;這次使用的pybox2d我也有作一個自由落體的範例程式,利用pygame呈現結果,詳細要使用還要看參考說明書來使用函式庫。&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coursemdetw/project_site_files/gh-pages/files/2016spring/g1/so.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coursemdetw/project_site_files/gh-pages/files/2016spring/g1/%E8%87%AA%E7%94%B1%E8%90%BD%E9%AB%94.png"&gt;&lt;/p&gt;</content><category term="dynamic"></category></entry><entry><title>bullet dynamic engine</title><link href="http://project.mde.tw/blog/bullet-dynamic-engine.html" rel="alternate"></link><published>2016-09-24T20:00:00+08:00</published><updated>2016-09-24T20:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-09-24:/blog/bullet-dynamic-engine.html</id><summary type="html">&lt;p&gt;目前唯一可惜的部份是只能用在python2.7上面&lt;/p&gt;
</summary><content type="html">&lt;p&gt;目前唯一可惜的部份是只能用在python2.7上面&lt;/p&gt;


&lt;p&gt;今天將v-rep裡面的運動引擎,找了許多資料其中有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bullet dynamic (blender)
&lt;li&gt;newton 
&lt;li&gt;ODE (opensource dynamic engine)
&lt;/ul&gt;

&lt;p&gt;再找了許多資料後,發現現在這些引擎都幾乎和python掛不著邊,資料相當稀少,目前已經將bullet的部份轉成可以用python去調度裡面的運算模擬,例如碰撞 慣性等,但是目前有個極大的問題,swap的部份部是我寫的,當時他是使用python2.7,已經沒有開發成python3以上的版本,但是我不知道如何去撰寫關於這個swap的部份,可能要請老師教我們如何撰寫。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/20tab/pybulletphysics.git"&gt;https://github.com/20tab/pybulletphysics.git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://github.com/coursemdetw/project_site_files/blob/gh-pages/files/2016spring/g1/dynamic.png?raw=true"&gt;&lt;/p&gt;</content><category term="dynamic"></category></entry><entry><title>Pyslvs 學習</title><link href="http://project.mde.tw/blog/pyslvs-xue-xi.html" rel="alternate"></link><published>2016-09-24T12:00:00+08:00</published><updated>2016-09-24T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-09-24:/blog/pyslvs-xue-xi.html</id><summary type="html">&lt;p&gt;本篇關於開發的分配
</summary><content type="html">&lt;p&gt;本篇關於開發的分配
&lt;/p&gt;
&lt;h5&gt; 參考範例所延伸的心得&lt;/h5&gt;

&lt;p&gt;這次開發繼續將手上的工具solvespace轉成自己手上的工具,本次開發會往以下幾個方向同時進行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;網路的部份  相關技術Juypter hub的平行運算使用帶入解方程式
&lt;li&gt;dynamic 相關技術再vrep裡面應該可以找到
&lt;li&gt;系統控制的部份 modidied
&lt;/ul&gt;

&lt;p&gt;這幾個方案可能會接下去進行開發,主要我想作的部份可能是運動那一篇,今天已經學到大致上的畫點劃線等的參數位置,相關函數大致上了解,可能朝著working model的方式進行開發,讓大致上的運動的方式,可以做成實作的方案,驗證的部份將vrep拿出來驗證,解出來的解是否正確,大致上就是進去幫忙開發延伸的功能,這次這個開發案會套用submodule的方式進行開發,可以再主倉儲看到目前已經有許多的子倉儲建立出來,&lt;/p&gt;
&lt;h5&gt;底下是今天學習的筆記&lt;/h5&gt;

&lt;p&gt;今天學習的部份先部探討如何去make那些so檔和c++部份的東西,今天只探討如何使用,大致上使用上的方法可以分成幾項來講,動態的部份部確定是要朝向vrep還是要往哪部份走,,有點忘記老師講的工具是哪一套,因為講的有點多.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定義系統  System(500)
&lt;li&gt;初始3d的原點  Point3d(p0, p1, p2)
&lt;li&gt;做一條XY軸的法線  Slvs_MakeQuaternion
&lt;li&gt;畫一個工作平面  Workplane
&lt;li&gt;畫一個2d的點約束再3d的點上  dragged
&lt;li&gt;接著開始進行製作點座標
&lt;li&gt;約束
&lt;li&gt;將線畫出來
&lt;li&gt;設定角度
&lt;li&gt;解題會得掉回傳值再決定狀態
&lt;/ul&gt;

&lt;p&gt;Q:
目前遇到的問題是來自於這些物理引擎不知道可以如何作接口到python上&lt;/p&gt;</content><category term="Pyslvs"></category></entry><entry><title>40323143 - 機械腳構想</title><link href="http://project.mde.tw/blog/40323143-ji-jie-jiao-gou-xiang.html" rel="alternate"></link><published>2016-08-22T11:29:00+08:00</published><updated>2016-08-22T11:29:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-08-22:/blog/40323143-ji-jie-jiao-gou-xiang.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/c3jBcx7.jpg"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>QT GUI</title><link href="http://project.mde.tw/blog/qt-gui.html" rel="alternate"></link><published>2016-08-21T22:00:00+08:00</published><updated>2016-08-21T22:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-21:/blog/qt-gui.html</id><summary type="html">&lt;p&gt;change the the way to control the arm
</summary><content type="html">&lt;p&gt;change the the way to control the arm
&lt;/p&gt;
&lt;p&gt;今天使用了QT做了介面，接下來會用點座標，將實體所走出去的曲線，再程式裡面也可以畫出相同的曲線，也可以同時把Vrep裡面的模擬出來的曲線，一起畫出來，以此驗證我下的點是正確的曲線，接下來會做新的一頁，畫方程式曲線圖，左邊會變成輸入方程式，右邊就會生成他的圖形。&lt;/p&gt;
&lt;h3&gt;2Axis&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/35SShog.png"&gt;&lt;/p&gt;
&lt;h3&gt;3Axis&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/UvnJMrC.png"&gt;&lt;/p&gt;</content><category term="machine Vrep"></category></entry><entry><title>Vrep machine arm</title><link href="http://project.mde.tw/blog/vrep-machine-arm.html" rel="alternate"></link><published>2016-08-20T22:00:00+08:00</published><updated>2016-08-20T22:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-20:/blog/vrep-machine-arm.html</id><summary type="html">&lt;p&gt;change the the way to control the arm
</summary><content type="html">&lt;p&gt;change the the way to control the arm
&lt;/p&gt;
&lt;p&gt;I use the Inverse equation to compute the machine arm need to turn angle of rotation. After we use is to give the angel to control the arm, we can give the (x,y,z)point to control rotate correct angle and catch the bottle. And we will to develope the auto control by use OpenCv to judge when will to catch the printer components.
Today had install the PyQt5, we will study the QT tutorial, and develope beautiful interface to control our machine.
Vrep in Linux version need to makefile by youself, it have in remoteAPI in the folder, I can control Vrep in my ubuntu computer.
The code have update on my Vrep_python3_control repository/mixer_test&lt;/p&gt;
&lt;p&gt;https://github.com/smpss91341/Vrep_python3_control&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/5PpDI3A.png"&gt;&lt;/p&gt;</content><category term="machine Vrep"></category></entry><entry><title>PyQt5 install</title><link href="http://project.mde.tw/blog/pyqt5-install.html" rel="alternate"></link><published>2016-08-19T12:00:00+08:00</published><updated>2016-08-19T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-19:/blog/pyqt5-install.html</id><summary type="html">&lt;p&gt;install Question&lt;/p&gt;
</summary><content type="html">&lt;p&gt;install Question&lt;/p&gt;


&lt;p&gt;問題：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;作法：http://blog.csdn.net/idber/article/details/40076821

安裝PyQt的圖形化介面的問題

再安裝eric6 的介面時發生的問題

所有工具都裝好了

包括

1.QT

2.PyQt5

3. QScintilla2

就只剩eric6這個圖形化介面裝不進去了

Error:

Sorry, please install QScintilla2 and

its PyQt5/PyQt4 wrapper.

Error: /opt/Qt/5.3/gcc_64/lib/libQt5Gui.so.5: undefined symbol:             z_deflateReset
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="machine Vrep"></category></entry><entry><title>Vrep Bug in Linux</title><link href="http://project.mde.tw/blog/vrep-bug-in-linux.html" rel="alternate"></link><published>2016-08-19T12:00:00+08:00</published><updated>2016-08-19T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-19:/blog/vrep-bug-in-linux.html</id><summary type="html">&lt;p&gt;無法執行windows的動態連結庫，remoteAPI.dll&lt;/p&gt;
</summary><content type="html">&lt;p&gt;無法執行windows的動態連結庫，remoteAPI.dll&lt;/p&gt;


&lt;p&gt;Vrep haved install in Ubuntu and when we want to use our project control panel,because the RemoteAPI.dll isn't match with the Linux system, so how can we do for the remoteAPI.dll.&lt;/p&gt;
&lt;p&gt;And why I use the English to write the blog,because my Ubuntu chinese input program didn't work on leo-editor, it can use everywhere but can't use in leo.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/7gP3Zpy.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/JiU0H1f.png"&gt;&lt;/p&gt;</content><category term="machine Vrep"></category></entry><entry><title>40323143 - 滾珠螺桿減速機構想</title><link href="http://project.mde.tw/blog/40323143-gun-zhu-luo-gan-jian-su-ji-gou-xiang.html" rel="alternate"></link><published>2016-08-16T12:00:00+08:00</published><updated>2016-08-16T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-08-16:/blog/40323143-gun-zhu-luo-gan-jian-su-ji-gou-xiang.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;利用滾珠作為媒介，在兩個不同節距螺桿間傳遞動力，達到增減速效果。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/vo3Va99.jpg"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 手臂設計流程</title><link href="http://project.mde.tw/blog/40323143-shou-bi-she-ji-liu-cheng.html" rel="alternate"></link><published>2016-08-12T12:00:00+08:00</published><updated>2016-08-12T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-08-12:/blog/40323143-shou-bi-she-ji-liu-cheng.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;1.定義客觀值&lt;/p&gt;
&lt;p&gt;將手臂外既有的空間以數值表現&lt;/p&gt;
&lt;p&gt;2.規劃路徑&lt;/p&gt;
&lt;p&gt;(1)定義原點&lt;/p&gt;
&lt;p&gt;(2)定義夾取點&lt;/p&gt;
&lt;p&gt;(3)定義可行路徑範圍&lt;/p&gt;
&lt;p&gt;(4)依需求決定路徑&lt;/p&gt;
&lt;p&gt;3.決定旋轉軸及旋轉軸安排&lt;/p&gt;
&lt;p&gt;此旋轉軸指動力輸入軸&lt;/p&gt;
&lt;p&gt;4.推導路徑方程式&lt;/p&gt;
&lt;p&gt;依旋轉軸數個三角函數組合成一套路徑方程式&lt;/p&gt;
&lt;p&gt;5.決定旋轉軸動力安排&lt;/p&gt;
&lt;p&gt;決定旋轉軸動力輸入方式，直接輸入或以連桿等任何方式輸入旋轉軸&lt;/p&gt;
&lt;p&gt;6.決定手臂連接桿及組裝配合尺寸&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>Vrep手臂逆向</title><link href="http://project.mde.tw/blog/vrepshou-bi-ni-xiang.html" rel="alternate"></link><published>2016-08-12T12:00:00+08:00</published><updated>2016-08-12T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-12:/blog/vrepshou-bi-ni-xiang.html</id><summary type="html">&lt;p&gt;利用tkinter連接給最後的點座標，算出轉軸的角度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;利用tkinter連接給最後的點座標，算出轉軸的角度&lt;/p&gt;


&lt;p&gt;因為目前是使用class的方法去繼承function，因此可以用兩個頁面進行控制3DP和手臂的地方，因為把逆向的方程式帶進去了，可以直接給他要到的座標，就可以算出兩個角度的大小，以及範圍。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/fk51PNt.png"&gt;&lt;/p&gt;
&lt;h3&gt;實驗室近況報告&lt;/h3&gt;

&lt;p&gt;目前第三組已有部分組員回歸團隊，並著手進行OpenCv的開發，以及讀相關的資料和論文，而另外兩組目前都在著手報告的部分，以及Latex等設定檔和撰寫內容，目前大家進度都卡住，可能最近會有一陣子停頓期，大家的開發能力在七月也用的差不多，像是從0開始的V-rep到現在可以控制整合，動態模擬，Solvespace也改成python3的版本，大家的東西也串流再一起，像是我們手臂的部分，從模擬，推出數學方程式，到solvespace算點座標劃出曲線方程式以及路徑，最後一路的推導方程式，到現在只要給點就可以控制移動的路徑。&lt;/p&gt;
&lt;p&gt;下學期的學弟妹應該會有不錯的收穫，除了有老師搬上flask的pygroup，還有新版的solvespace for python3，和最新的Vrep控制、組裝、模擬，這些都可以向下交接了，這些東西都可以結合我們的cad能力，應該是不錯的工具以及多元整合。&lt;/p&gt;
&lt;p&gt;可能是我進度壓的緊了點，大家呈現疲倦的樣子，想說讓大家休息一兩周，好好恢復精神，讓大家可以動力繼續往更高的層次邁進，可能這一兩周，進度會比較少，讓大家輕鬆一周。&lt;/p&gt;</content><category term="machine Vrep"></category></entry><entry><title>手臂逆向控制推導</title><link href="http://project.mde.tw/blog/shou-bi-ni-xiang-kong-zhi-tui-dao.html" rel="alternate"></link><published>2016-08-05T12:00:00+08:00</published><updated>2016-08-05T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-08-05:/blog/shou-bi-ni-xiang-kong-zhi-tui-dao.html</id><summary type="html">&lt;p&gt;此篇為使用python3給末端點座標，求轉軸的兩個角度&lt;/p&gt;
</summary><content type="html">&lt;p&gt;此篇為使用python3給末端點座標，求轉軸的兩個角度&lt;/p&gt;


&lt;h3&gt;上一篇推導的補充&lt;/h3&gt;

&lt;p&gt;由上一篇可以得知手臂的逆向推導公式，可是存在一個問題，並沒有將方程式列出來，最後證明出的面積是由順向方程式的角度去限制角度將每個角度所會經過的路徑會畫出來。&lt;/p&gt;
&lt;p&gt;今天從新將方程式從新推導，因為不確定自己推導是否正確，我們幾個人將工具備齊，利用順向法確認算出來的角度是否有包含於在面積裡面，使用Vrep確定轉軸的角度是否正確，前面幾次因為設錯角度，造成轉軸的角度都不是正確的轉軸，後來利用餘弦定理的方法，終於推導出方程式。&lt;/p&gt;
&lt;p&gt;接下知道點座標後，就可以利用點得到正確的角度，轉軸轉向正確的角度夾取物件，也可以同時控制V-rep和實體的部分，是否要配合影像辨識取點座標，目前還在考慮當中，還未執行，可能先用Vrep模擬取下列印件的方式為優先，手臂的控制介面目前進度到可以同時在兩個頁面控制printer和手臂。&lt;/p&gt;
&lt;p&gt;$$\theta_T = cos^{-1}(\frac{x^2+y^2-L1^2-L2^2}{2\times L1\times L2})$$&lt;/p&gt;
&lt;p&gt;$$\theta_n = cos^{-1}(\frac{x}{\sqrt{x^2+y^2}}))$$&lt;/p&gt;
&lt;p&gt;$$\theta_\alpha = cos^{-1}(\frac{x^2+y^2+L1^2-L2^2}{2\times L1\times \sqrt{x^2+y^2}})$$&lt;/p&gt;
&lt;h6&gt;大軸旋轉的角度&lt;/h6&gt;

&lt;p&gt;$$\theta_2 = 90 - (\theta_n + \theta_\alpha)$$&lt;/p&gt;
&lt;h6&gt;小軸旋轉的角度&lt;/h6&gt;

&lt;p&gt;$$\theta_3 = \theta_T - \theta_2$$&lt;/p&gt;
&lt;h3&gt;python 方程式推導&lt;/h3&gt;

&lt;pre class="brush: python"&gt;
import math
from math import *

L1 = 135.0
L2 = 145.0

#X ,Y= 0,0

x =120.0
y = 10.0

theate = float((x*x+y*y-L1*L1-L2*L2)/(2*L1*L2))

print(theate)
rad = math.acos(theate)
print(rad)
tha = math.degrees(rad)
#tha為算出來的角度
print("算出來的",tha)

###
##test==================

#thn = arcos(x/(sqrt(x^2+y^2)))
#tha = (x^2+y^2+L1^2+L2^2)/(2(sqrt(x^2+y^2)*L1))

theatanr = math.acos(x/(math.sqrt(x*x+y*y)))
theatan = math.degrees(theatanr)
#theataN的角度
print("theatan角度",theatan)
theatalphar = math.acos((x*x+y*y+L1*L1-L2*L2)/(2*math.sqrt(x*x+y*y)*L1))

theatalpha = math.degrees(theatalphar)
#theatAlpha的角度
print("theatalpha角度",theatalpha)

#theata2 = theatan + theatAlpha
#theata2大軸轉的角度
test = theatan+theatalpha
theata2 = 90- test
print("theata2",theata2)
#theata3 = tha - theata2
#theata3小軸轉的角度
theata3 = tha - test
print("theata3",theata3)

&lt;/pre&gt;</content><category term="machine Vrep"></category></entry><entry><title>40323131日誌 105/07/31</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050731.html" rel="alternate"></link><published>2016-07-31T22:51:00+08:00</published><updated>2016-07-31T22:51:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-31:/blog/40323131ri-zhi-1050731.html</id><summary type="html">&lt;p&gt;手臂的推導角度公式
</summary><content type="html">&lt;p&gt;手臂的推導角度公式
&lt;/p&gt;
&lt;h3&gt;角度推導公式&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/hBZPkTS.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;先用圖解法解，再來用python-solvespace 來驗證點坐標是否相符&lt;/h3&gt;
&lt;/br&gt;
&lt;h4&gt;底下是程式碼，可以跑出所有結果&lt;/h4&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;
from slvs import *
from math import *

def arm(degree1, degree2):
    sys = System(500)
    g = 1

    #原點Point0
    p0 = sys.add_param(0.0)
    p1 = sys.add_param(0.0)
    p2 = sys.add_param(0.0)
    Point0 = Point3d(p0, p1, p2)

    #XY法線
    qw, qx, qy, qz = Slvs_MakeQuaternion(1, 0, 0, 0, 1, 0)
    p3 = sys.add_param(qw)
    p4 = sys.add_param(qx)
    p5 = sys.add_param(qy)
    p6 = sys.add_param(qz)
    Normal1 = Normal3d(p3, p4, p5, p6)

    #工作平面
    Workplane1 = Workplane(Point0, Normal1)

    #3D版的Point0=&gt;Point1
    p7 = sys.add_param(0.0)
    p8 = sys.add_param(0.0)
    Point1 = Point2d(Workplane1, p7, p8)
    Constraint.dragged(Workplane1, Point1)

    #Point2
    p9 = sys.add_param(10.0)
    p10 = sys.add_param(10.0)
    Point2 = Point2d(Workplane1, p9, p10)
    p11 = sys.add_param(-20.0)
    p12 = sys.add_param(20.0)
    Point3 = Point2d(Workplane1, p11, p12)
    p13 = sys.add_param(-30.0)
    p14 = sys.add_param(15.0)
    Point4 = Point2d(Workplane1, p13, p14)
    p15 = sys.add_param(-40.0)
    p16 = sys.add_param(10.0)
    Point5 = Point2d(Workplane1, p15, p16)
    #基線點
    p17 = sys.add_param(10.0)
    p18 = sys.add_param(0.0)
    Point6 = Point2d(Workplane1, p17, p18)
    Constraint.dragged(Workplane1, Point6)
    Line0 = LineSegment2d(Workplane1, Point1, Point6)
    Constraint.distance(55, Workplane1, Point1, Point2)
    Constraint.distance(135, Workplane1, Point2, Point3)
    Constraint.distance(55, Workplane1, Point3, Point4)
    Constraint.distance(145, Workplane1, Point4, Point5)
    Constraint.distance(135, Workplane1, Point4, Point1)
    Line1 = LineSegment2d(Workplane1, Point1, Point2)
    Line2 = LineSegment2d(Workplane1, Point3, Point4)
    Line3 = LineSegment2d(Workplane1, Point1, Point4)
    Constraint.on(Workplane1, Point5, Line2)
    Constraint.angle(Workplane1, degree1, Line0,  Line3, False)
    Constraint.angle(Workplane1, degree2, Line0,  Line1, False)


    sys.solve()
    if (sys.result == SLVS_RESULT_OKAY):
        print ("點座標：")
        print(("P5(%.3f %.3f %.3f)")%(sys.get_param(15).val, sys.get_param(16).val, sys.get_param(2).val))
        print(("P4(%.3f %.3f %.3f)")%(sys.get_param(13).val, sys.get_param(14).val, sys.get_param(2).val))
        #print(("P3(%.3f %.3f %.3f)")%(sys.get_param(11).val, sys.get_param(12).val, sys.get_param(2).val))
        #print(("P2(%.3f %.3f %.3f)")%(sys.get_param(9).val, sys.get_param(10).val, sys.get_param(2).val))
        print ("%d DOF" % sys.dof)
    elif (sys.result == SLVS_RESULT_INCONSISTENT):
        print ("solve failed")
        print ("SLVS_RESULT_INCONSISTENT")
        print ("%d DOF" % sys.dof)
        for i in range(sys.faileds):
            print(" %lu", sys.failed[i]);
    elif (sys.result == SLVS_RESULT_DIDNT_CONVERGE):
        print ("solve failed")
        print ("SLVS_RESULT_DIDNT_CONVERGE")
        print ("%d DOF" % sys.dof)
    elif (sys.result == SLVS_RESULT_TOO_MANY_UNKNOWNS):
        print ("solve failed")
        print ("SLVS_RESULT_TOO_MANY_UNKNOWNS")
        print ("%d DOF" % sys.dof)

#主程式
#限制範圍內的角度的所有組合
for i in range(90, 151):
    for j in range(0, 61):
        print (i,j)
        arm(i, j)
&lt;/pre&gt;

&lt;p&gt;&lt;/br&gt;
&lt;/br&gt;
&lt;h4&gt;下圖的連桿是可以跑的最大角度範圍&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/mv0wkc6.png"&gt;
&lt;/br&gt;
&lt;h4&gt;底下是隨機抓取在限制範圍內的角度&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/gthsCoM.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/HOGOxEq.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/eGc8LQL.png"&gt;
&lt;/br&gt;
&lt;h3&gt;可以從限制範圍的角度裡，去求出點坐標，然後再跑迴圈將所有的點結果列出，然後用matplotlip將路徑畫出來，所以可以求得路徑方程式，然後我是用已知點的坐標，然後去算出 θ2的角度，然後就可以用三角形的關係去求出θ1、θ3。&lt;/h3&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>python3 Vrep control</title><link href="http://project.mde.tw/blog/python3-vrep-control.html" rel="alternate"></link><published>2016-07-31T12:00:00+08:00</published><updated>2016-07-31T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-31:/blog/python3-vrep-control.html</id><summary type="html">&lt;p&gt;製作控制介面，控制虛擬端的Vrep&lt;/p&gt;
</summary><content type="html">&lt;p&gt;製作控制介面，控制虛擬端的Vrep&lt;/p&gt;


&lt;h3&gt;使用Tkinter&lt;/h3&gt;

&lt;p&gt;由4023250做出的控制方法，將他改寫成class呼叫的方法，以便未來的開發方便，接下來會針對，手臂的控制下去寫，opencv部分可能要等第三組，稍微有點進度再開始，目前主要就是使用python3去控制我們的機械手臂，將外部和內部同動，利用自己寫的控制介面，讓未來學弟妹也可以使用。&lt;/p&gt;
&lt;p&gt;會將控制手臂的程式和方法放在這個倉儲
&lt;a href="https://github.com/smpss91341/Vrep_python3_control" title="Vrep_python3"&gt;https://github.com/smpss91341/Vrep_python3_control&lt;/a&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;
import matplotlib
matplotlib.use("TkAgg")

from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg,NavigationToolbar2TkAgg
from matplotlib.figure import Figure

import matplotlib.animation as animation
from matplotlib import style

import numpy as np

import tkinter as tk
from tkinter import ttk

from matplotlib import pyplot, rcParams
import serial
import sys
import vrep


LARGE_FONT = ("Verdana",12)
style.use("ggplot")

f = Figure(figsize = (5,5),dpi = 100)
a = f.add_subplot(111)



#def animate(i):

   # pullData = open("sampleData.txt","r").read()
   # dataList = pullData.split('\n')
   # xList = []
   # yList = []
   # for eachLine in dataList:
    #    if len(eachLine)&gt;1:
     #       x, y = eachLine.split(',')
      #      xList.append(int(x))
       #     yList.append(int(y))

   # a.clear()
   # a.plot(xList,yList)

class Seaofbt(tk.Tk):

    def __init__(self, *args, **kwargs):  #程式執行時先預載入的參數或者動作
        tk.Tk.__init__(self, *args, **kwargs)

  #      tk.Tk.iconbitmap(self,default = "client.ico")  改變左上角的圖示
        tk.Tk.wm_title(self,"My works")

        container = tk.Frame(self)        
        container.pack(side="top",fill="both",expand = True)
        container.grid_rowconfigure(0,weigh=1)
        container.grid_columnconfigure(0,weigh=1)

        self.frames = {}

        for F in (StartPage, PageOne,PageTwo,PageThree):

            frame = F(container,self)

            self.frames[F] = frame

            frame.grid(row=0, column = 0, sticky="nsew")

        self.show_frame(StartPage)


    def show_frame(self,cont):
        frame = self.frames[cont]
        frame.tkraise()

def qf(param):
    print(param)


class StartPage(tk.Frame):

    def __init__(self,parent,controller):

        tk.Frame.__init__(self,parent)
        label = tk.Label(self,text="PageOne",font = LARGE_FONT)
        label.pack(pady = 10,padx = 10)

        button1 = ttk.Button(self,text = "Visit Page 1",
                                    command = lambda: controller.show_frame(PageOne))
        button1.pack()

        button2 = ttk.Button(self,text = "Visit Page 2",
                                    command = lambda: controller.show_frame(PageTwo))
        button2.pack()

        button3 = ttk.Button(self,text = "Graph Page",
                                    command = lambda: controller.show_frame(PageThree))
        button3.pack()


class PageOne(tk.Frame):

    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        label = tk.Label(self,text="Start Page",font = LARGE_FONT)
        label.pack(pady = 10,padx = 10)


        button1 = ttk.Button(self,text = "Back to Home",
                                    command = lambda: controller.show_frame(StartPage))
        button1.pack()

        button2 = ttk.Button(self,text = "Visit Page2",
                                    command = lambda: controller.show_frame(PageTwo))
        button2.pack()

class PageTwo(tk.Frame):

    def __init__(self, parent,controller):
        tk.Frame.__init__(self, parent)

        self.createWidgets()
        self.getNumber1 = 0
        self.getNumber2 = 0
        self.getNumber3 = 0

        label1 = tk.Label(self,text="").grid(column=0, row=1)
        label2 = tk.Label(self,text="X").grid(column=0, row=2)
        label3 = tk.Label(self,text="").grid(column=0, row=3)
        label4 = tk.Label(self,text="Y").grid(column=0, row=4)
        label5 = tk.Label(self,text="").grid(column=0, row=5)
        label6 = tk.Label(self,text="Z").grid(column=0, row=6)


        button1 = ttk.Button(self,text = "Back",
                                    command = lambda: controller.show_frame(StartPage))
        button1.grid(row = 20,column = 3)

        button2 = ttk.Button(self, text='Quit', width=5, command=self.quit)
        button2.grid(row = 20,column = 2)

        button3 = ttk.Button(self, text='Go', width=5, command =lambda:self.show_entry_fields())
        button3.grid(row = 20,column = 1)


    def createWidgets(self):
        self.entry1 = tk.Entry(self)
        self.entry1["width"] = 12
        self.entry1.grid(row=2, column=1)
        self.entry2 = tk.Entry(self)
        self.entry2["width"] = 12
        self.entry2.grid(row=4, column=1)
        self.entry3 = tk.Entry(self)
        self.entry3["width"] = 12
        self.entry3.grid(row=6, column=1)


    def show_entry_fields(self):

        self.getNumber1 = self.entry1.get()
        self.getNumber2 = self.entry2.get()
        self.getNumber3 = self.entry3.get()

        x = self.getNumber1
        y = self.getNumber2
        z = self.getNumber3

        if x =='' or y==''or z =='':
            x = 0
            y = 0
            z = 0
            print("Error")

        else:
            x = float(self.getNumber1)
            y = float(self.getNumber2)
            z = float(self.getNumber3)

            if float(x) &gt;= 100:   # set x&amp;y&amp;z limit 
                x = 100
            if float(y) &gt;= 100:
                y = 100
            if float(z) &gt;= 400:
                z = 400
            if float(x) &lt;= -100:
                x = -100
            if float(y) &lt;= -100:
                y = -100
            if float(z) &lt;= 0:
                z = 0
            e=x/1222
            r=y/1222
            t=z/889
            if t &lt;= 0.11656:
                t = t+0.11656

            vrep.simxFinish(-1)
            clientID = vrep.simxStart('127.0.0.1', 19999, True, True, 5000, 5)
            if clientID!= -1:
                print("Connected to remote server")
            else:
                print('Connection not successful')
                sys.exit('Could not connect')
            errorCode,plate=vrep.simxGetObjectHandle(clientID,'plate',vrep.simx_opmode_oneshot_wait)
            if errorCode == -1:
                print('Can not find left or right motor')
                sys.exit()                
            errorCode=vrep.simxSetObjectPosition(clientID,plate,-1,[e,r,t], vrep.simx_opmode_oneshot)
            print(x,y,z)


class PageThree(tk.Frame):

    def __init__(self,parent,controller):
        tk.Frame.__init__(self,parent)
        label = tk.Label(self,text="Graph Pages",font = LARGE_FONT)
        label.pack(pady = 10,padx = 10)
        button1 = ttk.Button(self,text = "Back to Home",
                                    command = lambda: controller.show_frame(StartPage))
        button1.pack()


        #f = Figure(figsize = (5,5),dpi = 100)
        #a = f.add_subplot(111)
        #a.plot([1,2,3,4,5,6,7,8],[5,6,1,3,8,9,3,5])

        canvas = FigureCanvasTkAgg(f,self)
        canvas.show()
        canvas.get_tk_widget().pack(side=tk.TOP , fill=tk.BOTH,expand=True)

        toolbar = NavigationToolbar2TkAgg(canvas,self)
        toolbar.update()
        canvas._tkcanvas.pack(side = tk.TOP,fill = tk.BOTH,expand =True)



app  = Seaofbt()
#ani = animation.FuncAnimation(f,animate,interval = 1000)
app.mainloop()

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/fk51PNt.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/JWU4kA7.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/ZYbb7EL.png"&gt;&lt;/p&gt;</content><category term="machine Vrep"></category></entry><entry><title>手臂的順向推導</title><link href="http://project.mde.tw/blog/shou-bi-de-shun-xiang-tui-dao.html" rel="alternate"></link><published>2016-07-30T12:00:00+08:00</published><updated>2016-07-30T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-30:/blog/shou-bi-de-shun-xiang-tui-dao.html</id><summary type="html">&lt;p&gt;推導機械手臂的座標方程式&lt;/p&gt;
</summary><content type="html">&lt;p&gt;推導機械手臂的座標方程式&lt;/p&gt;


&lt;h3&gt;手臂順向方程式&lt;/h3&gt;

&lt;p&gt;順(正)向運動學
由各軸狀態推導出末端位置。&lt;/p&gt;
&lt;p&gt;根據我們使用的手臂，是使用二連桿的X Y，利用Solvespace畫出連桿機構，目前只考慮抓取這個動作的，不考慮左右旋轉。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/C3cXcKX.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/NBBVwcq.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/XuuN4mX.jpg"&gt;&lt;/p&gt;
&lt;p&gt;連桿L1、L2長度為constant&lt;/p&gt;
&lt;p&gt;L1 = 135 mm &lt;/p&gt;
&lt;p&gt;L2 = 145 mm&lt;/p&gt;
&lt;p&gt;θ  =  90 - servo1 所輸入的角度&lt;/p&gt;
&lt;p&gt;θ3 = servo2 所旋轉的角度&lt;/p&gt;
&lt;p&gt;X = L1 * cos(θ) + L2 * cos(θ3)&lt;/p&gt;
&lt;p&gt;Y = L1 * sin(θ) - L2 * sin(θ3)&lt;/p&gt;
&lt;p&gt;可以由我們計算出角度，輸入後得到對應的XY位置，進行夾取的動作&lt;/p&gt;
&lt;h3&gt;目前自動化這部分的進度&lt;/h3&gt;

&lt;p&gt;流程入下:&lt;/p&gt;
&lt;p&gt;1.上傳檔案&lt;/p&gt;
&lt;p&gt;2.進行列印&lt;/p&gt;
&lt;p&gt;3.縮時攝影&lt;/p&gt;
&lt;p&gt;4.列印完成&lt;/p&gt;
&lt;p&gt;5.printer復歸位置&lt;/p&gt;
&lt;p&gt;6.另一台控制器影像辨識&lt;/p&gt;
&lt;p&gt;7.當判斷成功後，計算出位置，輸入相對應的值控制手臂&lt;/p&gt;
&lt;p&gt;8.夾取後，退出機台平台，將料放置指定的盒子&lt;/p&gt;
&lt;p&gt;9.發送訊息到客戶端顯示列印完成&lt;/p&gt;</content><category term="machine Arm"></category></entry><entry><title>machine Arm</title><link href="http://project.mde.tw/blog/machine-arm.html" rel="alternate"></link><published>2016-07-29T12:00:00+08:00</published><updated>2016-07-29T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-29:/blog/machine-arm.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;今天製作的手臂用到樹莓派加上一塊台灣沒有賣的擴充板，走兩個I2C控制16個PWM訊號，走額外的電源供應器，利用這樣的系統可以使用Raspberry pi 的GPIO控制，控制機械手臂，目前用I2C的方式控制&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/FujdPML.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/j44R9HO.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="https://cdn-learn.adafruit.com/assets/assets/000/022/063/original/raspberry_pi_topdown.jpg?1420235676"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/5yIBBCd.jpg"&gt;&lt;/p&gt;
&lt;p&gt;https://www.adafruit.com/product/2327&lt;/p&gt;
&lt;p&gt;目前還在摸索控制方法，希望接下來可以配合影像辨識，將自動下料的部份做好，原本規劃利用Octopi，進行控制，可是就目前進度，我們還沒拆開他的那包，還沒辦法寫自己的功能，現在想要用影像的方式辨認目標，然後夾取。&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/dc3XOIvRjto" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;底下為control的程式&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

#!/usr/bin/python

from Adafruit_PWM_Servo_Driver import PWM
import time


# Initialise the PWM device using the default address
pwm = PWM(0x40)
# Note if you'd like more debug output you can instead run:
#pwm = PWM(0x40, debug=True)

servoMin = 150  # Min pulse length out of 4096
servoMax = 600  # Max pulse length out of 4096

def setServoPulse(channel, pulse):
  pulseLength = 1000000                   # 1,000,000 us per second
  pulseLength /= 60                       # 60 Hz
  print "%d us per period" % pulseLength
  pulseLength /= 4096                     # 12 bits of resolution
  print "%d us per bit" % pulseLength
  pulse *= 1000
  pulse /= pulseLength
  pwm.setPWM(channel, 0, pulse)

pwm.setPWMFreq(60)                        # Set frequency to 60 Hz
while (True):
  # Change speed of continuous servo on channel O
  pwm.setPWM(0, 0, servoMin)
  time.sleep(1)
  pwm.setPWM(0, 0, servoMax)
  time.sleep(1)
&lt;/pre&gt;</content><category term="raspberrypi"></category></entry><entry><title>40323143 - 日誌 105年7月25日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-25ri.html" rel="alternate"></link><published>2016-07-25T12:00:00+08:00</published><updated>2016-07-25T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-25:/blog/40323143-ri-zhi-105nian-7yue-25ri.html</id><summary type="html">&lt;p&gt;手臂資料
</summary><content type="html">&lt;p&gt;手臂資料
&lt;/p&gt;
&lt;p&gt;總重量約為0.6kg&lt;/p&gt;
&lt;p&gt;夾取重量約為0.15kg&lt;/p&gt;
&lt;p&gt;控制手臂可從序列埠輸入數值控制，序列埠輸入數值
為(asin(列印件距離/100)+50)/0.09//10*10)。&lt;/p&gt;
&lt;p&gt;最長夾取距離的序列埠輸入值為2060。&lt;/p&gt;
&lt;p&gt;最終程式
    #include &lt;Servo.h&gt; &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Servo myservo;
Servo myservo2;
Servo myservo3;
Servo myservo4;
int Pin = 3;
int limt;   
void setup() 
{ 
  Serial.begin(9600);
  myservo.attach(9, 500, 2500); // 修正脈衝寬度範圍
  myservo2.attach(10, 500, 2500);// 修正脈衝寬度範圍
  myservo3.attach(10, 500, 2500);
  myservo4.attach(10, 500, 2500);
  pinMode(Pin,INPUT);
}

void loop() 
{ 
    limt = digitalRead(Pin);  
    myservo.write(0);
    myservo2.write(0); 
    myservo3.write(0);
    myservo4.write(0); 
    int d;
    int e;
    if(Serial.available()){
      d = Serial.parseInt();
      Serial.println(d);  
      if(0 &amp;lt;= d &amp;amp;&amp;amp; d &amp;lt;= 2500){
      delay(3000);
      for(int i = 500; i &amp;lt;= d; i+=10){
        myservo.writeMicroseconds(i); // 直接以脈衝寬度控制
        myservo2.writeMicroseconds(i);
        myservo3.writeMicroseconds(1500);
        delay(10);
      }
      delay(3000);
      for(int i = 500; i &amp;lt;= 1350 ; i+=10){
      myservo4.writeMicroseconds(i);
      delay(10);
      delay(1000);
      for(int i = d; i &amp;gt;= 500; i-=10){
        myservo.writeMicroseconds(i);
        myservo2.writeMicroseconds(i);
        myservo3.writeMicroseconds(1500);
        delay(10);
      }
      delay(1000);
       for(int i = 1350 ; i &amp;gt;= 500; i-=10){
        myservo4.writeMicroseconds(i);
        delay(10);
      }
      }
    }
  }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 日誌 105年7月22日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-22ri.html" rel="alternate"></link><published>2016-07-22T12:00:00+08:00</published><updated>2016-07-22T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-22:/blog/40323143-ri-zhi-105nian-7yue-22ri.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;變更夾爪形狀，並在夾頭下方新增連桿，加大夾持穩定度，開了槽可安裝極限開關，安裝點還沒畫，夾持面向內凹了1mm，夾持件不至於在夾持過程中由夾口脫落。&lt;/p&gt;
&lt;p&gt;新增夾頭馬達的控制程式，暫時固定正轉90度，或許會改。&lt;/p&gt;
&lt;p&gt;夾爪&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/1WgrXCm.png"&gt;&lt;/p&gt;
&lt;p&gt;整體圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/E5e6i5z.png"&gt;&lt;/p&gt;
&lt;p&gt;加上底座馬達控制程式&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
  &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;myservo4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
      &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 直接以脈衝寬度控制&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;  &lt;span class="c1"&gt;//夾爪動作&lt;/span&gt;
      &lt;span class="n"&gt;myservo4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
       &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
       &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   &lt;span class="c1"&gt;//夾爪動作&lt;/span&gt;
        &lt;span class="n"&gt;myservo4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;手臂剩下列印組裝就可以完成，但以目前馬達的力量沒有熱床八成沒辦法下料。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>報告的內容3</title><link href="http://project.mde.tw/blog/bao-gao-de-nei-rong-3.html" rel="alternate"></link><published>2016-07-21T11:29:00+08:00</published><updated>2016-07-21T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-21:/blog/bao-gao-de-nei-rong-3.html</id><summary type="html">&lt;p&gt;介紹硬體相關訊息(純文字還沒補照片)&lt;/p&gt;
</summary><content type="html">&lt;p&gt;介紹硬體相關訊息(純文字還沒補照片)&lt;/p&gt;


&lt;h3&gt;3d printing&lt;/h3&gt;

&lt;p&gt;3D printing，又稱增量製造、積層製造（Additive Manufacturing，AM），可指任何列印三維物體的過程。3D列印主要是一個不斷添加的過程，在電腦控制下堆疊材料。3D列印的內容可以來源於三維模型，其列印出的三維物體可以擁有任何形狀和幾何特徵。3D列印機屬於工業機器人的一種。&lt;/p&gt;
&lt;p&gt;「3D列印」這個詞的原意是指順序地將材料沉積到粉末層噴墨列印頭的過程。最近此詞的含義已經擴大到廣泛包括的各種技術，如擠壓和燒結過程。技術標準一般使用「增量製造」這個術語來表達這個廣泛含義。&lt;/p&gt;
&lt;p&gt;我們所選用的方法為FDM(Fused deposition modeling)，先用CAD軟體建構出物體的3D立體模型圖，將物體模型圖輸入到3D printer。列印機的噴嘴就會根據模型的切層檔(G-code)，一層一層移動，同時列印機的加熱頭會擠出PLA材料。材料被加熱到半液體狀態後，在微電腦(Arduino)的控制下，列印機的噴嘴就會沿著模型移動，將熱塑性材料擠壓，在該層中凝固。列印機會根據G-code裡面的設定，分別是構成成品的建模材料和用作支架的支撐材料，透過噴嘴垂直升降，材料層層堆積凝固後，就能由下而上形成一個3D列印模型的實體。列印完成的實體，就能開始進行整理，剝除固定在零件或模型外部的支撐材料，即可使用該零件了。&lt;/p&gt;
&lt;h3&gt;Raspberrypi3&lt;/h3&gt;

&lt;p&gt;樹莓派（英語：Raspberry Pi），是一款基於Linux的單板機電腦。它由英國的樹莓派基金會所開發，目的是以低價硬體及自由軟體促進學校的基本電腦科學教育。樹莓派配備一枚博通（Broadcom）出產的ARM架構1.2GHZ，使用SD卡當作儲存媒體，且擁有一個Ethernet、四個USB介面、以及HDMI（支援聲音輸出）和RCA端子輸出支援。樹莓派只有一張信用卡大小，體積大概是一個火柴盒大小，可以進行1080p影片的播放。操作系統採用開源的Linux系統如Debian、ArchLinux，自帶的Iceweasel、KOffice等軟體，能夠滿足基本的網路瀏覽、文字處理以及電腦學習的需要。近年來Maker、以及IOT活動興盛，大家開始往電子電路、機電整合...等方向開發，例如:網路的恆溫器、可以上網的機台...等，而這些機器的原型，很有可能就是利用樹莓派本身具有的GPIO做原型機的樣本，可以利用python+GPIO控制方式，快速的從網路傳回相對應的格式，以便開發後面的電路板。&lt;/p&gt;
&lt;h3&gt;Arduino&lt;/h3&gt;

&lt;p&gt;Arduino為一套在近年Maker活動興盛的電路板，對於學生來說，價格並不會非常高，是一般學生，或者對電路學習者很好的入門電路板，在這塊版子上，有將每個GPIO腳位拉出來使用，利用官方所寫的C語言方法，就可以很快的知道要如何編寫，也因為它的簡單，所以推廣的快，目前市面上有很多都已經是利用這樣的套件，讓學習者可以快速的開發與學習，以及在去年公開原始碼的Marlin 3d printer ，是利用Arduino Mega2560加上Ramps 1.4(註一)所開發的控制板，可以控制基本的三軸(X Y Z)，因為這樣的開發，讓自製CNC、3D printer、雷射切割機，一一的冒出台面上，讓更多想學習工具機開發，或者基本三軸運動機構的開發，更為快速。&lt;/p&gt;
&lt;h3&gt;RS-232串列通訊&lt;/h3&gt;

&lt;p&gt;RS-232是美國電子工業聯盟（EIA）制定的序列資料通訊的介面標準，原始編號全稱是EIA-RS-232（簡稱232，RS232）。它被廣泛用於電腦串列埠外設連線。&lt;/p&gt;
&lt;p&gt;RS-232C標準，其中EIA（Electronic Industry Association）代表美國電子工業聯盟,RS（Recommended standard）代表推薦標準，232是標識號，C代表RS232的第三次修改（1969年），在這之前，還有RS232B、RS232A。&lt;/p&gt;
&lt;p&gt;它規定連接電纜和機械、電氣特性、訊號功能及傳送過程。其他常用電氣標準還有EIA-RS-422-A、EIA-RS-423A、EIA-RS-485。&lt;/p&gt;
&lt;p&gt;目前在IBM PC機上的COM1、COM2介面，就是RS-232C介面。RS-232對電氣特性、邏輯電位和各種訊號線功能都作了規定。&lt;/p&gt;
&lt;p&gt;我們的3D列印機是利用RS232的USB通訊傳送G-code指令到3D列印機中進行控制，利用切片軟體計算三角網格曲面(STL)，分出每一層所需要走的路徑，產生出相對應的G指令，接下來利用RS232通訊到控制板中，控制機台的作動。&lt;/p&gt;
&lt;h3&gt;註一&lt;/h3&gt;

&lt;p&gt;Ramps 1.4 為目前主要支援3D列印機的擴充版，目的是把腳位從原本的Arduino Mega2560中，變得針對相應的馬達控制以及感測，讓使用者可以輕鬆的安裝以及佈線，不需要額外再拉麵包版，或者控制晶片的腳位，也將額外的12V電源，拉到板子做整合，避免走線導致短路。&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323131日誌 105/07/20</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050720.html" rel="alternate"></link><published>2016-07-20T16:37:00+08:00</published><updated>2016-07-20T16:37:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-20:/blog/40323131ri-zhi-1050720.html</id><summary type="html">&lt;p&gt;將Kmolprint改成在純IPV6底下 也可連線
</summary><content type="html">&lt;p&gt;將Kmolprint改成在純IPV6底下 也可連線
&lt;/p&gt;
&lt;h3&gt;先來放張圖片&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/LlP6tBJ.png"&gt;
&lt;/br&gt;
&lt;h4&gt;上圖是在純 ipv6 底下進行連線的，不過控制介面是ok的，但是攝影機在純 ipv6 底下會無法顯示出來，就像下圖一樣&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/hOS3jSH.png"&gt;
&lt;/br&gt;
&lt;h4&gt;這邊我是不太清楚 mjpg-streamer 是否有支援 ipv6 還是說要用其他方法，這方面我還沒去研究過，所以我個人是用雙支援 ipv4 跟ipv6的方式，這樣子攝影機就會顯示出來了，&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/ZwAPxwY.png"&gt;
&lt;/br&gt;
&lt;h4&gt;個人是認為設定的位置要改成 ipv6 的還是怎樣，可是這樣 ipv4 不知會不會出問題&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/81iQzha.png"&gt;
&lt;/br&gt;
&lt;h3&gt;再來看 octopi 的 network 的設定&lt;/h3&gt;
&lt;h4&gt;要編輯 octopi-network.txt 這個檔案 ，檔案位置在 /boot裡面，進入 /boot裡頭後，用 sudo nano octopi-network.txt 編輯設定檔，如下圖所示，新增 ipv6 的 address &lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/OlQ2vUJ.png"&gt;
&lt;/br&gt;
&lt;h4&gt;然後重啟 sudo reboot 一下 ，再用 ifconfig 確認一下是否有增加 ipv6的連線&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/Gk09I7A.png"&gt;
&lt;/br&gt;
&lt;h4&gt;再來因為我們是用 nginx 代理我們的 octoprint 跟 Webcam的，所以這邊要將 nginx 的 ipv6 連線能力打開，所以去修改位於 /etc/nginx/nginx.conf 的這個檔案，在server 底下加上 listen [::]:80;  ，這樣就會代理 ipv6 了， 至於 listen 80; 這個是 ipv4的&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/vQTwal4.png"&gt;
&lt;/br&gt;
&lt;h4&gt;做到這邊完成 ipv6的連線，不過還沒加上認證，目前還是 http://  要改成 有https:// 認證的&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;這兩三天，將一台樹梅派 + OctoPrint + Webcam 從零開始，架設讓 ipv4 跟 ipv6都可以連線進來，這當中也參考了很多資料，還有最奇怪的是，每次做，每次的問題都不一樣，真是見鬼了...，還有要裝 nginx 時，出現錯誤的訊息，要用其他方式安裝，然後自己眼花刪錯檔案，刪到內建的系統檔，於是又從頭開始，然後裝完之後，發現沒有代理過來，然後卡了很久，於是決定先出去吃晚餐，吃完回來，重新整理網站，就看到 nginx 代理過來了，當下覺得自己剛才鬼打牆了，由於自動開啟 Webcam 的指令出錯無法成功，所以就直接加在介面的system裡，所以現在 login 之後直接按就開啟Webcam了，不用在 putty 進裡頭 下指令了，蠻方便的，總之這兩天事情還蠻多的，所以本來要改17.107那台的，沒什麼時間於是直接把目前在裝的這台，直接加上 ipv6 ，然後把 SD 卡換過去，所以現在17.107的網站是用我這兩天裝的，直接換過去，是說本來的那台好像把自動更新關掉了還是怎樣，所以無法進行 update 跟 upgrade，也剛好熟練一下安裝做完感覺蠻有成就感的。&lt;/h3&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 夾頭變更 105年7月20日</title><link href="http://project.mde.tw/blog/40323143-jia-tou-bian-geng-105nian-7yue-20ri.html" rel="alternate"></link><published>2016-07-20T12:00:00+08:00</published><updated>2016-07-20T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-20:/blog/40323143-jia-tou-bian-geng-105nian-7yue-20ri.html</id><summary type="html">&lt;p&gt;變更夾頭座及夾爪
</summary><content type="html">&lt;p&gt;變更夾頭座及夾爪
&lt;/p&gt;
&lt;p&gt;因為程式設定使原先得設計變得多餘，於是將原本的上承臂與夾頭座結合成夾頭臂。&lt;/p&gt;
&lt;p&gt;變更夾爪連桿形狀及厚度，厚度由2mm變更為4mm。&lt;/p&gt;
&lt;p&gt;新增底座馬達的控制程式。&lt;/p&gt;
&lt;p&gt;夾頭臂&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/5o6FJEr.png"&gt;&lt;/p&gt;
&lt;p&gt;夾爪(暫定)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/EvrtHSO.png"&gt;&lt;/p&gt;
&lt;p&gt;整體圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/aVhFNfe.png"&gt;&lt;/p&gt;
&lt;p&gt;加上底座馬達控制程式&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
      &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
      &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 直接以脈衝寬度控制&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;測試用的手臂可以直接用，剩下夾頭等零件列印組裝還有夾爪控制程式。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 馬達控制 105年7月19日</title><link href="http://project.mde.tw/blog/40323143-ma-da-kong-zhi-105nian-7yue-19ri.html" rel="alternate"></link><published>2016-07-19T12:00:00+08:00</published><updated>2016-07-19T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-19:/blog/40323143-ma-da-kong-zhi-105nian-7yue-19ri.html</id><summary type="html">&lt;p&gt;讀取訊號控制兩顆馬達
</summary><content type="html">&lt;p&gt;讀取訊號控制兩顆馬達
&lt;/p&gt;
&lt;p&gt;本篇接續7/18的文章，使用輸入脈衝寬度控制的方法控制，並將序列埠輸入的程式寫進來，完成由序列埠輸入最終角度的脈衝寬度來控制馬達的程式。&lt;/p&gt;
&lt;p&gt;MG996R馬達角度由0度到180度相對的脈衝寬度為500到2500，1個脈衝寬度相對的角度值為0.09度。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;      &lt;span class="c1"&gt;//第一顆馬達&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;    &lt;span class="c1"&gt;//第二顆馬達&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;             &lt;span class="c1"&gt;//通訊速率&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      
    &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;           
      &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;//定義輸入訊號值為d&lt;/span&gt;
      &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            
      &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   &lt;span class="c1"&gt;//限制訊號範圍&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;  
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 直接以脈衝寬度控制&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
        &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;以下方的程式可以將序列埠輸入的數值輸入程式中使用。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;int d;
if(Serial.available()){           
d = Serial.parseInt();    //定義輸入訊號值為d
Serial.println(d);            
if(0 &amp;lt;= d &amp;amp;&amp;amp; d &amp;lt;= 2500){   //限制訊號範圍
   }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;且包在其中的for迴圈可以同使對兩個馬達輸入訊號，達成控制兩個馬達的目的。   &lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323131日誌 105/07/18</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050718.html" rel="alternate"></link><published>2016-07-18T19:37:00+08:00</published><updated>2016-07-18T19:37:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-18:/blog/40323131ri-zhi-1050718.html</id><summary type="html">&lt;p&gt;增加一些專題書面的資料及安裝Octoprint跟Webcam的練習
</summary><content type="html">&lt;p&gt;增加一些專題書面的資料及安裝Octoprint跟Webcam的練習
&lt;/p&gt;
&lt;h3&gt;介面系統介紹及架構&lt;/h3&gt;

&lt;h4&gt;Kmolprint &lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/OBM6wDz.png"&gt;
&lt;/br&gt;
&lt;h4&gt;介面系統有著Access Control (訪問控制權限)，當使用者進入到介面系統時，會顯示上圖的畫面，若是尚未登入或是註冊的用戶(匿名用戶)，只會有讀(read - only)的權限而已，無法使用其他功能；介面系統裡包含的功能有下列幾項:&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;Printer state   (printer 當前狀態)&lt;/h4&gt;
&lt;h4&gt;Available gcode file and stats    (可用的gcode檔案及總數)&lt;/h4&gt;
&lt;h4&gt;Temperature    (溫度)&lt;/h4&gt;
&lt;h4&gt;Webcam       (攝影機)&lt;/h4&gt;
&lt;h4&gt;Gcode viewer&lt;/h4&gt;
&lt;h4&gt;Terminal output          (端子輸出)&lt;/h4&gt;
&lt;h4&gt;Available time movies     (可使用縮時攝影)&lt;/h4&gt;
&lt;h4&gt;Any component provided through plugins which are enable for anonymous user         (給匿名用戶提供外掛程式的使用)&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;系統架構圖&lt;/h4&gt;
&lt;img src="http://i.imgur.com/DiAHikU.png"&gt;
&lt;/br&gt;
&lt;h4&gt;在第一次登入系統時，會有配置指南，允許創建 root 管理員，如果其他用戶想要註冊使用的話，須經由root 管理員審核確認之後，才算註冊成功，採用這種審核機制，是為了避免嵌入式電腦，因接收過多的連線而當機&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;練習安裝Octoprint及架設Webcam&lt;/h3&gt;
&lt;h4&gt;今天主要在熟悉對於Octoprint及Webcam的安裝及設定，不過情況是時好時壞，在一開始安裝Octoprint的時候，就先卡了，結果問題是出在所在的目錄不對，所以找不到檔案，再來安裝Webcam的時候，因為延遲的時間太長了，好像延遲將近20秒，這邊是去設定檔裡頭調整解析度及 fps ，然後調整成大約延遲1~2秒左右，再來是將Octoprint及Webcam設定成開機之後會自動開啟，不過這邊也卡了一下，因為都卡在要調整成自動開機的指令時出現錯誤，不過這邊花了些時間，最後Octoprint的自動開機成功了，不過Webcam的失敗了，這邊可能還要再找原因，然後Octoprint的代理伺服器也改成用 nginx 了，不過為了找問題點在哪，忘記拍照了，可能要等熟練安裝步驟之後，在一步步說明加拍照，是說網路上的步驟都講的蠻簡單的，不過實際遇到的問題好像跟網路上不太一樣，這點讓我很納悶&lt;/h4&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 馬達控制 105年7月18日</title><link href="http://project.mde.tw/blog/40323143-ma-da-kong-zhi-105nian-7yue-18ri.html" rel="alternate"></link><published>2016-07-18T12:00:00+08:00</published><updated>2016-07-18T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-18:/blog/40323143-ma-da-kong-zhi-105nian-7yue-18ri.html</id><summary type="html">&lt;p&gt;馬達控制
</summary><content type="html">&lt;p&gt;馬達控制
&lt;/p&gt;
&lt;p&gt;本篇為伺服馬達控制的學習筆記，共分為兩部分，第一部分為直接控制角度，第二部分以脈衝寬度控制。&lt;/p&gt;
&lt;p&gt;控制角度:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// 建立Servo物件，控制伺服馬達&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 連接數位腳位9，伺服馬達的訊號線&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt; &lt;span class="c1"&gt;// ( int i = 0; )表馬達初始角度為0度&lt;/span&gt;
  &lt;span class="c1"&gt;//(i &amp;lt;= 180; )表馬達最終角度為180度   &lt;/span&gt;
  &lt;span class="c1"&gt;//(i+=1)表示馬達每次正轉1度&lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 使用write，傳入角度，從0度轉到180度&lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//馬達每0.02秒轉i+的角度&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   &lt;span class="c1"&gt;// ( int i = 180; )表馬達初始角度為180度     &lt;/span&gt;
  &lt;span class="c1"&gt;//(i &amp;gt;= 0 ; )表馬達最終角度為0度   &lt;/span&gt;
  &lt;span class="c1"&gt;//(i-=1)表示馬達每次逆轉1度&lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;span class="c1"&gt;// 使用write，傳入角度，從180度轉到0度&lt;/span&gt;
    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//馬達每0.02秒轉i-的角度&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;以脈衝寬度控制 :&lt;/p&gt;
&lt;p&gt;馬達脈寬信號為500-1500-2500，對應的角度是-90度~+90度&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;


  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2400&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 修正脈衝寬度範圍&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 一開始先置中90度&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   &lt;span class="c1"&gt;// ( int i = 500; )表馬達初始訊號為500    &lt;/span&gt;
  &lt;span class="c1"&gt;//(i &amp;lt;= 2500; )表馬達最終訊號為2500   &lt;/span&gt;
  &lt;span class="c1"&gt;//(i+=100)表示馬達每次正轉訊號100所代表的角度&lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;// 直接以脈衝寬度控制&lt;/span&gt;

    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//馬達每0.3秒轉i+=100所代表的角度&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;=&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;   &lt;span class="c1"&gt;// ( int i = 2500; )表馬達初始訊號為2500    &lt;/span&gt;
  &lt;span class="c1"&gt;//(i &amp;lt;= 500; )表馬達最終訊號為500   &lt;/span&gt;
  &lt;span class="c1"&gt;//(i-=100)表示馬達每次反轉訊號100所代表的角度&lt;/span&gt;
    &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;writeMicroseconds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//馬達每0.3秒轉i-=100所代表的角度&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;來源:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://yehnan.blogspot.tw/2013/09/arduinotower-pro-sg90.html"&gt;葉難: Arduino練習：伺服馬達以Tower Pro SG90為例&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;以控制角度的方法可修改i的數值控制馬達轉角，並可透過修改i+、i-與 delay的值控制馬達旋轉的速度。&lt;/p&gt;
&lt;p&gt;以脈衝寬度控制的方法與控制角度的方法很相似，但每一個馬達的脈衝訊號寬度不一樣，還需要以馬達的條件來設定轉角及轉速。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>報告的內容2</title><link href="http://project.mde.tw/blog/bao-gao-de-nei-rong-2.html" rel="alternate"></link><published>2016-07-17T12:00:00+08:00</published><updated>2016-07-17T12:00:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-17:/blog/bao-gao-de-nei-rong-2.html</id><summary type="html">&lt;p&gt;實作部分&lt;/p&gt;
</summary><content type="html">&lt;p&gt;實作部分&lt;/p&gt;


&lt;h3&gt;pyserial&lt;/h3&gt;

&lt;p&gt;因為要從樹梅派的USB到3D列印機的Arduino控制系統，必須做出一套橋梁，來做兩端的溝通，採用的方式是使用pyserial，由python第三方模組支援的串列通訊溝通，由官方提供的方法可以import pyserial後，就可以進行serial.open(Value)，開啟兩端的連接後，接者進行資料的傳送和溝通，利用3Dprinter裡面的指令，就可以下指令到3D列印機中控制他(例如:G01、M105…)，利用這樣的方式，就可以傳送基本指令控制3D列印機。
以下為串列傳輸程式碼:
(包含解字、切字、utf-8、執行緒)&lt;/p&gt;
&lt;pre class="brush: python"&gt;
#!/usr/bin/python3

import serial
import sys
import numpy as np
import tkinter
from matplotlib import pyplot, rcParams

port = serial.Serial('COM6', 9600, timeout=1)

# Tkinter canvas
top = tkinter.Tk()
top.title("Tkinter + matplotlib")

# Create flag to work with indefinite while loop
flag = tkinter.BooleanVar(top)
flag.set(True)


def cleanText(data):
    data = data.replace("\r\n", "")
    return data


def onStartButtonPress():
    while True:
        if flag.get():
            line = port.readline().decode('UTF-8')
            reading = line.split(':')
        #    print (reading)
            if len(reading) == 2:
                for i in range(2):
                    if reading[0] == "temperature":
                        TempLabel.config(text=cleanText(reading[1]))
                        TempUnitLabel.config(text="C")
                        TempUnitLabel.update_idletasks()
  #                  if reading[0] == "Temperature(F)":
 #                       TempLabel.config(text=cleanText(reading[1]))
 #                       TempUnitLabel.config(text="F")
#                        TempUnitLabel.update_idletasks()
                    if reading[0] == "Humidity":
                        HumdLabel.config(text=cleanText(reading[1]))
                        pData.append(float(reading[1]))
                        del pData[0]
#                    if reading[0] == "Light(lx)":
  #                      LighLabel.config(text=cleanText(reading[1]))
                    if reading[0] == "Flag":
#                        print (reading[1])
                        if int(reading[1]) == 1:
                            try:
                                print ("In flag")
                                print ("In flag -&gt; if ")
                                l1.set_xdata(np.arange(len(pData)))
                                l1.set_ydata(pData)  # update the data
                                pyplot.ylim([0, 100])
                                pyplot.draw()  # update the plot
                            except:
                                print ("In flag except")
                                pyplot.figure()
                                pyplot.title('Humidity')
                                ax1 = pyplot.axes()
                                l1, = pyplot.plot(pData)
                                pyplot.ylim([0, 100])
                        if int(reading[1]) == 0:
                            try:
                                pyplot.close('all')
                                l1 = None
                            except:
                                continue
            port.flushInput()
            top.update()
        else:
            flag.set(True)
            break


def onExitButtonPress():
    print ("Exiting....")
    flag.set(False)
    port.close()
    top.quit()
    top.destroy()
    print ("Done.")
    sys.exit()

pyplot.ion()
rcParams['toolbar'] = 'None'
pData = [0] * 25

tkinter.Label(top, text="Temperature").grid(column=1, row=1)
tkinter.Label(top, text="Humidity").grid(column=1, row=2)
tkinter.Label(top, text="Light").grid(column=1, row=3)

TempLabel = tkinter.Label(top, text=" ")
TempLabel.grid(column=2, row=1)
HumdLabel = tkinter.Label(top, text=" ")
HumdLabel.grid(column=2, row=2)
LighLabel = tkinter.Label(top, text=" ")
LighLabel.grid(column=2, row=3)

TempUnitLabel = tkinter.Label(top, text=" ")
TempUnitLabel.grid(column=3, row=1)
HumdUnitLabel = tkinter.Label(top, text="%")
HumdUnitLabel.grid(column=3, row=2)
LighUnitLabel = tkinter.Label(top, text="lx")
LighUnitLabel.grid(column=3, row=3)

# Create Start button and associate with onStartButtonPress method
StartButton = tkinter.Button(top,
                             text="Start",
                             command=onStartButtonPress)
StartButton.grid(column=1, row=4)

# Create Exit button and destroy the window
ExitButton = tkinter.Button(top,
                            text="Exit",
                            command=onExitButtonPress)
ExitButton.grid(column=2, row=4)

top.mainloop()

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/UscP5Jg.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Flask&lt;/h3&gt;

&lt;p&gt;這邊我們選用的框架是flask，因為它輕巧、且具有大量的可擴充性，因此選用，相較於python其他兩個，他擁有比較小的空間和核心，較符合Raspberrypi的系統。
底下為利用flask看通訊端得到的資料&lt;/p&gt;
&lt;pre class="brush: python"&gt;

import flask
import serial
from time import sleep

app = flask.Flask(__name__)
app.debug = True

def event_barcode():
    messageid = 0
    ser = serial.Serial()
    ser.port = COM^
    ser.baudrate = 9600
    ser.bytesize = 8
    ser.parity = serial.PARITY_NONE
    ser.stopbits = serial.STOPBITS_ONE
    ser.timeout = 0
    try:
        ser.open()
    except serial.SerialException as e:
         yield 'event:error\n' + 'data:' + 'Serial port error({0}): {1}\n\n'.format(e.errno, e.strerror)
         messageid = messageid + 1
    str_list = []
    while True:
        sleep(0.01)
        nextchar = ser.read()
        if nextchar:
            str_list.append(nextchar)
        else:
            if len(str_list) &gt; 0:
                yield 'id:' + str(messageid) + '\n' + 'data:' + ''.join(str_list) + '\n\n'
                messageid = messageid + 1
                str_list = []

@app.route('/barcode')
def barcode():
    newresponse = flask.Response(event_barcode(), mimetype="text/event-stream")
    newresponse.headers.add('Access-Control-Allow-Origin', '*')
    newresponse.headers.add('Cache-Control', 'no-cache')
    return newresponse

if __name__ == '__main__':
    app.run(port=5000, threaded=True)

&lt;/pre&gt;

&lt;h3&gt;OctoPrint&lt;/h3&gt;

&lt;p&gt;我們在找相關資料的時候，發現到其實已經有人將我們實作的部分寫成一份套件包，只需要從新編譯過，就可以符合我們使用，而且他是屬於OpenSource，不會有版權上的問題，他將程式碼公開，讓我們這些後輩人學習，真的非常感動，我們照著他的code一路走，看到每個人針對他所想要走所設計的不同，看到不一樣的寫法，因此感謝他的幫助好讓我們可以有參考資料。主要他用的方法是使用我們看到的flask+js+nginx+pyserial+oprint+yaml，非常的複雜，但是在flask底下，可以很清楚的知道，每個py檔的作用和功能，可以讓我們比較好了解如何使用。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/tdwh26A.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/zcIeIBl.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/P7r3lQb.jpg"&gt;&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/4sK0pn37HAQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="g1project"></category></entry><entry><title>報告的內容</title><link href="http://project.mde.tw/blog/bao-gao-de-nei-rong.html" rel="alternate"></link><published>2016-07-17T11:29:00+08:00</published><updated>2016-07-17T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-17:/blog/bao-gao-de-nei-rong.html</id><summary type="html">&lt;p&gt;動機與目的&lt;/p&gt;
</summary><content type="html">&lt;p&gt;動機與目的&lt;/p&gt;


&lt;h3&gt;研究動機與目的&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/WKGRL3z.png"&gt;
&lt;img src="http://i.imgur.com/4yruSRL.png"&gt;  &lt;/p&gt;
&lt;p&gt;在使用3D列印機時，常常會需要長久的等待，例如:製作一個大型的物件，或者有很多複雜的小零件參雜，往往需要大量的時間去製作，途中列印完成的時間點，幾乎都落在凌晨，沒辦法讓機台持續列印下去，因為工件會附著在平台上，並沒有辦法直接操控電腦讓他進行列印動作，目前需仰賴人力，將其剷除，才可繼續進行列印動作。
   隨著3D列印機日漸普及，人們開始設計、構思，裝載更多新功能的3D列印機，像是wifi版本、server版本、自動校正、判斷材料種類、自動參數…..等，但是相對於價格上，有越來越貴的趨勢，也沒有版本的觀念，一台機台可以設定的參數，會根據你所使用的切片軟體，有些廠商會開發屬於他們自家的切片軟體，以至於在我們的電腦上可能會有多套的軟體安裝。
  近年來，物聯網(IOT)的觀念蓬勃發展，Raspberry pi 以及Arduino的發展漸漸邁向世界主流，人們得以結合平板、手機利用網路串連起這些嵌入式系統，直接在網路端，下達控制指令或者偵測，讓網際世界變得無遠弗屆。&lt;br&gt;
  若能在嵌入式系統中開發一套網際平台，讓所有可以連上網際平台的裝置，只需要登入系統，就能夠控制3D列印機，上傳、下載、列印、目前的列印狀態…等，針對目前需要人力在旁監控列印的狀態，利用嵌入式系統達到節省人力的目標，例如說:可以使用手機上傳客戶交代給你列印的檔案，利用網路上傳到嵌入式系統中，可以讓你在任何時間、地點，不受時間、空間的侷限，來控制你的3Dprinter，再配合自動下料系統，可以連續列印，節省人在機器旁邊等待的時刻，再利用自動校正加上下料系統，能夠讓機器24小時運作，並且可以在網頁上看到目前的列印狀態以及縮時攝影。因此本專題使用樹梅派(Raspberry pi)加上python製作一套可針對大部分開源的機台所使用的網際控制介面。&lt;/p&gt;
&lt;h3&gt;使用語言Python&lt;/h3&gt;

&lt;p&gt;Python是一種以通用性為目的、物件導向、直譯式的高階程式語言，由Guido van Rossum在1991年發佈，python能夠安裝在許多不同的操作系統上，擁有跨平台的好處，且擁有大量第三方的函式庫(Third-party library)，在眾多領域皆有應用(科學與數學運算、大數據、經濟、電腦繪圖、網路開法等)並提供豐富的API和工具，使開發者能夠使用C、C++來擴充模組，python因為擁有許多可被應用在科學開發上的函式庫(如:Numpy、Matplotlib…等)，且其快速開發為導向的特性，因此許多領域的開發都選擇Python作為主要開發的語言。&lt;/p&gt;
&lt;h3&gt;網際網路架構(Nginx)&lt;/h3&gt;

&lt;p&gt;Nginx，是一個網頁代理伺服器，在2004年發表，但是在當時因為apache server還是屬於強勢期，並沒有被大家重視，但是他的特點在近期被大家重視，主要是在效能設計的HTTP伺服器，相較於其他兩個，佔有記憶體較少，穩定性高等優勢與舊版Apache不同，Nginx不採用每個client端一執行緒的設計模型，而是充分運用異步邏輯，削減上下文排成的開銷，因此再並行服務能力更強。整體採用模組化設計，有豐富的模組庫以及第三方開發的模組，配置非常靈活。在linux系統中，Nginx使用epoll事件模型，得益於此，nginx在linux作業系統(例:ubuntu 14.04 raspbane)下效率相當高，以及可以大量平行運算等特點，在我們的嵌入式系統，採用Nginx當作代理伺服器。&lt;/p&gt;
&lt;h3&gt;web framework(flask)&lt;/h3&gt;

&lt;p&gt;Flask為一種微型網際網路架構，和Django不一樣，微型不代表整的web都需要用同一個python文件(當然也是可以使用同一個)，也不代表他是缺乏功能，只擁有基本的網路架構，在微型framework指的是核心簡單易於擴充，Flask不會決定你要用什麼樣的database，或者必須安裝怎樣的模組，一切都可以看使用者，需要怎樣的功能，就安裝不一樣的模組，可針對我們需要使用的模組做延伸，因此我們選用Flask當框架使用。&lt;/p&gt;
&lt;p&gt;Django能夠用於快速開發複雜的網站且擁有大量的第三方套件可做延伸，並具有相當完善的說明文檔、穩定的發布流程，與其他框架相比較完整，但相對於用在嵌入式電腦中，他所需要的運算量較大及對記憶體的考量，也有可能對Raspberry pi造成當機，或者運算緩慢，因此不考慮使用。&lt;/p&gt;
&lt;h3&gt;server硬體規格&lt;/h3&gt;

&lt;table width=300 border=0 &gt;
&lt;caption&gt;Raspberry pi 3硬體規格&lt;/caption&gt;
&lt;td&gt;記憶體&lt;/td&gt;
&lt;td&gt;1 GB&lt;/td&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;1.2 GHZ&lt;/td&gt;
&lt;tr&gt;
&lt;td&gt;位元數&lt;/td&gt;
&lt;td&gt;64位元&lt;/td&gt;
&lt;tr&gt;
&lt;td&gt;記憶卡&lt;/td&gt;
&lt;td&gt;32 GB&lt;/td&gt;
&lt;/table&gt;</content><category term="g1project"></category></entry><entry><title>KmolPrint 0716</title><link href="http://project.mde.tw/blog/kmolprint-0716.html" rel="alternate"></link><published>2016-07-16T11:29:00+08:00</published><updated>2016-07-16T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-16:/blog/kmolprint-0716.html</id><summary type="html">&lt;p&gt;關於目前設計3dprinter clouds&lt;/p&gt;
</summary><content type="html">&lt;p&gt;關於目前設計3dprinter clouds&lt;/p&gt;


&lt;p&gt;domain name可能想要的名子(IPV6還沒弄)
&lt;h3&gt;kmolprint.mde.tw&lt;/h3&gt;&lt;/p&gt;
&lt;p&gt;目前我們這組規劃圖設計以及目前擁有的功能
&lt;img src="http://i.imgur.com/wjejr6J.jpg?1"&gt;&lt;/p&gt;
&lt;p&gt;今天將攝影機的模組mjpg串流做好了&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/G9KfFT4.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/P7r3lQb.jpg"&gt;&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/4sK0pn37HAQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="3dprint server"></category></entry><entry><title>40323131日誌 105/07/15</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050715.html" rel="alternate"></link><published>2016-07-15T19:00:00+08:00</published><updated>2016-07-15T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-15:/blog/40323131ri-zhi-1050715.html</id><summary type="html">&lt;p&gt;將OctoPrint標題替換成KMOL
</summary><content type="html">&lt;p&gt;將OctoPrint標題替換成KMOL
&lt;/p&gt;
&lt;h3&gt;先來看關於下圖的框框處，是如何更動的&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/uEfRgiA.png"&gt;
&lt;/br&gt;
&lt;h3&gt;一開始用grepwin 尋找OctoPrint然後找了蠻久的，終於在下圖的地方找到了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/wdK9HrK.png"&gt;
&lt;/br&gt;
&lt;h3&gt;不過後來重啟ocopi之後，發現在還沒有完全載入前，是有變換成KMOL的，不過後來又變回去OctoPrint，後來在網頁按下F12查看原始碼，發現到在下圖中框框處， load 到框框前都是KMOL，不過框框後發現到又變回去OctoPrint了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/85DweJi.png"&gt;
&lt;/br&gt;
&lt;h3&gt;所以去查看那些檔案裡頭的程式碼，裡頭也是很多關於物件導向的東西，不過還好有惡補了一下，所以不是太難，又想到裡頭它可能有重新指向一個物件，導致它又重置了，所以又在下圖的地方發現了他有定義一個屬性項，去執行底下的程式&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/fgPwQs3.png"&gt;
&lt;/br&gt;
&lt;h3&gt;於是為了找webassets 這個物件，又費了一番功夫，網頁的話，想到會不會跟 .js檔有關呢? 於是到了網頁原始碼裡找，終於在下圖的地方找到了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/KNFeIOa.png"&gt;
&lt;/br&gt;
&lt;h3&gt;不過由於無法直接在網頁原始碼上頭進行修改，要在設定檔裡頭修改，於是朝天花板發呆了大約5分鐘，思考了一下大概的檔案位置，於是在下圖找到了檔案位置了，將裡頭的OctoPrint修改成KMOL之後再重啟OctoPi&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/PSsLb3u.png"&gt;
&lt;/br&gt;
&lt;h3&gt;就會變成這樣，成功的更動，之後的小圖檔也修改成KMOL的圖示了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/uEfRgiA.png"&gt;
&lt;/br&gt;
&lt;h3&gt;關於要修改裡的設定檔，跟我原本預期的不太一樣，要進到蠻底層的，才能修改到，不過也多虧了grepwin這個工具，幫了我蠻多忙，因為有進行大約一個多禮拜的python課程惡補一下，對於裡頭的程式碼大概都看得懂七八成了，所以覺得還ok，對於我的組員們，我感謝他們通融我這一個多禮拜沒什麼做事情，另外老師說的同時控制10個馬達的東西，我找過櫃子了，沒有找到，另外在櫃子裡也發現到有蠻多學長留下來的論文可以參考，所以拿給模擬作動的組別參考用了，裡頭有關平面四連桿、史都華平台機構、逆向運動學等等......&lt;/h3&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 日誌 105年7月15日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-15ri.html" rel="alternate"></link><published>2016-07-15T12:00:00+08:00</published><updated>2016-07-15T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-15:/blog/40323143-ri-zhi-105nian-7yue-15ri.html</id><summary type="html">&lt;p&gt;解決手臂動力問題
</summary><content type="html">&lt;p&gt;解決手臂動力問題
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天決定了動力不足的解決方案，選擇的方案是更換馬達，原因是因為可以迅速的解決問題。於是便將除了驅動旋盤的馬達外全部換成一般型的伺服馬達。控制程式找了別人寫的馬達控制程式修改，還沒有改完。&lt;/p&gt;
&lt;p&gt;原本打算嘗試看看減速機，但可能會多花很多時間，之後可能會再找時間看看。&lt;/p&gt;
&lt;p&gt;今天還想了一套只用一個馬達的夾取手臂，最後因為更換馬達的決定而放棄這個方案沒有做出來。&lt;/p&gt;
&lt;p&gt;今天還看了看研究室裡名叫創意性機構設計分析的書，覺得我先前做試的順序有很多問題，還沒有整理出來。&lt;/p&gt;
&lt;p&gt;新手臂構想:&lt;/p&gt;
&lt;p&gt;做一個四連桿，曲桿和搖桿等長，再將連接桿延長安裝夾頭，用馬達去驅動曲桿來控制。&lt;/p&gt;
&lt;p&gt;初始位置為曲桿垂直地面，夾取位置為[ r&lt;em&gt;sinT+C , r - r&lt;/em&gt;cosT +C ] T為角度，C為補正。&lt;/p&gt;
&lt;p&gt;構想圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/Qzh3sYx.png"&gt;&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.伺服馬達是在虎尾的無名電子買的。&lt;/p&gt;
&lt;p&gt;別人寫的馬達控制程式&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;servoLeft&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          &lt;span class="c1"&gt;// 宣告左邊伺服馬達&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;servoRight&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         &lt;span class="c1"&gt;// 宣告右邊伺服馬達&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;servoLeft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// 將 Pin 10 指定為左邊伺服馬達&lt;/span&gt;
  &lt;span class="n"&gt;servoRight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;// 將 Pin  9 指定為右邊伺服馬達&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       
  &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        &lt;span class="c1"&gt;// 馬達位置歸零&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

  &lt;span class="n"&gt;same_degree&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// 左右伺服馬達同樣各轉30度        &lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

    &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        &lt;span class="c1"&gt;// 馬達位置歸零&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

  &lt;span class="n"&gt;dif_degree&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;// 左伺服馬達轉30度，右伺服馬達轉150度&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;servoLeft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servoRight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;same_degree&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;servoLeft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servoRight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dif_degree&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;servoLeft&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servoRight&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;來源:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.robofun.net/forum/redirect.php?goto=findpost&amp;ptid=7154&amp;pid=29129"&gt;&lt;/p&gt;
&lt;p&gt;修改後的程式:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;servo1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;          
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;servo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;         
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;servo3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;servo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;servo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;servo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;       
  &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        &lt;span class="c1"&gt;// 馬達位置歸零&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

  &lt;span class="n"&gt;same_degree&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;    &lt;span class="c1"&gt;// 伺服馬達同樣各轉40度        &lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

  &lt;span class="n"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;        &lt;span class="c1"&gt;// 馬達位置歸零&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;

  &lt;span class="n"&gt;dif_degree&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;     &lt;span class="c1"&gt;// 伺服馬達同樣各轉90度&lt;/span&gt;
  &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;      &lt;span class="c1"&gt;// 執行後停止兩秒&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;initial&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="n"&gt;servo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;same_degree&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;servo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;dif_degree&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;servo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;servo3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;發現自己的思考有很多問題，有點混亂、挫折，想整理整理，看看書。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>KmolPrint 0715</title><link href="http://project.mde.tw/blog/kmolprint-0715.html" rel="alternate"></link><published>2016-07-15T11:29:00+08:00</published><updated>2016-07-15T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-15:/blog/kmolprint-0715.html</id><summary type="html">&lt;p&gt;關於目前設計3dprinter clouds&lt;/p&gt;
</summary><content type="html">&lt;p&gt;關於目前設計3dprinter clouds&lt;/p&gt;


&lt;h3&gt;目前我們的網站&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/tdwh26A.png"&gt;&lt;/p&gt;
&lt;p&gt;將原本的網站做一次更新，並且讓設定檔做好，接下來會把setting中再加入指令檔，就可以啟動攝影機和server的從新啟動以及開關server。&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/zcIeIBl.jpg"&gt;&lt;/p&gt;
&lt;p&gt;網址位置在:140.130.17.107&lt;/p&gt;
&lt;p&gt;未來是想要加damain name 讓140.130改成自己的網址，好讓自己的網站發展，以及學習如何加入自己的網址。&lt;/p&gt;</content><category term="3dprint server"></category></entry><entry><title>40323143 - 日誌 105年7月14日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-14ri.html" rel="alternate"></link><published>2016-07-14T12:00:00+08:00</published><updated>2016-07-14T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-14:/blog/40323143-ri-zhi-105nian-7yue-14ri.html</id><summary type="html">&lt;p&gt;寫Arduino控制程式 3
</summary><content type="html">&lt;p&gt;寫Arduino控制程式 3
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天知道Arduino不能夠同時使兩個馬達作動，於是今天將馬達的控制程式改成有順序的動作，達成利用Arduino控制兩個馬達，但在測試的過程發現懸盤上的馬達在手臂伸出去後沒辦法收回來，原因可能是馬達的力量不夠，目前有兩個方案:(1).減速機 (2)馬達變更為可控制角度的馬達。&lt;/p&gt;
&lt;p&gt;減速機優點:&lt;/p&gt;
&lt;p&gt;1.提高馬達的輸出力。
2.加長手臂移動的時間，控制馬達運轉時間的方法會更精確。
3.馬達到定位後受慣性和重力的影響會變小，因為馬達本身的阻尼透過減速機會變大。&lt;/p&gt;
&lt;p&gt;缺點:&lt;/p&gt;
&lt;p&gt;複雜&lt;/p&gt;
&lt;p&gt;更換馬達優點:&lt;/p&gt;
&lt;p&gt;用了可以解決大部分問題&lt;/p&gt;
&lt;p&gt;缺點:&lt;/p&gt;
&lt;p&gt;目前沒想到&lt;/p&gt;
&lt;p&gt;應該是利用第二種方案的可能性比較大，還沒有決定好。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.今天將控制兩個馬達的程式完成 ( 程式1 )，若採用減速機來解決馬達輸出力不足的問題，這套就接上旋盤旋轉的程式完成。&lt;/p&gt;
&lt;p&gt;2.若採用更換馬達來解決馬達輸出力不足的問題，會在新增角度控制的程式到程式中，還沒有寫出來。&lt;/p&gt;
&lt;p&gt;程式1:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="c1"&gt;//att.write(90);&lt;/span&gt;
  &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//啟動時固定&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//啟動時固定&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;130&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="c1"&gt;//e=1000*asin(d/130)*180/PI/144;  //將輸入的距離轉換成需要旋轉的時間&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//1固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//旋轉此時間會讓馬達與安裝面垂直&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//2固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;250&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//旋轉此時間會讓馬達與安裝面垂直&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//2固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;375&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;           &lt;span class="c1"&gt;//正轉移動到目的地所需的時間&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;175&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//1固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;375&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;            &lt;span class="c1"&gt;//正轉移動到目的地所需的時間&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;89&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;375&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;           &lt;span class="c1"&gt;//反轉相同時間復歸&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;           &lt;span class="c1"&gt;//反轉相同時間復歸&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;手臂總算有一個能夠控制的程式出來了，等到輸出力不足的問題解決後測試的手臂就算完成了，接下來就可以依使用尺寸做一個實際使用的手臂。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 日誌 105年7月13日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-13ri.html" rel="alternate"></link><published>2016-07-13T12:00:00+08:00</published><updated>2016-07-13T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-13:/blog/40323143-ri-zhi-105nian-7yue-13ri.html</id><summary type="html">&lt;p&gt;寫Arduino控制程式 2
</summary><content type="html">&lt;p&gt;寫Arduino控制程式 2
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天對控制程式做了一些修改，程式新增了抵抗地心引力的補正，以及抵抗慣性的補正。&lt;/p&gt;
&lt;p&gt;今天嘗試用一片Arduino控制兩個馬達，試著寫了兩種程式，一種不會動，另一種作動方式不對，輸入4次訊號前兩次1號馬達動，後兩次2號馬達動，都不能用。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.移動距離轉換的數學式是 1000&lt;em&gt;(acos(d/150)/144) ，將d設成所要移動的距離，將d除以承臂長度( 150 )求出比值，再用acos轉換成需要旋轉的角度，除以角速度(144)的出需要旋轉的毫秒，在&lt;/em&gt;1000得出需要的秒數。&lt;/p&gt;
&lt;p&gt;2.角速度是由myservo.write(172);   旋轉5秒轉4圈算出來的，只有目測沒有量測。為什麼用myservo.write(172)，因為其他的速度不會轉回同個位置。&lt;/p&gt;
&lt;p&gt;3.引力補正是用與引力相反的微速轉動馬達來對抗引力。&lt;/p&gt;
&lt;p&gt;4.慣性補正是用與運動相反的方向相反的高速 delay(100) 來抵抗慣性。&lt;/p&gt;
&lt;p&gt;5.新增補正的原因是因為我們的馬達是連續旋轉型的，沒辦法讓他固定，所以用補正解決。&lt;/p&gt;
&lt;p&gt;程式:&lt;/p&gt;
&lt;p&gt;加了補正的程式&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;//旋盤上&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//啟動時固定&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;144&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//將輸入的距離轉換成需要旋轉的時間&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//旋轉此時間會讓馬達與安裝面垂直&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;172&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;     &lt;span class="c1"&gt;//慣性補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//引力補正&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="c1"&gt;//反轉相同時間復歸&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="c1"&gt;//固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;270&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;嘗試控制兩個馬達的程式(一個忘了存)&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
  &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
   &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
 &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;問題:&lt;/p&gt;
&lt;p&gt;每次程式跑到 1000*(acos(d/150)/144) 這一行馬達就會像失去動力般一小段時間，然後直接回到原點，將這段數學式改成常數後就沒有問題，想請問是什麼原因?&lt;/p&gt;
&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;今天原本想說能至少把單個馬達的控制程式完成，看來有點高估自己了。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>Python通訊 0713</title><link href="http://project.mde.tw/blog/pythontong-xun-0713.html" rel="alternate"></link><published>2016-07-13T11:29:00+08:00</published><updated>2016-07-13T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-13:/blog/pythontong-xun-0713.html</id><summary type="html">&lt;p&gt;今日讀的進度，以及筆記
For python3的部分&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今日讀的進度，以及筆記
For python3的部分&lt;/p&gt;


&lt;p&gt;現在已經可以利用python讀取DHT11的值並且畫出圖形，主要程式部分我會列在下方，大致的作法是分析資料和切開資料&lt;/p&gt;
&lt;p&gt;1.先確認Arduino部分送出來的值
可以發現是有下列三個值
&lt;ul&gt;
&lt;li&gt;temperature:溫度值
&lt;li&gt;Humidity:濕度值
&lt;li&gt;Flag:控制指標值
&lt;/ul&gt;
在Arduino程式碼的部分可以看到有serial write&lt;/p&gt;
&lt;pre class="brush: c"&gt;

#include &lt;dht.h&gt;

#define dht_dpin A0 //定義訊號要從Pin A0 進來  

dht DHT;   
boolean flagPlot = true;

void setup(){   
Serial.begin(9600);   
delay(300);             //Let system settle   
//Serial.println("Humidity and temperature\n\n");   
             //Wait rest of 1000ms recommended delay before   
                        //accessing sensor   
}

void loop(){   
DHT.read11(dht_dpin);   //去library裡面找DHT.read11  
Serial.print("temperature:");   
Serial.println(DHT.temperature);   
delay(200); 
Serial.print("Humidity:");   
Serial.println(DHT.humidity);   
//Serial.print("% ");   
delay(200); 
Serial.print("Flag:");
Serial.println(flagPlot);
delay(200);   


}  

&lt;/pre&gt;

&lt;p&gt;在python程式的部分程式有使用Tkinter&lt;/p&gt;
&lt;pre class="brush: python"&gt;
#!/usr/bin/python3

import serial
import sys
import numpy as np
import tkinter
from matplotlib import pyplot, rcParams

port = serial.Serial('COM6', 9600, timeout=1)

# Tkinter canvas
top = tkinter.Tk()
top.title("Tkinter + matplotlib")

# Create flag to work with indefinite while loop
flag = tkinter.BooleanVar(top)
flag.set(True)


def cleanText(data):
    data = data.replace("\r\n", "")
    return data


def onStartButtonPress():
    while True:
        if flag.get():
            line = port.readline().decode('UTF-8')
            reading = line.split(':')
        #    print (reading)
            if len(reading) == 2:
                for i in range(2):
                    if reading[0] == "temperature":
                        TempLabel.config(text=cleanText(reading[1]))
                        TempUnitLabel.config(text="C")
                        TempUnitLabel.update_idletasks()
  #                  if reading[0] == "Temperature(F)":
 #                       TempLabel.config(text=cleanText(reading[1]))
 #                       TempUnitLabel.config(text="F")
#                        TempUnitLabel.update_idletasks()
                    if reading[0] == "Humidity":
                        HumdLabel.config(text=cleanText(reading[1]))
                        pData.append(float(reading[1]))
                        del pData[0]
#                    if reading[0] == "Light(lx)":
  #                      LighLabel.config(text=cleanText(reading[1]))
                    if reading[0] == "Flag":
#                        print (reading[1])
                        if int(reading[1]) == 1:
                            try:
                                print ("In flag")
                                print ("In flag -&gt; if ")
                                l1.set_xdata(np.arange(len(pData)))
                                l1.set_ydata(pData)  # update the data
                                pyplot.ylim([0, 100])
                                pyplot.draw()  # update the plot
                            except:
                                print ("In flag except")
                                pyplot.figure()
                                pyplot.title('Humidity')
                                ax1 = pyplot.axes()
                                l1, = pyplot.plot(pData)
                                pyplot.ylim([0, 100])
                        if int(reading[1]) == 0:
                            try:
                                pyplot.close('all')
                                l1 = None
                            except:
                                continue
            port.flushInput()
            top.update()
        else:
            flag.set(True)
            break


def onExitButtonPress():
    print ("Exiting....")
    flag.set(False)
    port.close()
    top.quit()
    top.destroy()
    print ("Done.")
    sys.exit()

pyplot.ion()
rcParams['toolbar'] = 'None'
pData = [0] * 25

tkinter.Label(top, text="Temperature").grid(column=1, row=1)
tkinter.Label(top, text="Humidity").grid(column=1, row=2)
tkinter.Label(top, text="Light").grid(column=1, row=3)

TempLabel = tkinter.Label(top, text=" ")
TempLabel.grid(column=2, row=1)
HumdLabel = tkinter.Label(top, text=" ")
HumdLabel.grid(column=2, row=2)
LighLabel = tkinter.Label(top, text=" ")
LighLabel.grid(column=2, row=3)

TempUnitLabel = tkinter.Label(top, text=" ")
TempUnitLabel.grid(column=3, row=1)
HumdUnitLabel = tkinter.Label(top, text="%")
HumdUnitLabel.grid(column=3, row=2)
LighUnitLabel = tkinter.Label(top, text="lx")
LighUnitLabel.grid(column=3, row=3)

# Create Start button and associate with onStartButtonPress method
StartButton = tkinter.Button(top,
                             text="Start",
                             command=onStartButtonPress)
StartButton.grid(column=1, row=4)

# Create Exit button and destroy the window
ExitButton = tkinter.Button(top,
                            text="Exit",
                            command=onExitButtonPress)
ExitButton.grid(column=2, row=4)

top.mainloop()

&lt;/pre&gt;

&lt;p&gt;可以得到這兩個畫面
&lt;img src="http://i.imgur.com/UscP5Jg.jpg"&gt;
&lt;img src="http://i.imgur.com/g6WOmDP.jpg"&gt;
&lt;h3&gt;底下為實際接線圖&lt;/h3&gt;
&lt;img src="http://i.imgur.com/caZ1nEV.jpg"&gt;&lt;/p&gt;</content><category term="串列通訊"></category></entry><entry><title>40323143 - 日誌 105年7月12日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-12ri.html" rel="alternate"></link><published>2016-07-12T12:00:00+08:00</published><updated>2016-07-12T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-12:/blog/40323143-ri-zhi-105nian-7yue-12ri.html</id><summary type="html">&lt;p&gt;寫Arduino控制程式
</summary><content type="html">&lt;p&gt;寫Arduino控制程式
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今日找了3套別人寫的Arduino控制程式來常是控制馬達，其中兩套完全不能用，因為使用的馬達為連續旋轉型的伺服馬達，與兩套程式控制的伺服馬達不同，一套是用可變電阻來控制馬達旋轉角度，一套是直接指定馬達旋轉角度直接控制。在用第三套程式控制馬達時發現沒有產生預期的效果，後來發現原因是因為在使用前馬達必須通電調整馬達上的可變電阻校正，經過校正馬達變如程式所寫的運動，後來這套程式用來校正馬達。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.今天只能把馬達控制到可以動，還不知道能不能準確的定位。&lt;/p&gt;
&lt;p&gt;2.馬達實際跑過後，馬達的輸出可以讓手臂正常的運動，但旋盤的外接件在手臂動作時會產生晃動，原因可能是固定的鐵芯轉的不夠緊。&lt;/p&gt;
&lt;p&gt;3.程式中距離轉換成徑度是因為我有印象有老師說過機器讀的是徑度不是角度。&lt;/p&gt;
&lt;p&gt;程式:&lt;/p&gt;
&lt;p&gt;第三套程式(前兩套因為用不到，所以沒有放上來)&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;來源:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.google.com.tw/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=2&amp;cad=rja&amp;uact=8&amp;ved=0ahUKEwjzn9HYku3NAhWHGZQKHXSlCowQFggjMAE&amp;url=http%3A%2F%2Fyehnan.blogspot.com%2F2013%2F09%2Farduinogws-s35.html&amp;usg=AFQjCNEtOQUFXThuLR7BD9VFBm4xK_tsOQ&amp;sig2=LE97WxvBrBv6QLZY8zVpgA"&gt;葉難: Arduino練習：連續旋轉伺服馬達GWS S35&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因應測試需要修改後的程式&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;Servo.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;Servo&lt;/span&gt; &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;setup&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9600&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;attach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; 
&lt;span class="p"&gt;{&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="err"&gt;#啟動時固定&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;available&lt;/span&gt;&lt;span class="p"&gt;()){&lt;/span&gt;
    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parseInt&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="n"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;println&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;180&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;   &lt;span class="err"&gt;#固定正轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="err"&gt;#將&lt;/span&gt;&lt;span class="n"&gt;d變成所要移動的距離&lt;/span&gt;&lt;span class="err"&gt;，再將其轉換為所需時間&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="err"&gt;#到定點固定&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
      &lt;span class="n"&gt;myservo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;    &lt;span class="err"&gt;#固定反轉&lt;/span&gt;
      &lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acos&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;150&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;2.5&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;3.14&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;  &lt;span class="err"&gt;#喊轉相同時間復歸&lt;/span&gt;

    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;結語:&lt;/p&gt;
&lt;p&gt;以目前自己的能力沒辦法寫一套控制程式出來，連參考別人的程式也很吃力，今天修改出來的程式只能夠控制一個馬達，而且我只知道他能動能固定了，旋轉角度是否正確我就不知道了，還有極限開關也還沒寫進去，還得再努力。&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323131日誌 105/07/11 Python 數值型別</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050711-python-shu-zhi-xing-bie.html" rel="alternate"></link><published>2016-07-11T19:00:00+08:00</published><updated>2016-07-11T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-11:/blog/40323131ri-zhi-1050711-python-shu-zhi-xing-bie.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;整數(int)與浮點數(float)&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;h3&gt;整數(int)&lt;/h3&gt;
&lt;h4&gt;在Python語言裡由型式int代表，在2.x版裡，分為固定精確度的整數型別int與無窮精確度的長整數型別long，一旦數值超過界限，便自動轉程長整數型別，長整數會在尾巴加上(L)作標示&lt;/h4&gt;
&lt;h4&gt;在3.x版裡則統和為一，只有型別int(無窮精確度)&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;浮點數(float)&lt;/h3&gt;
&lt;h4&gt;在電腦裡會以二進位表示法來表示，但使用二進位表示法的話，有些值並無法以二進位表示法完美表示，只能儲存近似值&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/Y6vocOG.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;當浮點數要比較大小時，不該直接使用 == 運算子，而是應該設定誤差值，例如:0.001，然後比較兩數差值之絕對值是否小於此誤差，若在誤差值內應視為相等。&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;整數的表示法&lt;/h3&gt;
&lt;h4&gt;整數的字面值，除了以十進位(decimal)書寫，也能以二進位(binary)、十六進位(hexadecimal)、八進位(octal)書寫，分別在數字之前加上 0b 、0x 、0o即可 &lt;/h4&gt; 
&lt;/br&gt;
&lt;img src="http://i.imgur.com/NcZOXdm.jpg"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/DFhMBP1.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;浮點數的表示法&lt;/h3&gt;
&lt;h4&gt;除了一般帶有小數點 . 的表示法，也能使用科學記號法，以指數來表示，例如: 300 等於3乘上10的2次方，寫在程式碼裡會以 e 隔開前後 ，寫成3e2&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/4V8GcNp.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;運算&lt;/h3&gt;
&lt;h4&gt;數值型別的運算子 (+、-、&lt;em&gt;、&lt;/em&gt;*、/、//、%)，相關內建函式abs()絕對值，divmod()商和餘數，pow()冪次方，round()四捨五入，須特別注意round()&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/3KutZxq.jpg"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/qmNcvvr.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;模組math有很多數學運算相關函式，想求 x 的 1/n次方。傳入參數，必須注意 1/3 在2.x版與3.x版裡代表不同意思&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/sCGqFCW.jpg"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/lvF2ACh.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;條件運算式(三元運算子)&lt;/h3&gt;
&lt;h4&gt;x if y else z&lt;/h4&gt;
&lt;h4&gt;其中 x 、 y 、z可以是任何運算式，當 y 為真時，運算式的結果會是 x ，當 y 為假時，結果是 z&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/CgHHMet.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;物件 型別 方法&lt;/h3&gt;
&lt;h4&gt;將運算子與內建函式視同"方法(method)"&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/7PHWFcp.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;方法幾乎等同於函式，只不過方法附屬於某種型別的物件，當要呼叫方法時，其一般型式為"物件.方法(參數)"。舉例: li是個串列， li.append(3)便可將整數物件3附加在此串列的尾端。&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/iJsiyLT.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;複數(complex)&lt;/h3&gt;
&lt;h4&gt;由實部(real part)與虛部(imaginary part)組合而成，皆為浮點數。&lt;/h4&gt;
&lt;h4&gt;跟int、float一樣，complex為不可變物件，一但建立就不能修改，有內建函式complex()，接受一或兩個數字作為參數，或一個符合格式的字串，建立出complex物件&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/yKCsEsl.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;屬性項&lt;/h3&gt;
&lt;h4&gt;當想取出複數的實部或虛部，並沒有運算子或內建函式可用，僅能透過型別complex的屬性項real與imag來取用&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/w87YljF.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;支援complex的運算子與內建函式，跟int與 float差不多，其中須特別注意的有 : complex不支援比較運算子(&amp;lt;、&amp;lt;=、&amp;gt;、&amp;gt;=)，3.x版的複數不支援運算子(//、%)與內建函式 divmod&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;模組cmath含有跟comple相關的函式，如直角座標系(笛卡兒座標系)與極座標系的轉換&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/AhCA2mp.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;轉型&lt;/h3&gt;
&lt;h4&gt;在運算式中若混用不同的數值型別，須轉成相同的型別才可運算， 'hello'+5 其實是'hello'.&lt;strong&gt;add&lt;/strong&gt;(5)，而Python並不會自動把數字5轉成字 '5' 。&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/qIf6Bpa.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;&lt;strong&gt;repr&lt;/strong&gt;，與__str__非常類似，也是回傳字串表示，但__repr__回傳的字串可當作程式碼，再給直譯器的話，建立出相同的物件，而__str__的用意是回傳給我們易讀易懂得字串來表示該物件&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/QJ2XnLa.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;底下的部分，因為不太常接觸到，所以就稍微提到而已，如果需要的話，會再補充&lt;/h3&gt;
&lt;/br&gt;
&lt;h4&gt;十進位數(Decimal): Decimal物件屬於不可變物件&lt;/h4&gt;
&lt;h4&gt;分數(Fraction):有時只需處理有理數，也就是以(分子/分母)型式所表示出來的數字;用 float 無法精確表示1/10，用Decimal也不能完美表示無限位數 1 / 3 ，需要能夠記錄分子與分母的型別，用 Fraction，屬於不可變&lt;/h4&gt;
&lt;h4&gt;位元運算: 不把數字當做(一個數值)，而是把數字當做"一連串的位元(bit)"，以位元為單位進行運算。運算元只能是整數，因為浮點數的位元運算並無意義&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;結語&lt;/h3&gt;
&lt;h4&gt;主要重心在於了解型別int跟 float ，以及新概念:方法跟屬性項，對於型別跟物件的了解有更進一步&lt;/h4&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 日誌 105年7月11日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-11ri.html" rel="alternate"></link><published>2016-07-11T12:00:00+08:00</published><updated>2016-07-11T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-11:/blog/40323143-ri-zhi-105nian-7yue-11ri.html</id><summary type="html">&lt;p&gt;發現極限開關繪製的重大錯誤 測試的手臂組裝完成 控制程式未完成
</summary><content type="html">&lt;p&gt;發現極限開關繪製的重大錯誤 測試的手臂組裝完成 控制程式未完成
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天發現了第二種極限開關及底座裝配的問題，原因是因為在繪製第二種極限開關的固定孔時出錯，圖上的孔與實際的孔位置是相反的，導致底座列印出來時裝配出問題，己決方法是變更極限開關方向及電路配置，補救醒的讓極限開關及底座配合。&lt;/p&gt;
&lt;p&gt;今天列印底座後發現底座中安裝馬達的槽的長度尺寸小0.3mm，使馬達安裝有問題，原因可能是因為列印的些微誤差，解決方法是用銼刀將槽挫大，以及修改繪圖尺寸。&lt;/p&gt;
&lt;p&gt;機構的部分大概是如此，剩下的控制程式今天試著寫了一些，但是離實際上可用還有很多問題。&lt;/p&gt;
&lt;p&gt;控制程式的構想:&lt;/p&gt;
&lt;p&gt;1.承臂控制想利用控制通電時間來控制各個法達旋轉的角度，通電時間利用  [ acos(欲移動距離/承臂長度) ]/馬達角速度 ]求。&lt;/p&gt;
&lt;p&gt;2.極限位置用極限開關訊號加上if來控制。&lt;/p&gt;
&lt;p&gt;3.底座馬達的控制可能會是固定的旋轉時間&lt;/p&gt;
&lt;p&gt;4.我還在學習怎麼寫&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.因為原先設計時極限開關的長邊中心線是通過底座中心點的，所以可以直接將極限開關反過來用，只改變電路配置。&lt;/p&gt;
&lt;p&gt;2.與底座極限開關相撞的桿子也是用免洗筷剪短裝上去的，免洗筷是由先前的免洗筷殘留部分加工而來的，同樣十分堅固。&lt;/p&gt;
&lt;p&gt;3.原先底座極限開關的電路配置是直接由接頭接去安裝在底座的arduino上，因安裝位置修改變更為繞過旋盤下方接上arduino。&lt;/p&gt;
&lt;p&gt;4.這次的極限開關繪製錯誤時分嚴重，若不是因為剛好有辦法可以補救，製造成本就完全浪費了。&lt;/p&gt;
&lt;p&gt;5.程式若沒辦法寫出來可能只會先讓手臂座固定的運動。&lt;/p&gt;
&lt;p&gt;6.等測試用的手臂完成後就會進入夾頭的部分。&lt;/p&gt;
&lt;p&gt;安裝完後的底座極限開關線路配置&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/eWCNvOM.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/TTmw1nR.jpg"&gt;&lt;/p&gt;
&lt;p&gt;由上往下看&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/M28o1N4.jpg"&gt;&lt;/p&gt;
&lt;p&gt;底座馬達安裝孔因應誤差所做的變更&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/PiZJDKq.png"&gt;&lt;/p&gt;
&lt;p&gt;手臂組合完成圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/M28o1N4.jpg"&gt;&lt;/p&gt;
&lt;p&gt;提問:&lt;/p&gt;
&lt;p&gt;請問實際上在設計時常使用什麼方法來檢查特徵錯誤，或是特定的機制?&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>PyFirmata 通訊</title><link href="http://project.mde.tw/blog/pyfirmata-tong-xun.html" rel="alternate"></link><published>2016-07-11T11:29:00+08:00</published><updated>2016-07-11T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-11:/blog/pyfirmata-tong-xun.html</id><summary type="html">&lt;p&gt;今日讀的進度，以及筆記
For python3的部分&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今日讀的進度，以及筆記
For python3的部分&lt;/p&gt;


&lt;h3&gt;安裝要有的原始碼&lt;/h3&gt;

&lt;p&gt;1.安裝pyserial&lt;/p&gt;
&lt;p&gt;pip install pyserial&lt;/p&gt;
&lt;p&gt;2.安裝Firmata&lt;/p&gt;
&lt;p&gt;下載新版Arduino中就有了&lt;/p&gt;
&lt;p&gt;3.安裝pyfirmata&lt;/p&gt;
&lt;p&gt;pip install pyFirmata&lt;/p&gt;
&lt;p&gt;4.下載測試程式 Firmata Test&lt;/p&gt;
&lt;p&gt;http://www.firmata.org/wiki/Main_Page&lt;/p&gt;
&lt;p&gt;5.啟動.exe&lt;/p&gt;
&lt;p&gt;就有底下的畫面
&lt;img src="http://i.imgur.com/Csz2Axw.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;利用python畫圖(利用亂數取產生點)&lt;/h3&gt;

&lt;p&gt;※需要安裝matplotlib   (pip install matplotlib)&lt;/p&gt;
&lt;pre class="brush: python"&gt;

from matplotlib import pyplot
import random

x = range(0,25)
y = [random.randint(0,100) for r in range(0,25)]

fig1 = pyplot.figure()
pyplot.plot(x, y, '-')  #繪畫的座標以及表現方法
pyplot.title('First Plot - Random integers')
pyplot.xlabel('X Axis')  #兩軸標示
pyplot.ylabel('Y Axis')

pyplot.show()

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/AYep4Fj.jpg"&gt;&lt;/p&gt;
&lt;p&gt;接下來就可以導入CSV或者數學方程式畫出我們想要的圖形
&lt;img src="http://i.imgur.com/frDZjMz.jpg"&gt;&lt;/p&gt;
&lt;p&gt;以及將範例code的部分放到data裡面了&lt;/p&gt;</content><category term="串列通訊"></category></entry><entry><title>40323143 - 日誌 105年7月8日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-8ri.html" rel="alternate"></link><published>2016-07-08T12:00:00+08:00</published><updated>2016-07-08T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-08:/blog/40323143-ri-zhi-105nian-7yue-8ri.html</id><summary type="html">&lt;p&gt;發現極限開關繪製的重大錯誤 測試的手臂組裝完成 控制程式未完成
</summary><content type="html">&lt;p&gt;發現極限開關繪製的重大錯誤 測試的手臂組裝完成 控制程式未完成
&lt;/p&gt;
&lt;p&gt;今天發現了第二種極限開關及底座裝配的問題，原因是因為在繪製第二種極限開關的固定孔時出錯，圖上的孔與實際的孔位置是相反的，導致底座列印出來時裝配出問題，己決方法是變更極限開關方向及電路配置，補救醒的讓極限開關及底座配合。&lt;/p&gt;
&lt;p&gt;今天列印底座後發現底座中安裝馬達的槽的長度尺寸小0.3mm，使馬達安裝有問題，原因可能是因為列印的些微誤差，解決方法是用銼刀將槽挫大，以及修改繪圖尺寸。&lt;/p&gt;
&lt;p&gt;機構的部分大概是如此，剩下的控制程式今天試著寫了一些，但是離實際上可用還有很多問題。&lt;/p&gt;
&lt;p&gt;控制程式的構想:&lt;/p&gt;
&lt;p&gt;1.承臂控制想利用控制通電時間來控制各個法達旋轉的角度，通電時間利用  [ cos^-1(欲移動距離/承臂長度) ]/馬達角速度 求。&lt;/p&gt;
&lt;p&gt;2.極限位置用極限開關訊號加上if來控制。&lt;/p&gt;
&lt;p&gt;3.底座馬達的控制可能會是固定的旋轉時間&lt;/p&gt;
&lt;p&gt;4.我還在學習怎麼寫&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.因為原先設計時極限開關的長邊中心線是通過底座中心點的，所以可以直接將極限開關反過來用，只改變電路配置。&lt;/p&gt;
&lt;p&gt;2.與底座極限開關相撞的桿子也是用免洗筷剪短裝上去的，免洗筷是由先前的免洗筷殘留部分加工而來的，同樣十分堅固。&lt;/p&gt;
&lt;p&gt;3.原先底座極限開關的電路配置是直接由接頭接去安裝在底座的arduino上，因安裝位置修改變更為繞過旋盤下方接上arduino。&lt;/p&gt;
&lt;p&gt;4.這次的極限開關繪製錯誤時分嚴重，若不是因為剛好有辦法可以補救，製造成本就完全浪費了。&lt;/p&gt;
&lt;p&gt;5.程式若沒辦法寫出來可能只會先讓手臂座固定的運動。&lt;/p&gt;
&lt;p&gt;6.等測試用的手臂完成後就會進入夾頭的部分。&lt;/p&gt;
&lt;p&gt;安裝完後的底座極限開關線路配置&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/eWCNvOM.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/TTmw1nR.jpg"&gt;&lt;/p&gt;
&lt;p&gt;由上往下看&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/M28o1N4.jpg"&gt;&lt;/p&gt;
&lt;p&gt;底座馬達安裝孔因應誤差所做的變更&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/PiZJDKq.png"&gt;&lt;/p&gt;
&lt;p&gt;手臂組合完成圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/M28o1N4.jpg"&gt;&lt;/p&gt;
&lt;p&gt;提問:&lt;/p&gt;
&lt;p&gt;請問實際上在設計時常使用什麼方法來檢查特徵錯誤，或是特定的機制?&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323131日誌 105/07/07</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050707.html" rel="alternate"></link><published>2016-07-07T19:00:00+08:00</published><updated>2016-07-07T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-07:/blog/40323131ri-zhi-1050707.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;學習python&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;h3&gt;因為遇到了一些問題，所以打算從頭學起，希望可以真正了解問題點在哪裡，也希望可以幫到其他人&lt;/h3&gt;
&lt;h3&gt;先從最基本的名稱、物件、型別、指派&lt;/h3&gt;
&lt;/br&gt;
&lt;h3&gt;命名規則&lt;/h3&gt;
&lt;h4&gt;當我們要在程式裡取名時，必須遵守Python的規則 :&lt;/h4&gt;
&lt;h4&gt;1. 可使用英文字母小寫 a ~ z  大寫 A ~ Z  數字 0 ~ 9  底線 _ &lt;/h4&gt;
&lt;h4&gt;2. 第一個字不能是數字&lt;/h4&gt;
&lt;h4&gt;Python的名稱區分大小寫，所以money跟Money代表不同的名稱，不過有些識別字被Python拿去用了，稱為保留字(reserved word)或關鍵字(keyword)，代表特定的意思，有其特殊用途，不能拿來命名，下圖為Python保留字&lt;/h4&gt; 
&lt;/br&gt;
&lt;img src="http://i.imgur.com/8pnfigw.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;串列(list)&lt;/h3&gt;
&lt;h4&gt;除了整數(int)、浮點數(float)、字串(str)外;叫做串列(list)，此種型別可放入任何型別的物件。想建立串列物件時，語法是方括號[]，放入想含有的物件，範例&lt;/h4&gt;
&lt;img src="http://i.imgur.com/svqclfC.jpg"&gt;
&lt;img src="http://i.imgur.com/3ZmPgi5.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;當我們說串列內可存放物件時，是讓該串列能以索引的方是指向別的物件&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;可變與不可變&lt;/h3&gt;
&lt;h4&gt;型別int、float、str的物件，都有不可變(immutable)的特性，一旦建立之後，其值就無法更動;可以讓名稱轉而指向別的物件，但無法修改不可變物件&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/27GqNUf.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;別名&lt;/h3&gt;
&lt;h4&gt;因為Python有不可變(int,float,str)跟可變(list)物件之分，而且名稱跟物件其實是獨立的兩樣東西，所以要注意當兩個(或以上)的名稱都指向同一個物件時的狀況，別名(alias)也叫做共享參考(shared reference)&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/VuRhuyg.jpg"&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/tSDhZOi.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;tuple(元組)&lt;/h3&gt;
&lt;h4&gt;就是不可變的list(串列)，須使用小括號()放入想含有的物件&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;運算式&lt;/h3&gt;
&lt;h3&gt;算術運算子&lt;/h3&gt;
&lt;h4&gt;包括(+, -, &lt;em&gt;, /, %,  //, &lt;strong&gt; )，*是乘法，&lt;/strong&gt;是冪次方，/是除法，//是地板除法，%餘數運算子，來看例子&lt;/h4&gt;
&lt;img src="http://i.imgur.com/ShNje04.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;str字串跟list與tuple也可以使用 + , * 作運算&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/nlxgaxY.jpg"&gt;
&lt;img src="http://i.imgur.com/w4pospm.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;比較運算子&lt;/h3&gt;
&lt;h4&gt;&amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=, !=, &amp;lt;&amp;gt;, == :作大小比較&lt;/h4&gt;
&lt;h4&gt;in, not in :檢查某元素是否在容器型物件裡頭&lt;/h4&gt;
&lt;h4&gt;is , is not :判斷兩個物件是否為同一個&lt;/h4&gt;
&lt;h4&gt;結果會產生bool(布林)型別的物件，True與False&lt;/h4&gt;
&lt;img src="http://i.imgur.com/aPADy6u.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;邏輯運算子&lt;/h3&gt;
&lt;h4&gt;and, or, not ，當and運算時，只有左右兩邊皆為True時，運算結果才會是True，其餘皆為False; or則只要有一個為True，得到的結果就是True，not則 是反轉真假值&lt;/h4&gt;
&lt;img src="http://i.imgur.com/tH1yLVL.jpg"&gt;
&lt;img src="http://i.imgur.com/hHQKeGD.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;一般的數值運算子，如(+, &lt;/em&gt;, /)等等，其優先順序都高於比較運算子，如(&amp;lt;=, !=, is not)等&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;述句&lt;/h3&gt;
&lt;h4&gt;是Python程式裡最小最基本的執行單位，每種數據都有其獨特的語法和語意，不符合述句語法的話，就是不合法的程式碼，就不能被直譯器執行&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;指派述句&lt;/h3&gt;
&lt;img src="http://i.imgur.com/dCoijfP.jpg"&gt;
&lt;img src="http://i.imgur.com/xfroPdq.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;多重指派&lt;/h3&gt;
&lt;img src="http://i.imgur.com/YJO9WE2.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;序列指派&lt;/h3&gt;
&lt;img src="http://i.imgur.com/ESozV9L.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;增強型指派述句&lt;/h3&gt;
&lt;img src="http://i.imgur.com/fSedP2d.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;if 條件判斷述句&lt;/h3&gt;
&lt;h4&gt;if述句可根據運算式結果(True或False)，作為條件來判斷應該執行哪部分的程式碼，控制走向，稱此類的述句為程式流程控制，if, elif, else那一行的最後面要加上冒號(:)，表是後面將接著一組程式述句，而裡頭的述句必須縮排。&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/IVb2SZB.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;Python因使用縮排來標示程式碼的層級，不同於C / C++ / Java / C# / JavaScript 以大括號{}來包住程式碼的方式&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;pass述句&lt;/h3&gt;
&lt;h4&gt;pass述句什麼也不做，因為根據Python語法，有時須放進述句，但不需要或不知道該寫什麼，就放pass述句，這樣便可符合語法，否則將發生錯誤&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;while迴圈述句&lt;/h3&gt;
&lt;img src="http://i.imgur.com/4NKE1mQ.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;for迴圈述句&lt;/h3&gt;
&lt;img src="http://i.imgur.com/4s0y3Mt.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;break述句與continue述句&lt;/h3&gt;
&lt;img src="http://i.imgur.com/Ig9WH6U.jpg"&gt;
&lt;img src="http://i.imgur.com/UyA58Gp.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;述句總覽表&lt;/h3&gt;
&lt;img src="http://i.imgur.com/8ob7Wit.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;函式&lt;/h3&gt;
&lt;h4&gt;定義函式的語法 def 函式名稱 (參數0, 參數1, ......):&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/bDVrgav.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;參數&lt;/h3&gt;
&lt;h4&gt;呼叫函式時可傳入參數，這個動作跟指派幾乎一模一樣，所謂傳入參數，也就是說呼叫方把某物件指派給參數的名稱，要小心的是，如果參數是可變物件，那麼函式拿到該參數後，也可以改變該物件&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;return述句&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/vXfp3sU.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;可視範圍(scope)&lt;/h3&gt;
&lt;h4&gt;名稱的可視範圍，決定了在程式的什麼地方能夠看到該名稱，進而存取該名稱指向的物件，在尚未定義函式的程式範圍裡，所有名稱通通都擁有[全域(global)]可視範圍，這些名稱定義在程式最高最外圍的地方，如下圖 a ,b, foo, x, y ，一旦定義後，就能存取名稱指向的物件，簡稱為(全域名稱);而定義在函式範圍裡的名稱(包括參數)，如下圖的n, m，只擁有[區域(local)]可視範圍，只有在該函式內才看得到這些名稱，簡稱(區域名稱)。&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/BWbCR4f.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;在函式(區域)裡，雖可以自由取用全域名稱，但只能讀 不能寫，該如何把新物件指派給全域名稱呢?一但在函式裡把全域名稱放在指派述句的左邊，會產生區域名稱，而不是把新物件指派給全域名稱。辦法是使用(global述句)，便可在函式內重新指派全域名稱到新物件&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/qA7lmCu.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;內建函式&lt;/h3&gt;
&lt;h4&gt;跟算術相關的內建函式&lt;/h4&gt;
&lt;h4&gt;求總合函式sum(), 求串列長度len()&lt;/h4&gt;
&lt;h4&gt; range()是建立出(能提供一連串東西的物件)，可用在for迴圈&lt;/h4&gt;
&lt;h4&gt;abs()絕對值, pow()冪次方，等同於**運算子, round()四捨五入到小數點後第二位, divmod()商和餘數&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/qchnuOI.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;跟邏輯相關的內建函式&lt;/h4&gt;
&lt;h4&gt;all(), any()&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/RJB7lZx.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;有些可得知關於物件的資訊&lt;/h4&gt;
&lt;h4&gt;id(), type()物件的型別, callable()是不是可被呼叫&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/rmbQIDR.jpg"&gt;
&lt;/br&gt;
&lt;h3&gt;模組(module)&lt;/h3&gt;
&lt;h4&gt;當Python程式越寫越大，不可能將所有程式碼都放在一起，而應該經適當的切割，根據功能特色劃分成一個又一個的模組(module)，由主程式匯入取用。Python模組可以是Python程式碼 也可以是C語言(或其他)的程式碼&lt;/h4&gt;
&lt;h4&gt;我們先建立兩個檔案，一個是主程式檔，一個是模組檔，將這兩個檔案放在同一個目錄裡(檔名自取)，不一定要跟下圖一樣&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/Y3SX5TE.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;在主程式檔裡，我們使用了(import 述句)匯入模組，例如(import 模組檔名)在import後加上模組名，注意，不需要加上 .py副檔名 。&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/wRVcgnI.jpg"&gt;
&lt;/br&gt;
&lt;h4&gt;在主執行檔裡使用(import 述句)的作用，就如同去執行模組檔一樣，只不過執行後得到的名稱，會被放入模組物件裡，因為Python 模組物件具有命名空間(namespace)的功能，可存放東西(名稱); 匯入後，可使用(模組名.名稱)的語法，去存取模組裡的名稱(與其指向的物件)。&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;import 述句還有其它變形，把 (import 模組名) 改為(from 模組名 import * )的話，等於直接把模組名裡的名稱，直接匯到主執行檔的全域範圍裡，就能直接使用(pi, gcd, factorial)等名稱，不需要再加(模組名.)，不過這種匯入方式比較容易出問題，萬一模組名裡的名稱跟你執行檔裡的名稱一樣? 或匯入多個模組，模組名之間重疊? 可以改用(from 模組名 import 名稱)，明確的指定想匯入的名稱。&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;另一種import 述句變形是(import 模組名 as m)，m是為模組新取的較短名稱，然後以(模組名.名稱)的語法，來存取模組內的名稱，例如: (m.pi)  (m.gcd)。&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;標準程式庫模組&lt;/h3&gt;
&lt;h4&gt;在模組keyword裡，串列kwlist含有Python的保留字，而函式iskeyword可判定某字串是否為保留字&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/P8q4L6j.jpg?1"&gt;
&lt;/br&gt;
&lt;h4&gt;有個模組含有Python全部的內建名稱，包括函式、常數、異常等，名稱是__builtins__，呼叫內建函式dir可列出模組內容。2.x版是模組__builtin__、3.x版是模組builtins&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;模組math裡含有各種常用的數學函數，如:sqrt(x)計算平方根、pow(x, y)可算出x的y次方、log10(x)可求出x的對數、sin(x)與cos(x)等三角函數、pi與 e 等數學常數&lt;/h4&gt;
&lt;/br&gt;
&lt;h4&gt;模組random跟隨機亂數相關，提供各種產生亂數的函式，不過Python模組的ranndom提供的是虛擬亂數(pseudo random 或稱假亂數)，非真正的亂數，不可用於密碼、加密、安全等方面。這種亂數屬於(亂中有序)，若了解其機制與規則，便能知道會產生哪個亂數&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;模組搜尋路徑&lt;/h3&gt;
&lt;h4&gt;當使用import匯入模組時，Python直譯器會根據一份模組搜尋路徑清單，逐一到路徑裡去找模組，然後載入。透過模組sys的串列path得知模組搜尋路徑&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;模組之名(&lt;strong&gt;name&lt;/strong&gt;)&lt;/h3&gt;
&lt;h4&gt;模組具備命名空間的功能，可放進名稱，除了各個模組自行提供的常數、函式之外，Python模組預設有一些名稱，其中之一(&lt;strong&gt;name&lt;/strong&gt;)，指向代表模組名的字串物件，透過這個名稱，便能判斷.py檔是被當做主程式檔交給直譯器執行，還是當做模組檔被import述句匯入&lt;/h4&gt;
&lt;/br&gt;
&lt;h3&gt;結論&lt;/h3&gt;
&lt;h4&gt;最重要的重點，是搞懂名稱(name)與物件(object)的概念，以及相關的型別(type)、指派(assignment)、綁定(binding)，了解基本知識，並明白在 "Python"裡任何東西都是物件&lt;/h4&gt;
&lt;/br&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 日誌 105年7月7日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-7ri.html" rel="alternate"></link><published>2016-07-07T12:00:00+08:00</published><updated>2016-07-07T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-07:/blog/40323143-ri-zhi-105nian-7yue-7ri.html</id><summary type="html">&lt;p&gt;承臂和馬達組裝完成 發現極限開關固定桿問題 新增旋盤外接件 電路配置構想
</summary><content type="html">&lt;p&gt;承臂和馬達組裝完成 發現極限開關固定桿問題 新增旋盤外接件 電路配置構想
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將兩個承臂與馬達和極限開關組裝固定 ，馬達固定是利用單心線的線芯穿過馬達與承臂上的固定孔鎖緊，因為昨天新增的凹槽可以承受馬達扭轉的力量，只需要讓他不會脫落即可。另外今天還發現固定設計在承臂上極限開關的固定桿強度不足，原因可能是因為列印的方向為桿件的徑向，導致桿在承受外力時列印接合面沒有足夠的強度支撐而產生破壞，解決方法是買5分的自攻螺釘將其鎖固。&lt;/p&gt;
&lt;p&gt;今天新增了一個新物件，目的是為了要使馬達可以有效的對懸盤輸出，與承臂上馬達安裝位置一樣。並且在旋盤底部新增了兩個直徑2.5的孔，其目的是為了配合今天新增的物件鎖固。&lt;/p&gt;
&lt;p&gt;今天將這旋盤以上除了夾頭外的東西組裝完，並由實物來預估線路的配置，線路配置目前的方案是將電線拉的比元件與電源的距離更長，讓電線在空中以圓弧狀放置，然後在底座上極限開關接點指向方向上將所有的線集中，然後拉到安裝在底座的arduino上。實際把線抓在安裝的預備位置轉動手臂測試時，目測在旋盤再碰觸到兩個極限開關的位置間旋轉應該是沒有問題，但今天沒有足夠的時間將底座印出來，沒有實際測試。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.5分的自攻螺釘是在虎尾的大盤大買的。單心線的線芯是在工具箱拿的，固定大概用10公分。&lt;/p&gt;
&lt;p&gt;2.與極限開關相撞的桿子是用免洗筷剪短裝上去的，免洗筷是從系館後面的7-11跟店員要來的，十分堅固。&lt;/p&gt;
&lt;p&gt;3.目前的線路配置絕對不是個好方法，真的絕對不是個好方法。&lt;/p&gt;
&lt;p&gt;4.不直接在旋盤底面新增新特徵，而是新增新物件，原因是為了方便列印旋盤。&lt;/p&gt;
&lt;p&gt;斷裂的固定桿及其光滑的斷面&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/lRDKIzp.jpg"&gt;&lt;/p&gt;
&lt;p&gt;承臂與馬達固定&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/4T1Z4rD.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/08grS9t.jpg"&gt;&lt;/p&gt;
&lt;p&gt;極限開關的鎖固&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/LzJqB6t.jpg"&gt;&lt;/p&gt;
&lt;p&gt;觸發極限開關的桿子&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/WkMM6Wg.jpg"&gt;&lt;/p&gt;
&lt;p&gt;底座上電線大概的集中位置&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/u3uzFJ6.png"&gt;&lt;/p&gt;
&lt;p&gt;旋盤新增的孔&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/oYsv4NR.png"&gt;&lt;/p&gt;
&lt;p&gt;新增的零件&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/YBxVUiq.png"&gt;&lt;/p&gt;
&lt;p&gt;提問:&lt;/p&gt;
&lt;p&gt;實際上在設計機構，機構上的電路配置有什麼重點需要注意?有沒有固定的配置方式?&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 日誌 105年7月6日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-6ri.html" rel="alternate"></link><published>2016-07-06T12:00:00+08:00</published><updated>2016-07-06T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-06:/blog/40323143-ri-zhi-105nian-7yue-6ri.html</id><summary type="html">&lt;p&gt;第二種極限開關的繪圖及安裝設計 第一種極限開關的安裝測試 承臂和馬達的安裝問題
</summary><content type="html">&lt;p&gt;第二種極限開關的繪圖及安裝設計 第一種極限開關的安裝測試 承臂和馬達的安裝問題
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將第二種極限開關新增到零件庫中，並在底座上依其尺寸新增了一個安裝位置，以及在懸盤上新增了一個用來安裝觸發極限開關突出物的安裝孔，和觸發極限開關的圓桿。&lt;/p&gt;
&lt;p&gt;今天還發現原本馬達和承臂的組合方式在實際使用上的問題，問題原因是原本的組合方式是想將馬達上原本就有的固定孔與承臂上的固定孔用螺絲或桿件等連接材將兩個元件結合，但因為孔徑的問題使中心的連接材找不到適合的東西使用，所以今天在承臂與馬達組裝的位置新增了配合實驗室馬達尺寸的凹槽，列印出來安裝測試效果很不錯，實際使用應該就是如此了。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.原先想用滑環或是其他具相同用途的機構解決線路纏繞的問題，但這些要在這禮拜內完成有難度，所以目前決定在底座設置極限開關作極限點，還會看情況修改。&lt;/p&gt;
&lt;p&gt;2.馬達在Onshape上分為兩部分，在Onshape上分別是Part3和Part4，為了配合承臂上的組合點修改，馬達旋轉端( Part4 )的圖也修改為實際上馬達的外型。&lt;/p&gt;
&lt;p&gt;3.夾頭部分因為在這禮拜完成極限開關的安裝有很大的困難，經討論後決定暫時將這部分放置，等安裝測試完成後繼續。&lt;/p&gt;
&lt;p&gt;Oshape上的極限開關&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/ScvGzdi.png"&gt;&lt;/p&gt;
&lt;p&gt;底座上極限開關裝置結果&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/B51Lwxj.png"&gt;&lt;/p&gt;
&lt;p&gt;安裝觸發極限開關突出物的安裝孔&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/G7J9Wh3.png"&gt;&lt;/p&gt;
&lt;p&gt;承臂與馬達組裝位置&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/AZZyUBd.png"&gt;&lt;/p&gt;
&lt;p&gt;承臂與馬達組裝位置實際測試結果&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/eoxikJN.jpg"&gt;&lt;/p&gt;
&lt;p&gt;舊的承臂上安裝馬達極極限開關&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/603pE3d.jpg"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 日誌 105年7月5日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-5ri.html" rel="alternate"></link><published>2016-07-05T12:00:00+08:00</published><updated>2016-07-05T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-05:/blog/40323143-ri-zhi-105nian-7yue-5ri.html</id><summary type="html">&lt;p&gt;第一種極限開關的繪圖及安裝設計以及夾頭極限開關安裝問題
</summary><content type="html">&lt;p&gt;第一種極限開關的繪圖及安裝設計以及夾頭極限開關安裝問題
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將買了三種不同接觸點種類的極限開關，並將其中一種新增進入零件庫，且由其尺寸在承臂上新增其安裝位置，在Onshape上目測沒有和其他零件有接觸，承臂上的極限開關配置應該已經確定了，但夾頭座的極限開關配置找不到適合的位置，可能需要變更夾頭座的外型，或是在畫外接的零件，底座的極限開關配置還沒有畫出來，但應該會是在底座配置極限開關，在旋盤上設置接觸點觸發極限開關。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.應祐生要求，將會在極限開關配置完成後利用3D列印印出一組非工作尺寸的手臂。&lt;/p&gt;
&lt;p&gt;2.Onshape上只有話接觸點最長的極限開關，實際使用時會依照實際狀況運用三種不同階典的極限開關。&lt;/p&gt;
&lt;p&gt;3.極限開關是在虎尾的國輝電子買的，三種接頭各三顆，原先想連滑環一起買，但沒有賣。&lt;/p&gt;
&lt;p&gt;4.想自己做滑環，但是怕會燒掉。&lt;/p&gt;
&lt;p&gt;極限開關的實體圖及量測尺寸&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/SssLtym.jpg"&gt;&lt;/p&gt;
&lt;p&gt;承臂上極限開關裝置位置&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/0BTAGoI.png"&gt;&lt;/p&gt;
&lt;p&gt;極限開關&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/uJ9mhD7.png"&gt;&lt;/p&gt;
&lt;p&gt;極限開關組合完-1&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/gykOTCW.png"&gt;&lt;/p&gt;
&lt;p&gt;極限開關組合完-2&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/te6PT6l.png"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 日誌 105年7月4日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-7yue-4ri.html" rel="alternate"></link><published>2016-07-04T12:00:00+08:00</published><updated>2016-07-04T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-07-04:/blog/40323143-ri-zhi-105nian-7yue-4ri.html</id><summary type="html">&lt;p&gt;針對承臂的設計及修改以及夾頭的不成功構想
</summary><content type="html">&lt;p&gt;針對承臂的設計及修改以及夾頭的不成功構想
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將Onshape平台上的因馬達尺寸測量錯誤導致機械手臂零件與馬達不能配合的錯誤修正，並增加馬達的外部特徵(電線接頭)及新增參數。以及因應手臂上馬達線路的配置改變設計，目前修改的有承臂末端新增一個槽及一個孔。還有嘗試一個夾頭的連桿構想，但是沒有成功。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.馬達固定端的寬度由和馬達邊相等的20mm改成實際尺寸18mm，因應改變馬達固定孔中心距由原本的12mm變成10mm。&lt;/p&gt;
&lt;p&gt;2.新增arm_fixhole_diameter(承臂及馬達連接孔的孔徑)和arm_fixhole_disdance(承臂及馬達連接孔的中心距)兩個參數，arm_fixhole_diameter=1.5，arm_fixhole_disdance=21。&lt;/p&gt;
&lt;p&gt;3.承臂末端新增一個11*10的槽，以及一個直徑為6的孔。&lt;/p&gt;
&lt;p&gt;4.夾頭的連桿構想在Assembly 3裡，原先想將兩根從動桿分別裝在主動桿不同位置，利用其旋轉時不同的位移來帶動前方橫桿的作動，達成像握住般的夾持，結果兩側的夾持變得太少，所以沒有成功。&lt;/p&gt;
&lt;p&gt;馬達固定孔的尺寸修改&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/Lx2ImtA.png"&gt;&lt;/p&gt;
&lt;p&gt;承臂與馬達連接孔尺寸修改&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/Z69YQxk.png"&gt;&lt;/p&gt;
&lt;p&gt;夾頭構想圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/JdPYWaP.png"&gt;&lt;/p&gt;
&lt;p&gt;提問:&lt;/p&gt;
&lt;p&gt;請問有沒有機構能讓有連接線的物體作360度旋轉，卻不會讓線纏住的機構？  &lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323131日誌 105/07/03</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050703.html" rel="alternate"></link><published>2016-07-03T19:00:00+08:00</published><updated>2016-07-03T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-03:/blog/40323131ri-zhi-1050703.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;學習python3 物件導向&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;h3&gt;稍微讀了一下老師提供的有關物件導向的資料，對於物件導向有個概念了，也有稍微做了一些筆記，放在資料夾裡頭，不過對於上次的問題，還是無法順利的解決，所以只好先跳過那一部分，先解決其他部分&lt;/h3&gt;
&lt;/br&gt;
&lt;h3&gt;下面幾張圖都是有關於上次遇到無法解決的那部分，於是我將那裏先行註解掉&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/tgsGvTv.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/K6zpDXO.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/wFkbnjQ.png"&gt;
&lt;/br&gt;
&lt;h3&gt;略過上述的那些問題，再將一些語法問題排除後，終於成功讓控制器介面跑出來了，不過跟原本的好像又差蠻多的，沒有圖片...，那部分可能還要花時間去了解，內部的一些按鈕的功能也不確定能不能使用，還有上述的那個問題，也要解決畢竟那是有關於顏色參數那方面的問題，所以非常重要，而且看指令列那邊，在執行的時候也還是出現蠻多錯誤的，而且又不知道問題出在哪裡了，所以還有好一大段路要走阿...&lt;/h3&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/j4TRMp2.png"&gt;
&lt;/br&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>PySerial 問題0703</title><link href="http://project.mde.tw/blog/pyserial-wen-ti-0703.html" rel="alternate"></link><published>2016-07-03T11:29:00+08:00</published><updated>2016-07-03T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-03:/blog/pyserial-wen-ti-0703.html</id><summary type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;


&lt;h3&gt;改成執行緒的方式收值&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

import serial
from threading import *
import sys
import time

def handleClient():

    while(True):
        print("waiting for client")
        time.sleep(3)
#with serial.Serial('COM6',9600,timeout = 1) as ser:

def recevive():


    my_list = [12]
 #   CRLF[10]="\r\n"
    with serial.Serial() as ser:
        ser.baudrate = 9600
        ser.port = 'COM6'
        ser.open()
        #print(ser.name)
        while(True):

            text = ser.read().decode('utf-8')

            text = text.replace('\r','\n')
            my_list = text

            #想要整理成矩陣 目前無頭緒
            print (my_list,end ='')
            if my_list[0] =="S":
                print("perfect")
            else:
                print("failed")
            time.sleep(0.1)

if __name__ == "__main__":

    t = Timer(3.0,handleClient)
    s = Timer(3.0,recevive)
    s.start()

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/9MkMv7u.png"&gt;&lt;/p&gt;
&lt;p&gt;有關執行緒的部分有多種方式可以使用，上面只是其中一個，還有別種方法是利用class的方法，不過在python3中用的方法都比較嚴謹，沒辦法隨意使用，以及他使用的語法和C其實差蠻多的，有可能後面做法做看看，利用python控制C的程式，說不定會簡單一點，但是不一定，也要實作才知道，最主要python2和python3的差別來自於他們對於編碼的方式不同，而且相對於他們使用的嚴謹，for example (encode . decode)部分的可能要需要再研讀一陣子。&lt;/p&gt;</content><category term="python串列傳輸實作"></category></entry><entry><title>PySerial 問題</title><link href="http://project.mde.tw/blog/pyserial-wen-ti.html" rel="alternate"></link><published>2016-07-02T11:29:00+08:00</published><updated>2016-07-02T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-02:/blog/pyserial-wen-ti.html</id><summary type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;


&lt;h2&gt;發現到的問題&lt;/h2&gt;

&lt;p&gt;主要是安裝wxpython phoenix 和他原本使用的wxpython不一樣，因此需要更改一些兩者的不同，但是在wxTerminal的部分可以跑出gui介面，但是再傳收值得部分，有些許問題，來自於wxpython和wxpython phoenix 的部分他們不互相支援，可能是他們還有些問題&lt;/p&gt;
&lt;p&gt;主要出問題的部分是來自於line 349&lt;/p&gt;
&lt;p&gt;git clone :https://github.com/pyserial/pyserial  在example裡面的wxTerminal.py啟動收值部分有些許問題&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/uIMc1rm.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src= "http://i.imgur.com/xMa2cwn.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/pFmSRlE.png"&gt;&lt;/p&gt;
&lt;h3&gt;底下為我寫的測試的程式&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

import serial

with serial.Serial() as ser:
    ser.baudrate = 9600
    ser.port = 'COM6'
    ser.open()
    print(ser.name)
#    ser.write(b'hello')
    while(1):
# transform data

        #ser.write(b"hello")


        x = ser.read().decode

        print(x)
&lt;/pre&gt;

&lt;h3&gt;實際測試部分&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/uIMc1rm.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/aEOnq9R.png"&gt;&lt;/p&gt;
&lt;h3&gt;最後補上  認真==鑽牛角尖的第二組  量螺絲&lt;/h3&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/UlaIizY.jpg"&gt;&lt;/p&gt;</content><category term="wxpython"></category></entry><entry><title>40323131日誌 105/07/01</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050701.html" rel="alternate"></link><published>2016-07-01T19:00:00+08:00</published><updated>2016-07-01T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-07-01:/blog/40323131ri-zhi-1050701.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;python2語法 修改成python3語法&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;下圖框框處，原本的程式碼是 gettext.install(domain, './locale', unicode = 1)，我是將unicode = 1 拿掉&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/S4niXlw.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h3&gt;底下的程式碼原本為imp.reload(sys) 
sys.setdefaultencoding('utf-8') ，在這裡我是將後面的sys.setdefaultencoding('utf-8') 拿掉，因為好像python3默認的編碼原本就是utf-8了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/g1UJkp7.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h3&gt;目前遇到的問題&lt;/h3&gt;
&lt;h4&gt;下面的錯誤是說模組沒有被loaded，所以無法導入，不過我去找了一下它的目錄裡頭是有bufferedcanvas這個檔案的，所以就不清楚錯誤出在哪裡&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/K3srBRX.png"&gt;
&lt;/br&gt;
&lt;h4&gt;接著底下的這個問題大概是我卡最久的地方，self.bgcolor = wx.Colour()，錯誤是說Colour這個物件沒有歸類在SetFromName裡頭，我試了蠻多次，結果都差不多....&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/tgWDvca.png"&gt;
&lt;/br&gt;
&lt;h4&gt;於是我又進到wx套件裡頭去找有沒有Colour這個物件，是找到蠻多有Colour字母的檔案，不過我不清楚要import哪一個&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/k3SVgXL.png"&gt;
&lt;/br&gt;
&lt;h3&gt;由於自己對於python的物件導向沒什麼概念，class跟__init__這些都不是很熟，感覺整天修改下來根本沒改什麼東西，所以感覺蠻有挫折感的...，另外用python3裡頭內建的2to3.py檔下去修改python2轉成python3語法的錯誤，感覺方便許多，我用的指令是python y:\Python34\Tools\Scipts\2to3.py -w 要修改的py檔，y:\Python34\Tools\Scipts\2to3.py 這裡是給定2to3.py檔的位置給它，-w是write的意思，然後才是要修改的py檔案&lt;/h3&gt;
&lt;/br&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>PySerial進度</title><link href="http://project.mde.tw/blog/pyserialjin-du.html" rel="alternate"></link><published>2016-07-01T11:29:00+08:00</published><updated>2016-07-01T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-07-01:/blog/pyserialjin-du.html</id><summary type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;
</summary><content type="html">&lt;p&gt;今日讀的進度，以及筆記&lt;/p&gt;


&lt;h3&gt;三個要件&lt;/h3&gt;

&lt;p&gt;1.pyserial&lt;/p&gt;
&lt;p&gt;2.wxpython with Phoenix&lt;/p&gt;
&lt;p&gt;3.python3以上的版本&lt;/p&gt;
&lt;h3&gt;2.7版的wxxpython和phoenix wxpython api比較&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://wxpython.org/Phoenix/docs/html/classic_vs_phoenix.html#classic-vs-phoenix"&gt;網站連結&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;PySerial documation about io control&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://pyserial.readthedocs.io/en/latest/shortintro.html"&gt;網站連結&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Wxxpython API Module&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://wxpython.org/Phoenix/docs/html/main.html"&gt;網站連結&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Wxxpython GUI Bulider wxGlade&lt;/h3&gt;

&lt;p&gt;今日寫程式遇到的問題點&lt;/p&gt;
&lt;p&gt;1.在wxTeriminal中遇到問題來自於他沒辦法顯示我傳給他的值&lt;/p&gt;
&lt;p&gt;2.以及他的pyserial中，需要詳細測試他所收到以及送的值的格式&lt;/p&gt;
&lt;p&gt;3.才能自己寫一套for python3 Gui的程式控制&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/GUqnneU.jpg"&gt;&lt;/p&gt;
&lt;p&gt;要能成功執行下方的程式必須要安裝&lt;/p&gt;
&lt;p&gt;1.python 3.4+&lt;/p&gt;
&lt;p&gt;2.wxPython Phoenix&lt;/p&gt;
&lt;p&gt;3.pyserial&lt;/p&gt;
&lt;h3&gt;關於程式碼有更改後的&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

#file name wxSerialConfigDialog.py

import wx
import serial
import serial.tools.list_ports

SHOW_BAUDRATE = 1 &lt;&lt; 0
SHOW_FORMAT = 1 &lt;&lt; 1
SHOW_FLOW = 1 &lt;&lt; 2
SHOW_TIMEOUT = 1 &lt;&lt; 3
SHOW_ALL = SHOW_BAUDRATE | SHOW_FORMAT | SHOW_FLOW | SHOW_TIMEOUT


class SerialConfigDialog(wx.Dialog):
    """\
    Serial Port configuration dialog, to be used with pySerial 2.0+
    When instantiating a class of this dialog, then the "serial" keyword
    argument is mandatory. It is a reference to a serial.Serial instance.
    the optional "show" keyword argument can be used to show/hide different
    settings. The default is SHOW_ALL which corresponds to
    SHOW_BAUDRATE|SHOW_FORMAT|SHOW_FLOW|SHOW_TIMEOUT. All constants can be
    found in this module (not the class).
    """

    def __init__(self, *args, **kwds):
        # grab the serial keyword and remove it from the dict
        self.serial = kwds['serial']
        del kwds['serial']
        self.show = SHOW_ALL
        if 'show' in kwds:
            self.show = kwds.pop('show')
        # begin wxGlade: SerialConfigDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_2 = wx.StaticText(self, -1, "Port")
        self.choice_port = wx.Choice(self, -1, choices=[])
        self.label_1 = wx.StaticText(self, -1, "Baudrate")
        self.combo_box_baudrate = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.sizer_1_staticbox = wx.StaticBox(self, -1, "Basics")
        self.panel_format = wx.Panel(self, -1)
        self.label_3 = wx.StaticText(self.panel_format, -1, "Data Bits")
        self.choice_databits = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.label_4 = wx.StaticText(self.panel_format, -1, "Stop Bits")
        self.choice_stopbits = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.label_5 = wx.StaticText(self.panel_format, -1, "Parity")
        self.choice_parity = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.sizer_format_staticbox = wx.StaticBox(self.panel_format, -1, "Data Format")
        self.panel_timeout = wx.Panel(self, -1)
        self.checkbox_timeout = wx.CheckBox(self.panel_timeout, -1, "Use Timeout")
        self.text_ctrl_timeout = wx.TextCtrl(self.panel_timeout, -1, "")
        self.label_6 = wx.StaticText(self.panel_timeout, -1, "seconds")
        self.sizer_timeout_staticbox = wx.StaticBox(self.panel_timeout, -1, "Timeout")
        self.panel_flow = wx.Panel(self, -1)
        self.checkbox_rtscts = wx.CheckBox(self.panel_flow, -1, "RTS/CTS")
        self.checkbox_xonxoff = wx.CheckBox(self.panel_flow, -1, "Xon/Xoff")
        self.sizer_flow_staticbox = wx.StaticBox(self.panel_flow, -1, "Flow Control")
        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        # attach the event handlers
        self.__attach_events()

    def __set_properties(self):
        # begin wxGlade: SerialConfigDialog.__set_properties
        self.SetTitle("Serial Port Configuration")
        self.choice_databits.SetSelection(0)
        self.choice_stopbits.SetSelection(0)
        self.choice_parity.SetSelection(0)
        self.text_ctrl_timeout.Enable(False)
        self.button_ok.SetDefault()
        # end wxGlade
        self.SetTitle("Serial Port Configuration")
        if self.show &amp; SHOW_TIMEOUT:
            self.text_ctrl_timeout.Enable(0)
        self.button_ok.SetDefault()

        if not self.show &amp; SHOW_BAUDRATE:
            self.label_1.Hide()
            self.combo_box_baudrate.Hide()
        if not self.show &amp; SHOW_FORMAT:
            self.panel_format.Hide()
        if not self.show &amp; SHOW_TIMEOUT:
            self.panel_timeout.Hide()
        if not self.show &amp; SHOW_FLOW:
            self.panel_flow.Hide()

        # fill in ports and select current setting
        preferred_index = 0
        self.choice_port.Clear()
        self.ports = []
        for n, (portname, desc, hwid) in enumerate(sorted(serial.tools.list_ports.comports())):
            self.choice_port.Append('{} - {}'.format(portname, desc))
            self.ports.append(portname)
            if self.serial.name == portname:
                preferred_index = n
        self.choice_port.SetSelection(preferred_index)
        if self.show &amp; SHOW_BAUDRATE:
            preferred_index = None
            # fill in baud rates and select current setting
            self.combo_box_baudrate.Clear()
            for n, baudrate in enumerate(self.serial.BAUDRATES):
                self.combo_box_baudrate.Append(str(baudrate))
                if self.serial.baudrate == baudrate:
                    preferred_index = n
            if preferred_index is not None:
                self.combo_box_baudrate.SetSelection(preferred_index)
            else:
                self.combo_box_baudrate.SetValue('{}'.format(self.serial.baudrate))
        if self.show &amp; SHOW_FORMAT:
            # fill in data bits and select current setting
            self.choice_databits.Clear()
            for n, bytesize in enumerate(self.serial.BYTESIZES):
                self.choice_databits.Append(str(bytesize))
                if self.serial.bytesize == bytesize:
                    index = n
            self.choice_databits.SetSelection(index)
            # fill in stop bits and select current setting
            self.choice_stopbits.Clear()
            for n, stopbits in enumerate(self.serial.STOPBITS):
                self.choice_stopbits.Append(str(stopbits))
                if self.serial.stopbits == stopbits:
                    index = n
            self.choice_stopbits.SetSelection(index)
            # fill in parities and select current setting
            self.choice_parity.Clear()
            for n, parity in enumerate(self.serial.PARITIES):
                self.choice_parity.Append(str(serial.PARITY_NAMES[parity]))
                if self.serial.parity == parity:
                    index = n
            self.choice_parity.SetSelection(index)
        if self.show &amp; SHOW_TIMEOUT:
            # set the timeout mode and value
            if self.serial.timeout is None:
                self.checkbox_timeout.SetValue(False)
                self.text_ctrl_timeout.Enable(False)
            else:
                self.checkbox_timeout.SetValue(True)
                self.text_ctrl_timeout.Enable(True)
                self.text_ctrl_timeout.SetValue(str(self.serial.timeout))
        if self.show &amp; SHOW_FLOW:
            # set the rtscts mode
            self.checkbox_rtscts.SetValue(self.serial.rtscts)
            # set the rtscts mode
            self.checkbox_xonxoff.SetValue(self.serial.xonxoff)

    def __do_layout(self):
        # begin wxGlade: SerialConfigDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_flow_staticbox.Lower()
        sizer_flow = wx.StaticBoxSizer(self.sizer_flow_staticbox, wx.HORIZONTAL)
        self.sizer_timeout_staticbox.Lower()
        sizer_timeout = wx.StaticBoxSizer(self.sizer_timeout_staticbox, wx.HORIZONTAL)
        self.sizer_format_staticbox.Lower()
        sizer_format = wx.StaticBoxSizer(self.sizer_format_staticbox, wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(3, 2, 0, 0)
        self.sizer_1_staticbox.Lower()
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.VERTICAL)
        sizer_basics = wx.FlexGridSizer(3, 2, 0, 0)
        sizer_basics.Add(self.label_2, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_basics.Add(self.choice_port, 0, wx.EXPAND, 0)
        sizer_basics.Add(self.label_1, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_basics.Add(self.combo_box_baudrate, 0, wx.EXPAND, 0)
        sizer_basics.AddGrowableCol(1)
        sizer_1.Add(sizer_basics, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_3, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_databits, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.label_4, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_stopbits, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.label_5, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_parity, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        sizer_format.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.panel_format.SetSizer(sizer_format)
        sizer_2.Add(self.panel_format, 0, wx.EXPAND, 0)
        sizer_timeout.Add(self.checkbox_timeout, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_timeout.Add(self.text_ctrl_timeout, 0, 0, 0)
        sizer_timeout.Add(self.label_6, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        self.panel_timeout.SetSizer(sizer_timeout)
        sizer_2.Add(self.panel_timeout, 0, wx.EXPAND, 0)
        sizer_flow.Add(self.checkbox_rtscts, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_flow.Add(self.checkbox_xonxoff, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_flow.Add((10, 10), 1, wx.EXPAND, 0)
        self.panel_flow.SetSizer(sizer_flow)
        sizer_2.Add(self.panel_flow, 0, wx.EXPAND, 0)
        sizer_3.Add(self.button_ok, 0, 0, 0)
        sizer_3.Add(self.button_cancel, 0, 0, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.ALIGN_RIGHT, 4)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        wx.EVT_BUTTON(self, self.button_ok.GetId(), self.OnOK)
        wx.EVT_BUTTON(self, self.button_cancel.GetId(), self.OnCancel)
        if self.show &amp; SHOW_TIMEOUT:
            wx.EVT_CHECKBOX(self, self.checkbox_timeout.GetId(), self.OnTimeout)

    def OnOK(self, events):
        success = True
        self.serial.port = self.ports[self.choice_port.GetSelection()]
        if self.show &amp; SHOW_BAUDRATE:
            try:
                b = int(self.combo_box_baudrate.GetValue())
            except ValueError:
                with wx.MessageDialog(
                        self,
                        'Baudrate must be a numeric value',
                        'Value Error',
                        wx.OK | wx.ICON_ERROR) as dlg:
                    dlg.ShowModal()
                success = False
            else:
                self.serial.baudrate = b
        if self.show &amp; SHOW_FORMAT:
            self.serial.bytesize = self.serial.BYTESIZES[self.choice_databits.GetSelection()]
            self.serial.stopbits = self.serial.STOPBITS[self.choice_stopbits.GetSelection()]
            self.serial.parity = self.serial.PARITIES[self.choice_parity.GetSelection()]
        if self.show &amp; SHOW_FLOW:
            self.serial.rtscts = self.checkbox_rtscts.GetValue()
            self.serial.xonxoff = self.checkbox_xonxoff.GetValue()
        if self.show &amp; SHOW_TIMEOUT:
            if self.checkbox_timeout.GetValue():
                try:
                    self.serial.timeout = float(self.text_ctrl_timeout.GetValue())
                except ValueError:
                    with wx.MessageDialog(
                            self,
                            'Timeout must be a numeric value',
                            'Value Error',
                            wx.OK | wx.ICON_ERROR) as dlg:
                        dlg.ShowModal()
                    success = False
            else:
                self.serial.timeout = None
        if success:
            self.EndModal(wx.ID_OK)

    def OnCancel(self, events):
        self.EndModal(wx.ID_CANCEL)

    def OnTimeout(self, events):
        if self.checkbox_timeout.GetValue():
            self.text_ctrl_timeout.Enable(True)
        else:
            self.text_ctrl_timeout.Enable(False)

# end of class SerialConfigDialog


class MyApp(wx.App):
    """Test code"""
    def OnInit(self):
        wx.InitAllImageHandlers()

        ser = serial.Serial()
        print(ser)
        # loop until cancel is pressed, old values are used as start for the next run
        # show the different views, one after the other
        # value are kept.
        for flags in (SHOW_BAUDRATE, SHOW_FLOW, SHOW_FORMAT, SHOW_TIMEOUT, SHOW_ALL):
            dialog_serial_cfg = SerialConfigDialog(None, -1, "", serial=ser, show=flags)
            self.SetTopWindow(dialog_serial_cfg)
            result = dialog_serial_cfg.ShowModal()
            print(ser)
            if result != wx.ID_OK:
                break
        # the user can play around with the values, CANCEL aborts the loop
        while True:
            dialog_serial_cfg = SerialConfigDialog(None, -1, "", serial=ser)
            self.SetTopWindow(dialog_serial_cfg)
            result = dialog_serial_cfg.ShowModal()
            print(ser)
            if result != wx.ID_OK:
                break
        return 0

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()

&lt;/pre&gt;

&lt;h3&gt;主程式部分&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

#file name wxTerminal.py

import codecs
import serial
import threading
import wx
import wxSerialConfigDialog

# ----------------------------------------------------------------------
# Create an own event type, so that GUI updates can be delegated
# this is required as on some platforms only the main thread can
# access the GUI without crashing. wxMutexGuiEnter/wxMutexGuiLeave
# could be used too, but an event is more elegant.

SERIALRX = wx.NewEventType()
# bind to serial data receive events
EVT_SERIALRX = wx.PyEventBinder(SERIALRX, 0)


class SerialRxEvent(wx.PyCommandEvent):
    eventType = SERIALRX

    def __init__(self, windowID, data):
        wx.PyCommandEvent.__init__(self, self.eventType, windowID)
        self.data = data

    def Clone(self):
        self.__class__(self.GetId(), self.data)

# ----------------------------------------------------------------------

ID_CLEAR = wx.NewId()
ID_SAVEAS = wx.NewId()
ID_SETTINGS = wx.NewId()
ID_TERM = wx.NewId()
ID_EXIT = wx.NewId()
ID_RTS = wx.NewId()
ID_DTR = wx.NewId()

NEWLINE_CR = 0
NEWLINE_LF = 1
NEWLINE_CRLF = 2


class TerminalSetup:
    """
    Placeholder for various terminal settings. Used to pass the
    options to the TerminalSettingsDialog.
    """
    def __init__(self):
        self.echo = False
        self.unprintable = False
        self.newline = NEWLINE_CRLF


class TerminalSettingsDialog(wx.Dialog):
    """Simple dialog with common terminal settings like echo, newline mode."""

    def __init__(self, *args, **kwds):
        self.settings = kwds['settings']
        del kwds['settings']
        # begin wxGlade: TerminalSettingsDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.checkbox_echo = wx.CheckBox(self, -1, "Local Echo")
        self.checkbox_unprintable = wx.CheckBox(self, -1, "Show unprintable characters")
        self.radio_box_newline = wx.RadioBox(self, -1, "Newline Handling", choices=["CR only", "LF only", "CR+LF"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.sizer_4_staticbox = wx.StaticBox(self, -1, "Input/Output")
        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.__attach_events()
        self.checkbox_echo.SetValue(self.settings.echo)
        self.checkbox_unprintable.SetValue(self.settings.unprintable)
        self.radio_box_newline.SetSelection(self.settings.newline)

    def __set_properties(self):
        # begin wxGlade: TerminalSettingsDialog.__set_properties
        self.SetTitle("Terminal Settings")
        self.radio_box_newline.SetSelection(0)
        self.button_ok.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TerminalSettingsDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.VERTICAL)
        sizer_4.Add(self.checkbox_echo, 0, wx.ALL, 4)
        sizer_4.Add(self.checkbox_unprintable, 0, wx.ALL, 4)
        sizer_4.Add(self.radio_box_newline, 0, 0, 0)
        sizer_2.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_3.Add(self.button_ok, 0, 0, 0)
        sizer_3.Add(self.button_cancel, 0, 0, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.ALIGN_RIGHT, 4)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        self.Bind(wx.EVT_BUTTON, self.OnOK, id=self.button_ok.GetId())
        self.Bind(wx.EVT_BUTTON, self.OnCancel, id=self.button_cancel.GetId())

    def OnOK(self, events):
        """Update data wil new values and close dialog."""
        self.settings.echo = self.checkbox_echo.GetValue()
        self.settings.unprintable = self.checkbox_unprintable.GetValue()
        self.settings.newline = self.radio_box_newline.GetSelection()
        self.EndModal(wx.ID_OK)

    def OnCancel(self, events):
        """Do not update data but close dialog."""
        self.EndModal(wx.ID_CANCEL)

# end of class TerminalSettingsDialog


class TerminalFrame(wx.Frame):
    """Simple terminal program for wxPython"""

    def __init__(self, *args, **kwds):
        self.serial = serial.Serial()
        self.serial.timeout = 0.5   # make sure that the alive event can be checked from time to time
        self.settings = TerminalSetup()  # placeholder for the settings
        self.thread = None
        self.alive = threading.Event()
        # begin wxGlade: TerminalFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.frame_terminal_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_CLEAR, "&amp;Clear", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_SAVEAS, "&amp;Save Text As...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_TERM, "&amp;Terminal Settings...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_EXIT, "&amp;Exit", "", wx.ITEM_NORMAL)
        self.frame_terminal_menubar.Append(wxglade_tmp_menu, "&amp;File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_RTS, "RTS", "", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(ID_DTR, "&amp;DTR", "", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(ID_SETTINGS, "&amp;Port Settings...", "", wx.ITEM_NORMAL)
        self.frame_terminal_menubar.Append(wxglade_tmp_menu, "Serial Port")
        self.SetMenuBar(self.frame_terminal_menubar)
        # Menu Bar end
        self.text_ctrl_output = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnClear, id=ID_CLEAR)
        self.Bind(wx.EVT_MENU, self.OnSaveAs, id=ID_SAVEAS)
        self.Bind(wx.EVT_MENU, self.OnTermSettings, id=ID_TERM)
        self.Bind(wx.EVT_MENU, self.OnExit, id=ID_EXIT)
        self.Bind(wx.EVT_MENU, self.OnRTS, id=ID_RTS)
        self.Bind(wx.EVT_MENU, self.OnDTR, id=ID_DTR)
        self.Bind(wx.EVT_MENU, self.OnPortSettings, id=ID_SETTINGS)
        # end wxGlade
        self.__attach_events()          # register events
        self.OnPortSettings(None)       # call setup dialog on startup, opens port
        if not self.alive.isSet():
            self.Close()

    def StartThread(self):
        """Start the receiver thread"""
        self.thread = threading.Thread(target=self.ComPortThread)
        self.thread.setDaemon(1)
        self.alive.set()
        self.thread.start()
        self.serial.rts = True
        self.serial.dtr = True
        self.frame_terminal_menubar.Check(ID_RTS, self.serial.rts)
        self.frame_terminal_menubar.Check(ID_DTR, self.serial.dtr)

    def StopThread(self):
        """Stop the receiver thread, wait until it's finished."""
        if self.thread is not None:
            self.alive.clear()          # clear alive event for thread
            self.thread.join()          # wait until thread has finished
            self.thread = None

    def __set_properties(self):
        # begin wxGlade: TerminalFrame.__set_properties
        self.SetTitle("Serial Terminal")
        self.SetSize((546, 383))
        self.text_ctrl_output.SetFont(wx.Font(9, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TerminalFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.text_ctrl_output, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        # register events at the controls
        self.Bind(wx.EVT_MENU, self.OnClear, id=ID_CLEAR)
        self.Bind(wx.EVT_MENU, self.OnSaveAs, id=ID_SAVEAS)
        self.Bind(wx.EVT_MENU, self.OnExit, id=ID_EXIT)
        self.Bind(wx.EVT_MENU, self.OnPortSettings, id=ID_SETTINGS)
        self.Bind(wx.EVT_MENU, self.OnTermSettings, id=ID_TERM)
        self.text_ctrl_output.Bind(wx.EVT_CHAR, self.OnKey)
        self.Bind(EVT_SERIALRX, self.OnSerialRead)
        self.Bind(wx.EVT_CLOSE, self.OnClose)

    def OnExit(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Menu point Exit"""
        self.Close()

    def OnClose(self, event):
        """Called on application shutdown."""
        self.StopThread()               # stop reader thread
        self.serial.close()             # cleanup
        self.Destroy()                  # close windows, exit app

    def OnSaveAs(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Save contents of output window."""
        with wx.FileDialog(
                None,
                "Save Text As...",
                ".",
                "",
                "Text File|*.txt|All Files|*",
                wx.SAVE) as dlg:
            if dlg.ShowModal() == wx.ID_OK:
                filename = dlg.GetPath()
                with codecs.open(filename, 'w', encoding='utf-8') as f:
                    text = self.text_ctrl_output.GetValue().encode("utf-8")
                    f.write(text)

    def OnClear(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Clear contents of output window."""
        self.text_ctrl_output.Clear()

    def OnPortSettings(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """
        Show the port settings dialog. The reader thread is stopped for the
        settings change.
        """
        if event is not None:           # will be none when called on startup
            self.StopThread()
            self.serial.close()
        ok = False
        while not ok:
            with wxSerialConfigDialog.SerialConfigDialog(
                    self,
                    -1,
                    "",
                    show=wxSerialConfigDialog.SHOW_BAUDRATE | wxSerialConfigDialog.SHOW_FORMAT | wxSerialConfigDialog.SHOW_FLOW,
                    serial=self.serial) as dialog_serial_cfg:
                dialog_serial_cfg.CenterOnParent()
                result = dialog_serial_cfg.ShowModal()
            # open port if not called on startup, open it on startup and OK too
            if result == wx.ID_OK or event is not None:
                try:
                    self.serial.open()
                except serial.SerialException as e:
                    with wx.MessageDialog(self, str(e), "Serial Port Error", wx.OK | wx.ICON_ERROR)as dlg:
                        dlg.ShowModal()
                else:
                    self.StartThread()
                    self.SetTitle("Serial Terminal on {} [{},{},{},{}{}{}]".format(
                        self.serial.portstr,
                        self.serial.baudrate,
                        self.serial.bytesize,
                        self.serial.parity,
                        self.serial.stopbits,
                        ' RTS/CTS' if self.serial.rtscts else '',
                        ' Xon/Xoff' if self.serial.xonxoff else '',
                        ))
                    ok = True
            else:
                # on startup, dialog aborted
                self.alive.clear()
                ok = True

    def OnTermSettings(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """\
        Menu point Terminal Settings. Show the settings dialog
        with the current terminal settings.
        """
        with TerminalSettingsDialog(self, -1, "", settings=self.settings) as dialog:
            dialog.CenterOnParent()
            dialog.ShowModal()

    def OnKey(self, event):
        """\
        Key event handler. If the key is in the ASCII range, write it to the
        serial port. Newline handling and local echo is also done here.
        """
        code = event.GetUnicodeKey()
        if code &lt; 256:   # XXX bug in some versions of wx returning only capital letters
            code = event.GetKeyCode()
        if code == 13:                      # is it a newline? (check for CR which is the RETURN key)
            if self.settings.echo:          # do echo if needed
                self.text_ctrl_output.AppendText('\n')
            if self.settings.newline == NEWLINE_CR:
                self.serial.write(b'\r')     # send CR
            elif self.settings.newline == NEWLINE_LF:
                self.serial.write(b'\n')     # send LF
            elif self.settings.newline == NEWLINE_CRLF:
                self.serial.write(b'\r\n')   # send CR+LF
        else:
            char = chr(code)
            if self.settings.echo:          # do echo if needed
                self.WriteText(char)
            self.serial.write(char.encode('UTF-8', 'replace'))         # send the character

    def WriteText(self, text):
        if self.settings.unprintable:
            text = ''.join([c if (c &gt;= ' ' and c != '\x7f') else chr(0x2400 + ord(c)) for c in text])
        self.text_ctrl_output.AppendText(text)

    def OnSerialRead(self, event):
        """Handle input from the serial port."""
        self.WriteText(event.data.decode('UTF-8', 'replace'))

    def ComPortThread(self):
        """\
        Thread that handles the incoming traffic. Does the basic input
        transformation (newlines) and generates an SerialRxEvent
        """
        while self.alive.isSet():
            b = self.serial.read(self.serial.in_waiting or 1)
            if b:
                # newline transformation
                if self.settings.newline == NEWLINE_CR:
                    b = b.replace(b'\r', b'\n')
                elif self.settings.newline == NEWLINE_LF:
                    pass
                elif self.settings.newline == NEWLINE_CRLF:
                    b = b.replace(b'\r\n', b'\n')
                event = SerialRxEvent(self.GetId(), b)
                self.GetEventHandler().AddPendingEvent(event)

    def OnRTS(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        self.serial.rts = event.IsChecked()

    def OnDTR(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        self.serial.dtr = event.Checked()

# end of class TerminalFrame


class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_terminal = TerminalFrame(None, -1, "")
        self.SetTopWindow(frame_terminal)
        frame_terminal.Show(True)
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()

&lt;/pre&gt;</content><category term="wxpython"></category></entry><entry><title>40323131日誌 105/06/30</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050630.html" rel="alternate"></link><published>2016-06-30T19:00:00+08:00</published><updated>2016-06-30T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-06-30:/blog/40323131ri-zhi-1050630.html</id><summary type="html">&lt;p&gt;安裝wxpython 與 將control_3dprinter 從原本python2語法 修改成python3語法
</summary><content type="html">&lt;p&gt;安裝wxpython 與 將control_3dprinter 從原本python2語法 修改成python3語法
&lt;/p&gt;
&lt;h3&gt;python2語法 修改成python3語法&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;原本圖片的紅框處為 except IOError, x:為python2語法，將它修改成能在python3上執行&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/yONrOlL.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h3&gt;原來python2 為Queue 將它修改成queue 因為python3裡頭更改成queue了&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/sbLTZIj.png"&gt;
&lt;/br&gt;
&lt;h3&gt;還有要加上括號，因為python2上執行可以不需要括號起來，但是在python3上執行要加上小括號，目前找到這些語法問題
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;目前遇到的問題&lt;/h3&gt;

&lt;h4&gt;在下圖執行的時候跑出name 'reload' is not define &lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/FjZQHVW.png"&gt;
&lt;/br&gt;
&lt;h4&gt;上網google一下，找到了有可能是沒有reload到，所以多 import imp &lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/HhP42Gs.png"&gt;
&lt;/br&gt;
&lt;h4&gt;可是又遇到了下圖的問題，好像是python2默認的使用的是ascii，要將它更改成utf-8，不過看起來沒有成功&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/KZJt1YS.png"&gt;
&lt;/br&gt;
&lt;h4&gt;想要執行一下，來確認一下是否更改成功，不過不知道為什麼又跑出name 'reload' is not define&lt;/h4&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/UmwpPJd.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h4&gt;目前卡在這邊，無法想通為什麼會變成這樣&lt;/h4&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>PySerial</title><link href="http://project.mde.tw/blog/pyserial.html" rel="alternate"></link><published>2016-06-30T11:29:00+08:00</published><updated>2016-06-30T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-06-30:/blog/pyserial.html</id><summary type="html">&lt;p&gt;更新資料Wxpython for python3&lt;/p&gt;
</summary><content type="html">&lt;p&gt;更新資料Wxpython for python3&lt;/p&gt;


&lt;p&gt;安裝方法
https://www.youtube.com/watch?v=_djD5EHfNCw&lt;/p&gt;
&lt;pre class="brush: python"&gt;

#先檢查網路
#確定python版本為python3.4

pip install -U --trusted-host wxpython.org --pre -f https://wxpython.org/Phoenix/snapshot-builds/ wxPython_Phoenix

#記得打開terimal 檢查import wx
#看有沒有成功

#因為要做串列傳輸Serial
#要下指令安裝pyserial
pip install pyserial


&lt;/pre&gt;

&lt;h3&gt;接下來先用範例程式測試串列傳輸&lt;/h3&gt;

&lt;p&gt;&lt;html&gt;https://github.com/pyserial/pyserial/tree/master/examples&lt;/html&gt;&lt;/p&gt;
&lt;pre class="brush: python"&gt;

#
#!/usr/bin/env python
#
# A simple terminal application with wxPython.
#
# (C) 2001-2015 Chris Liechti &lt;cliechti@gmx.net&gt;
#
# SPDX-License-Identifier:    BSD-3-Clause

import codecs
import serial
import threading
import wx
import wxSerialConfigDialog


SERIALRX = wx.NewEventType()
# bind to serial data receive events
EVT_SERIALRX = wx.PyEventBinder(SERIALRX, 0)


class SerialRxEvent(wx.PyCommandEvent):
    eventType = SERIALRX

    def __init__(self, windowID, data):
        wx.PyCommandEvent.__init__(self, self.eventType, windowID)
        self.data = data

    def Clone(self):
        self.__class__(self.GetId(), self.data)

# ----------------------------------------------------------------------

ID_CLEAR = wx.NewId()
ID_SAVEAS = wx.NewId()
ID_SETTINGS = wx.NewId()
ID_TERM = wx.NewId()
ID_EXIT = wx.NewId()
ID_RTS = wx.NewId()
ID_DTR = wx.NewId()

NEWLINE_CR = 0
NEWLINE_LF = 1
NEWLINE_CRLF = 2


class TerminalSetup:
    """
    Placeholder for various terminal settings. Used to pass the
    options to the TerminalSettingsDialog.
    """
    def __init__(self):
        self.echo = False
        self.unprintable = False
        self.newline = NEWLINE_CRLF


class TerminalSettingsDialog(wx.Dialog):
    """Simple dialog with common terminal settings like echo, newline mode."""

    def __init__(self, *args, **kwds):
        self.settings = kwds['settings']
        del kwds['settings']
        # begin wxGlade: TerminalSettingsDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.checkbox_echo = wx.CheckBox(self, -1, "Local Echo")
        self.checkbox_unprintable = wx.CheckBox(self, -1, "Show unprintable characters")
        self.radio_box_newline = wx.RadioBox(self, -1, "Newline Handling", choices=["CR only", "LF only", "CR+LF"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.sizer_4_staticbox = wx.StaticBox(self, -1, "Input/Output")
        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        self.__attach_events()
        self.checkbox_echo.SetValue(self.settings.echo)
        self.checkbox_unprintable.SetValue(self.settings.unprintable)
        self.radio_box_newline.SetSelection(self.settings.newline)

    def __set_properties(self):
        # begin wxGlade: TerminalSettingsDialog.__set_properties
        self.SetTitle("Terminal Settings")
        self.radio_box_newline.SetSelection(0)
        self.button_ok.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TerminalSettingsDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_4_staticbox.Lower()
        sizer_4 = wx.StaticBoxSizer(self.sizer_4_staticbox, wx.VERTICAL)
        sizer_4.Add(self.checkbox_echo, 0, wx.ALL, 4)
        sizer_4.Add(self.checkbox_unprintable, 0, wx.ALL, 4)
        sizer_4.Add(self.radio_box_newline, 0, 0, 0)
        sizer_2.Add(sizer_4, 0, wx.EXPAND, 0)
        sizer_3.Add(self.button_ok, 0, 0, 0)
        sizer_3.Add(self.button_cancel, 0, 0, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.ALIGN_RIGHT, 4)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        self.Bind(wx.EVT_BUTTON, self.OnOK, id=self.button_ok.GetId())
        self.Bind(wx.EVT_BUTTON, self.OnCancel, id=self.button_cancel.GetId())

    def OnOK(self, events):
        """Update data wil new values and close dialog."""
        self.settings.echo = self.checkbox_echo.GetValue()
        self.settings.unprintable = self.checkbox_unprintable.GetValue()
        self.settings.newline = self.radio_box_newline.GetSelection()
        self.EndModal(wx.ID_OK)

    def OnCancel(self, events):
        """Do not update data but close dialog."""
        self.EndModal(wx.ID_CANCEL)

# end of class TerminalSettingsDialog


class TerminalFrame(wx.Frame):
    """Simple terminal program for wxPython"""

    def __init__(self, *args, **kwds):
        self.serial = serial.Serial()
        self.serial.timeout = 0.5   # make sure that the alive event can be checked from time to time
        self.settings = TerminalSetup()  # placeholder for the settings
        self.thread = None
        self.alive = threading.Event()
        # begin wxGlade: TerminalFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.frame_terminal_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_CLEAR, "&amp;Clear", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.Append(ID_SAVEAS, "&amp;Save Text As...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_TERM, "&amp;Terminal Settings...", "", wx.ITEM_NORMAL)
        wxglade_tmp_menu.AppendSeparator()
        wxglade_tmp_menu.Append(ID_EXIT, "&amp;Exit", "", wx.ITEM_NORMAL)
        self.frame_terminal_menubar.Append(wxglade_tmp_menu, "&amp;File")
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(ID_RTS, "RTS", "", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(ID_DTR, "&amp;DTR", "", wx.ITEM_CHECK)
        wxglade_tmp_menu.Append(ID_SETTINGS, "&amp;Port Settings...", "", wx.ITEM_NORMAL)
        self.frame_terminal_menubar.Append(wxglade_tmp_menu, "Serial Port")
        self.SetMenuBar(self.frame_terminal_menubar)
        # Menu Bar end
        self.text_ctrl_output = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE | wx.TE_READONLY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_MENU, self.OnClear, id=ID_CLEAR)
        self.Bind(wx.EVT_MENU, self.OnSaveAs, id=ID_SAVEAS)
        self.Bind(wx.EVT_MENU, self.OnTermSettings, id=ID_TERM)
        self.Bind(wx.EVT_MENU, self.OnExit, id=ID_EXIT)
        self.Bind(wx.EVT_MENU, self.OnRTS, id=ID_RTS)
        self.Bind(wx.EVT_MENU, self.OnDTR, id=ID_DTR)
        self.Bind(wx.EVT_MENU, self.OnPortSettings, id=ID_SETTINGS)
        # end wxGlade
        self.__attach_events()          # register events
        self.OnPortSettings(None)       # call setup dialog on startup, opens port
        if not self.alive.isSet():
            self.Close()

    def StartThread(self):
        """Start the receiver thread"""
        self.thread = threading.Thread(target=self.ComPortThread)
        self.thread.setDaemon(1)
        self.alive.set()
        self.thread.start()
        self.serial.rts = True
        self.serial.dtr = True
        self.frame_terminal_menubar.Check(ID_RTS, self.serial.rts)
        self.frame_terminal_menubar.Check(ID_DTR, self.serial.dtr)

    def StopThread(self):
        """Stop the receiver thread, wait until it's finished."""
        if self.thread is not None:
            self.alive.clear()          # clear alive event for thread
            self.thread.join()          # wait until thread has finished
            self.thread = None

    def __set_properties(self):
        # begin wxGlade: TerminalFrame.__set_properties
        self.SetTitle("Serial Terminal")
        self.SetSize((546, 383))
        self.text_ctrl_output.SetFont(wx.Font(9, wx.MODERN, wx.NORMAL, wx.NORMAL, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: TerminalFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(self.text_ctrl_output, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        # register events at the controls
        self.Bind(wx.EVT_MENU, self.OnClear, id=ID_CLEAR)
        self.Bind(wx.EVT_MENU, self.OnSaveAs, id=ID_SAVEAS)
        self.Bind(wx.EVT_MENU, self.OnExit, id=ID_EXIT)
        self.Bind(wx.EVT_MENU, self.OnPortSettings, id=ID_SETTINGS)
        self.Bind(wx.EVT_MENU, self.OnTermSettings, id=ID_TERM)
        self.text_ctrl_output.Bind(wx.EVT_CHAR, self.OnKey)
        self.Bind(EVT_SERIALRX, self.OnSerialRead)
        self.Bind(wx.EVT_CLOSE, self.OnClose)

    def OnExit(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Menu point Exit"""
        self.Close()

    def OnClose(self, event):
        """Called on application shutdown."""
        self.StopThread()               # stop reader thread
        self.serial.close()             # cleanup
        self.Destroy()                  # close windows, exit app

    def OnSaveAs(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Save contents of output window."""
        with wx.FileDialog(
                None,
                "Save Text As...",
                ".",
                "",
                "Text File|*.txt|All Files|*",
                wx.SAVE) as dlg:
            if dlg.ShowModal() == wx.ID_OK:
                filename = dlg.GetPath()
                with codecs.open(filename, 'w', encoding='utf-8') as f:
                    text = self.text_ctrl_output.GetValue().encode("utf-8")
                    f.write(text)

    def OnClear(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """Clear contents of output window."""
        self.text_ctrl_output.Clear()

    def OnPortSettings(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """
        Show the port settings dialog. The reader thread is stopped for the
        settings change.
        """
        if event is not None:           # will be none when called on startup
            self.StopThread()
            self.serial.close()
        ok = False
        while not ok:
            with wxSerialConfigDialog.SerialConfigDialog(
                    self,
                    -1,
                    "",
                    show=wxSerialConfigDialog.SHOW_BAUDRATE | wxSerialConfigDialog.SHOW_FORMAT | wxSerialConfigDialog.SHOW_FLOW,
                    serial=self.serial) as dialog_serial_cfg:
                dialog_serial_cfg.CenterOnParent()
                result = dialog_serial_cfg.ShowModal()
            # open port if not called on startup, open it on startup and OK too
            if result == wx.ID_OK or event is not None:
                try:
                    self.serial.open()
                except serial.SerialException as e:
                    with wx.MessageDialog(self, str(e), "Serial Port Error", wx.OK | wx.ICON_ERROR)as dlg:
                        dlg.ShowModal()
                else:
                    self.StartThread()
                    self.SetTitle("Serial Terminal on {} [{},{},{},{}{}{}]".format(
                        self.serial.portstr,
                        self.serial.baudrate,
                        self.serial.bytesize,
                        self.serial.parity,
                        self.serial.stopbits,
                        ' RTS/CTS' if self.serial.rtscts else '',
                        ' Xon/Xoff' if self.serial.xonxoff else '',
                        ))
                    ok = True
            else:
                # on startup, dialog aborted
                self.alive.clear()
                ok = True

    def OnTermSettings(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        """\
        Menu point Terminal Settings. Show the settings dialog
        with the current terminal settings.
        """
        with TerminalSettingsDialog(self, -1, "", settings=self.settings) as dialog:
            dialog.CenterOnParent()
            dialog.ShowModal()

    def OnKey(self, event):
        """\
        Key event handler. If the key is in the ASCII range, write it to the
        serial port. Newline handling and local echo is also done here.
        """
        code = event.GetUnicodeKey()
        if code &lt; 256:   # XXX bug in some versions of wx returning only capital letters
            code = event.GetKeyCode()
        if code == 13:                      # is it a newline? (check for CR which is the RETURN key)
            if self.settings.echo:          # do echo if needed
                self.text_ctrl_output.AppendText('\n')
            if self.settings.newline == NEWLINE_CR:
                self.serial.write(b'\r')     # send CR
            elif self.settings.newline == NEWLINE_LF:
                self.serial.write(b'\n')     # send LF
            elif self.settings.newline == NEWLINE_CRLF:
                self.serial.write(b'\r\n')   # send CR+LF
        else:
            char = unichr(code)
            if self.settings.echo:          # do echo if needed
                self.WriteText(char)
            self.serial.write(char.encode('UTF-8', 'replace'))         # send the character

    def WriteText(self, text):
        if self.settings.unprintable:
            text = ''.join([c if (c &gt;= ' ' and c != '\x7f') else unichr(0x2400 + ord(c)) for c in text])
        self.text_ctrl_output.AppendText(text)

    def OnSerialRead(self, event):
        """Handle input from the serial port."""
        self.WriteText(event.data.decode('UTF-8', 'replace'))

    def ComPortThread(self):
        """\
        Thread that handles the incoming traffic. Does the basic input
        transformation (newlines) and generates an SerialRxEvent
        """
        while self.alive.isSet():
            b = self.serial.read(self.serial.in_waiting or 1)
            if b:
                # newline transformation
                if self.settings.newline == NEWLINE_CR:
                    b = b.replace(b'\r', b'\n')
                elif self.settings.newline == NEWLINE_LF:
                    pass
                elif self.settings.newline == NEWLINE_CRLF:
                    b = b.replace(b'\r\n', b'\n')
                event = SerialRxEvent(self.GetId(), b)
                self.GetEventHandler().AddPendingEvent(event)

    def OnRTS(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        self.serial.rts = event.IsChecked()

    def OnDTR(self, event):  # wxGlade: TerminalFrame.&lt;event_handler&gt;
        self.serial.dtr = event.Checked()

# end of class TerminalFrame


class MyApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        frame_terminal = TerminalFrame(None, -1, "")
        self.SetTopWindow(frame_terminal)
        frame_terminal.Show(True)
        return 1

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()

&lt;/pre&gt;

&lt;h3&gt;wxSerialConfigDialog.py&lt;/h3&gt;

&lt;pre class="brush: python"&gt;

#!/usr/bin/env python
#
# A serial port configuration dialog for wxPython. A number of flags can
# be used to configure the fields that are displayed.
#
# (C) 2001-2015 Chris Liechti &lt;cliechti@gmx.net&gt;
#
# SPDX-License-Identifier:    BSD-3-Clause

import wx
import serial
import serial.tools.list_ports

SHOW_BAUDRATE = 1 &lt;&lt; 0
SHOW_FORMAT = 1 &lt;&lt; 1
SHOW_FLOW = 1 &lt;&lt; 2
SHOW_TIMEOUT = 1 &lt;&lt; 3
SHOW_ALL = SHOW_BAUDRATE | SHOW_FORMAT | SHOW_FLOW | SHOW_TIMEOUT


class SerialConfigDialog(wx.Dialog):
    """\
    Serial Port configuration dialog, to be used with pySerial 2.0+
    When instantiating a class of this dialog, then the "serial" keyword
    argument is mandatory. It is a reference to a serial.Serial instance.
    the optional "show" keyword argument can be used to show/hide different
    settings. The default is SHOW_ALL which corresponds to
    SHOW_BAUDRATE|SHOW_FORMAT|SHOW_FLOW|SHOW_TIMEOUT. All constants can be
    found in this module (not the class).
    """

    def __init__(self, *args, **kwds):
        # grab the serial keyword and remove it from the dict
        self.serial = kwds['serial']
        del kwds['serial']
        self.show = SHOW_ALL
        if 'show' in kwds:
            self.show = kwds.pop('show')
        # begin wxGlade: SerialConfigDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_2 = wx.StaticText(self, -1, "Port")
        self.choice_port = wx.Choice(self, -1, choices=[])
        self.label_1 = wx.StaticText(self, -1, "Baudrate")
        self.combo_box_baudrate = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.sizer_1_staticbox = wx.StaticBox(self, -1, "Basics")
        self.panel_format = wx.Panel(self, -1)
        self.label_3 = wx.StaticText(self.panel_format, -1, "Data Bits")
        self.choice_databits = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.label_4 = wx.StaticText(self.panel_format, -1, "Stop Bits")
        self.choice_stopbits = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.label_5 = wx.StaticText(self.panel_format, -1, "Parity")
        self.choice_parity = wx.Choice(self.panel_format, -1, choices=["choice 1"])
        self.sizer_format_staticbox = wx.StaticBox(self.panel_format, -1, "Data Format")
        self.panel_timeout = wx.Panel(self, -1)
        self.checkbox_timeout = wx.CheckBox(self.panel_timeout, -1, "Use Timeout")
        self.text_ctrl_timeout = wx.TextCtrl(self.panel_timeout, -1, "")
        self.label_6 = wx.StaticText(self.panel_timeout, -1, "seconds")
        self.sizer_timeout_staticbox = wx.StaticBox(self.panel_timeout, -1, "Timeout")
        self.panel_flow = wx.Panel(self, -1)
        self.checkbox_rtscts = wx.CheckBox(self.panel_flow, -1, "RTS/CTS")
        self.checkbox_xonxoff = wx.CheckBox(self.panel_flow, -1, "Xon/Xoff")
        self.sizer_flow_staticbox = wx.StaticBox(self.panel_flow, -1, "Flow Control")
        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade
        # attach the event handlers
        self.__attach_events()

    def __set_properties(self):
        # begin wxGlade: SerialConfigDialog.__set_properties
        self.SetTitle("Serial Port Configuration")
        self.choice_databits.SetSelection(0)
        self.choice_stopbits.SetSelection(0)
        self.choice_parity.SetSelection(0)
        self.text_ctrl_timeout.Enable(False)
        self.button_ok.SetDefault()
        # end wxGlade
        self.SetTitle("Serial Port Configuration")
        if self.show &amp; SHOW_TIMEOUT:
            self.text_ctrl_timeout.Enable(0)
        self.button_ok.SetDefault()

        if not self.show &amp; SHOW_BAUDRATE:
            self.label_1.Hide()
            self.combo_box_baudrate.Hide()
        if not self.show &amp; SHOW_FORMAT:
            self.panel_format.Hide()
        if not self.show &amp; SHOW_TIMEOUT:
            self.panel_timeout.Hide()
        if not self.show &amp; SHOW_FLOW:
            self.panel_flow.Hide()

        # fill in ports and select current setting
        preferred_index = 0
        self.choice_port.Clear()
        self.ports = []
        for n, (portname, desc, hwid) in enumerate(sorted(serial.tools.list_ports.comports())):
            self.choice_port.Append(u'{} - {}'.format(portname, desc))
            self.ports.append(portname)
            if self.serial.name == portname:
                preferred_index = n
        self.choice_port.SetSelection(preferred_index)
        if self.show &amp; SHOW_BAUDRATE:
            preferred_index = None
            # fill in baud rates and select current setting
            self.combo_box_baudrate.Clear()
            for n, baudrate in enumerate(self.serial.BAUDRATES):
                self.combo_box_baudrate.Append(str(baudrate))
                if self.serial.baudrate == baudrate:
                    preferred_index = n
            if preferred_index is not None:
                self.combo_box_baudrate.SetSelection(preferred_index)
            else:
                self.combo_box_baudrate.SetValue(u'{}'.format(self.serial.baudrate))
        if self.show &amp; SHOW_FORMAT:
            # fill in data bits and select current setting
            self.choice_databits.Clear()
            for n, bytesize in enumerate(self.serial.BYTESIZES):
                self.choice_databits.Append(str(bytesize))
                if self.serial.bytesize == bytesize:
                    index = n
            self.choice_databits.SetSelection(index)
            # fill in stop bits and select current setting
            self.choice_stopbits.Clear()
            for n, stopbits in enumerate(self.serial.STOPBITS):
                self.choice_stopbits.Append(str(stopbits))
                if self.serial.stopbits == stopbits:
                    index = n
            self.choice_stopbits.SetSelection(index)
            # fill in parities and select current setting
            self.choice_parity.Clear()
            for n, parity in enumerate(self.serial.PARITIES):
                self.choice_parity.Append(str(serial.PARITY_NAMES[parity]))
                if self.serial.parity == parity:
                    index = n
            self.choice_parity.SetSelection(index)
        if self.show &amp; SHOW_TIMEOUT:
            # set the timeout mode and value
            if self.serial.timeout is None:
                self.checkbox_timeout.SetValue(False)
                self.text_ctrl_timeout.Enable(False)
            else:
                self.checkbox_timeout.SetValue(True)
                self.text_ctrl_timeout.Enable(True)
                self.text_ctrl_timeout.SetValue(str(self.serial.timeout))
        if self.show &amp; SHOW_FLOW:
            # set the rtscts mode
            self.checkbox_rtscts.SetValue(self.serial.rtscts)
            # set the rtscts mode
            self.checkbox_xonxoff.SetValue(self.serial.xonxoff)

    def __do_layout(self):
        # begin wxGlade: SerialConfigDialog.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_flow_staticbox.Lower()
        sizer_flow = wx.StaticBoxSizer(self.sizer_flow_staticbox, wx.HORIZONTAL)
        self.sizer_timeout_staticbox.Lower()
        sizer_timeout = wx.StaticBoxSizer(self.sizer_timeout_staticbox, wx.HORIZONTAL)
        self.sizer_format_staticbox.Lower()
        sizer_format = wx.StaticBoxSizer(self.sizer_format_staticbox, wx.VERTICAL)
        grid_sizer_1 = wx.FlexGridSizer(3, 2, 0, 0)
        self.sizer_1_staticbox.Lower()
        sizer_1 = wx.StaticBoxSizer(self.sizer_1_staticbox, wx.VERTICAL)
        sizer_basics = wx.FlexGridSizer(3, 2, 0, 0)
        sizer_basics.Add(self.label_2, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_basics.Add(self.choice_port, 0, wx.EXPAND, 0)
        sizer_basics.Add(self.label_1, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_basics.Add(self.combo_box_baudrate, 0, wx.EXPAND, 0)
        sizer_basics.AddGrowableCol(1)
        sizer_1.Add(sizer_basics, 0, wx.EXPAND, 0)
        sizer_2.Add(sizer_1, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_3, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_databits, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.label_4, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_stopbits, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        grid_sizer_1.Add(self.label_5, 1, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        grid_sizer_1.Add(self.choice_parity, 1, wx.EXPAND | wx.ALIGN_RIGHT, 0)
        sizer_format.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        self.panel_format.SetSizer(sizer_format)
        sizer_2.Add(self.panel_format, 0, wx.EXPAND, 0)
        sizer_timeout.Add(self.checkbox_timeout, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_timeout.Add(self.text_ctrl_timeout, 0, 0, 0)
        sizer_timeout.Add(self.label_6, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        self.panel_timeout.SetSizer(sizer_timeout)
        sizer_2.Add(self.panel_timeout, 0, wx.EXPAND, 0)
        sizer_flow.Add(self.checkbox_rtscts, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_flow.Add(self.checkbox_xonxoff, 0, wx.ALL | wx.ALIGN_CENTER_VERTICAL, 4)
        sizer_flow.Add((10, 10), 1, wx.EXPAND, 0)
        self.panel_flow.SetSizer(sizer_flow)
        sizer_2.Add(self.panel_flow, 0, wx.EXPAND, 0)
        sizer_3.Add(self.button_ok, 0, 0, 0)
        sizer_3.Add(self.button_cancel, 0, 0, 0)
        sizer_2.Add(sizer_3, 0, wx.ALL | wx.ALIGN_RIGHT, 4)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        self.Layout()
        # end wxGlade

    def __attach_events(self):
        wx.EVT_BUTTON(self, self.button_ok.GetId(), self.OnOK)
        wx.EVT_BUTTON(self, self.button_cancel.GetId(), self.OnCancel)
        if self.show &amp; SHOW_TIMEOUT:
            wx.EVT_CHECKBOX(self, self.checkbox_timeout.GetId(), self.OnTimeout)

    def OnOK(self, events):
        success = True
        self.serial.port = self.ports[self.choice_port.GetSelection()]
        if self.show &amp; SHOW_BAUDRATE:
            try:
                b = int(self.combo_box_baudrate.GetValue())
            except ValueError:
                with wx.MessageDialog(
                        self,
                        'Baudrate must be a numeric value',
                        'Value Error',
                        wx.OK | wx.ICON_ERROR) as dlg:
                    dlg.ShowModal()
                success = False
            else:
                self.serial.baudrate = b
        if self.show &amp; SHOW_FORMAT:
            self.serial.bytesize = self.serial.BYTESIZES[self.choice_databits.GetSelection()]
            self.serial.stopbits = self.serial.STOPBITS[self.choice_stopbits.GetSelection()]
            self.serial.parity = self.serial.PARITIES[self.choice_parity.GetSelection()]
        if self.show &amp; SHOW_FLOW:
            self.serial.rtscts = self.checkbox_rtscts.GetValue()
            self.serial.xonxoff = self.checkbox_xonxoff.GetValue()
        if self.show &amp; SHOW_TIMEOUT:
            if self.checkbox_timeout.GetValue():
                try:
                    self.serial.timeout = float(self.text_ctrl_timeout.GetValue())
                except ValueError:
                    with wx.MessageDialog(
                            self,
                            'Timeout must be a numeric value',
                            'Value Error',
                            wx.OK | wx.ICON_ERROR) as dlg:
                        dlg.ShowModal()
                    success = False
            else:
                self.serial.timeout = None
        if success:
            self.EndModal(wx.ID_OK)

    def OnCancel(self, events):
        self.EndModal(wx.ID_CANCEL)

    def OnTimeout(self, events):
        if self.checkbox_timeout.GetValue():
            self.text_ctrl_timeout.Enable(True)
        else:
            self.text_ctrl_timeout.Enable(False)

# end of class SerialConfigDialog


class MyApp(wx.App):
    """Test code"""
    def OnInit(self):
        wx.InitAllImageHandlers()

        ser = serial.Serial()
        print(ser)
        # loop until cancel is pressed, old values are used as start for the next run
        # show the different views, one after the other
        # value are kept.
        for flags in (SHOW_BAUDRATE, SHOW_FLOW, SHOW_FORMAT, SHOW_TIMEOUT, SHOW_ALL):
            dialog_serial_cfg = SerialConfigDialog(None, -1, "", serial=ser, show=flags)
            self.SetTopWindow(dialog_serial_cfg)
            result = dialog_serial_cfg.ShowModal()
            print(ser)
            if result != wx.ID_OK:
                break
        # the user can play around with the values, CANCEL aborts the loop
        while True:
            dialog_serial_cfg = SerialConfigDialog(None, -1, "", serial=ser)
            self.SetTopWindow(dialog_serial_cfg)
            result = dialog_serial_cfg.ShowModal()
            print(ser)
            if result != wx.ID_OK:
                break
        return 0

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/ciQDIeh.png"&gt;&lt;/p&gt;</content><category term="wxpython"></category></entry><entry><title>40323131日誌 105/06/28</title><link href="http://project.mde.tw/blog/40323131ri-zhi-1050628.html" rel="alternate"></link><published>2016-06-28T19:00:00+08:00</published><updated>2016-06-28T19:00:00+08:00</updated><author><name>40323131</name></author><id>tag:project.mde.tw,2016-06-28:/blog/40323131ri-zhi-1050628.html</id><summary type="html"></summary><content type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3&gt;研讀Octopi的設定檔&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;設定檔位置位在  /Octoprint/src/octoprint/setting.py&lt;/h3&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/YJvnK0t.png"&gt;
&lt;/br&gt;
&lt;/br&gt;
&lt;h3&gt;設定檔位置位在  /Octoprint/src/octoprint/static/less/octoprint.less&lt;/h3&gt;
&lt;/br&gt;
&lt;img src="http://i.imgur.com/OfsVzCx.png"&gt;
&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;目前遇到的問題&lt;/h3&gt;

&lt;h4&gt;host位置顯示在0.0.0.0:5000  可是網頁開起來無法顯示&lt;/h4&gt;

&lt;p&gt;&lt;/br&gt;
&lt;img src="http://i.imgur.com/9sqNCk1.png"&gt;
&lt;/br&gt;&lt;/p&gt;</content><category term="g1project"></category></entry><entry><title>40323143 - 日誌 105年6月28日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-6yue-28ri.html" rel="alternate"></link><published>2016-06-28T12:00:00+08:00</published><updated>2016-06-28T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-06-28:/blog/40323143-ri-zhi-105nian-6yue-28ri.html</id><summary type="html">&lt;p&gt;在Onshape上充實零件庫
</summary><content type="html">&lt;p&gt;在Onshape上充實零件庫
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將所有機械手臂零件全部合進零件庫，並用零件庫的零件再組合出一個組圖。今天沒有設定新的變數，未來將會新增有關手臂長度的零件參數，並由實際使用需求及感測器尺寸調整參數。&lt;/p&gt;
&lt;p&gt;備註:&lt;/p&gt;
&lt;p&gt;1.夾頭動力傳輸由原先畫的6齒圓齒輪改成25齒的正齒輪&lt;/p&gt;
&lt;p&gt;6/28零件庫&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/wrPCKrc.png"&gt;&lt;/p&gt;
&lt;p&gt;組合圖&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/GrrtDHo.png"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>Octopi測試與實作</title><link href="http://project.mde.tw/blog/octopice-shi-yu-shi-zuo.html" rel="alternate"></link><published>2016-06-28T11:30:00+08:00</published><updated>2016-06-28T11:30:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-06-28:/blog/octopice-shi-yu-shi-zuo.html</id><summary type="html">&lt;p&gt;設定使用octopi與實作&lt;/p&gt;
</summary><content type="html">&lt;p&gt;設定使用octopi與實作&lt;/p&gt;


&lt;p&gt;octopi走乙太網路線進行控制以及連線&lt;/p&gt;
&lt;p&gt;實際測試的照片以及需要用到的方法&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/Umf1J3w.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/zMUAcXs.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/Sqh1bWP.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/PzFmXoH.jpg"&gt;&lt;/p&gt;</content><category term="Octopi"></category></entry><entry><title>ubuntu IPV4 IPV6 使用教學</title><link href="http://project.mde.tw/blog/ubuntu-ipv4-ipv6-shi-yong-jiao-xue.html" rel="alternate"></link><published>2016-06-28T11:29:00+08:00</published><updated>2016-06-28T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-06-28:/blog/ubuntu-ipv4-ipv6-shi-yong-jiao-xue.html</id><summary type="html">&lt;p&gt;關於IPV4  IPV6設定&lt;/p&gt;
</summary><content type="html">&lt;p&gt;關於IPV4  IPV6設定&lt;/p&gt;


&lt;pre class="brush: python"&gt;

#先檢查網路
$ ifconfig
#修改/etc/network/interface的檔案
# interfaces(5) file used by ifup(8) and ifdown(8)
auto lo
iface lo inet loopback

sudo eth0
iface eth0 inet static
address 140.130.17.105
netmask 255.255.255.0
network 140.130.17.0
broadcast 140.130.17.255
gateway 140.130.17.254
# dns-* options are implemented by the resolvconf package, if $
dns-nameservers 140.130.1.2 140.130.17.3 168.95.1.1
dns-search mde.nfu.edu.tw

#老師的地址3004

#從新啟動

可以到IPV6的網站測試是否可以連線

&lt;/pre&gt;

&lt;p&gt;試用ubuntu系統改成IPV6和IPV4使用，並測試速度的使用上的問題，主要是在沒有IPV6的網站沒辦法連上去，這部份可能需要依靠proxy進行代理伺服器&lt;/p&gt;</content><category term="ubuntu 網路設定"></category></entry><entry><title>40323143 - 日誌 105年6月27日</title><link href="http://project.mde.tw/blog/40323143-ri-zhi-105nian-6yue-27ri.html" rel="alternate"></link><published>2016-06-27T12:00:00+08:00</published><updated>2016-06-27T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-06-27:/blog/40323143-ri-zhi-105nian-6yue-27ri.html</id><summary type="html">&lt;p&gt;在Onshape上建立零件庫
</summary><content type="html">&lt;p&gt;在Onshape上建立零件庫
&lt;/p&gt;
&lt;p&gt;日記:&lt;/p&gt;
&lt;p&gt;今天將個人Onshape上的機械手臂部分零件合進零件庫，設定六個參數，分別是motor_fixhole , motor_x , motor_y , motor_z , suan_pan , degore 六個參數，motor_fixhole為設定馬達固定孔大小，motor_x , motor_y , motor_z為設定馬達的長寬高， suan_pan為設定旋盤的大小，大小為motor_y的1.7倍，degore為設定底座的直徑，大小為3倍的suan_pan。&lt;/p&gt;
&lt;p&gt;合進零件庫的零件&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/VoMTC8g.png"&gt;&lt;/p&gt;
&lt;p&gt;參數設定&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/AsRWjtd.png"&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>樹梅派指令表和使用</title><link href="http://project.mde.tw/blog/shu-mei-pai-zhi-ling-biao-he-shi-yong.html" rel="alternate"></link><published>2016-06-27T11:29:00+08:00</published><updated>2016-06-27T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-06-27:/blog/shu-mei-pai-zhi-ling-biao-he-shi-yong.html</id><summary type="html">&lt;p&gt;找到的些許文章和探討&lt;/p&gt;
</summary><content type="html">&lt;p&gt;找到的些許文章和探討&lt;/p&gt;


&lt;p&gt;在Octoprint底下有個資料夾&lt;/p&gt;
&lt;p&gt;底層有些方法包括模組以及設定檔&lt;/p&gt;
&lt;p&gt;linux指令:&lt;/p&gt;
&lt;p&gt;cp&lt;/p&gt;
&lt;p&gt;mv&lt;/p&gt;
&lt;p&gt;指令再raspberry pi 要熟悉，因為在搬移檔案以及設定檔案，會常使用到，以及設定需要的檔案，像是網路的方法，以及未來可能要用到的USB掛載傳輸資料或者使用&lt;/p&gt;
&lt;pre class="brush: python"&gt;

#先檢查自己找到的usb數量
$ sudo fdisk -l
#...省略....
#Device         Boot  Start      End  Sectors  Size Id Type
#/dev/mmcblk0p1        8192   137215   129024   63M  c W95 FAT32 (LBA)
#/dev/mmcblk0p2      137216 31116287 30979072 14.8G 83 Linux

$ sudo mkdir /media/usbstick
$ sudo chown pi:pi /media/usbstick 

#手動掛載
$ sudo mount -t vfat -o uid=pi,gid=pi /dev/sda1 /media/usbstick
#就可以進行存取

#要拔除時要下指令
$ sudo umount /media/usbstick

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://i.imgur.com/kkeiJv2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/DeYzBNo.jpg"&gt;&lt;/p&gt;
&lt;p&gt;在這些設定檔中使用到的可以更改圖片或者是把程式碼拿出來理解目前解讀進度:&lt;/p&gt;
&lt;p&gt;1.再octoprint中有將各模組拆開來，近日把python的設定看完，可能會接近5%的進度&lt;/p&gt;
&lt;p&gt;2.圖片用到的部分，可能要從新Make(command)才可以用&lt;/p&gt;
&lt;p&gt;待完成部分:&lt;/p&gt;
&lt;p&gt;1.javascript&lt;/p&gt;
&lt;p&gt;2.往後寫出一套for our flask.py&lt;/p&gt;
&lt;p&gt;3.plugin部分&lt;/p&gt;</content><category term="octopi"></category></entry><entry><title>R2C2的資料</title><link href="http://project.mde.tw/blog/r2c2de-zi-liao.html" rel="alternate"></link><published>2016-05-15T11:29:00+08:00</published><updated>2016-05-15T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-05-15:/blog/r2c2de-zi-liao.html</id><summary type="html">&lt;p&gt;新的R2C2資料&lt;/p&gt;
</summary><content type="html">&lt;p&gt;新的R2C2資料&lt;/p&gt;


&lt;p&gt;中間有新的資料for raspberrypi
是使用node.js啟動server
client端可以看到的
https://github.com/nneves/Raspberrypi_NodeJS&lt;/p&gt;
&lt;p&gt;&lt;a href = "https://github.com/nneves/R2C2_WebInterface/blob/master/README.md"&gt;RaspberryPi R2C2&lt;/a&gt;&lt;/p&gt;</content><category term="client control"></category></entry><entry><title>OpenCv實作</title><link href="http://project.mde.tw/blog/opencvshi-zuo.html" rel="alternate"></link><published>2016-05-14T11:29:00+08:00</published><updated>2016-05-14T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-05-14:/blog/opencvshi-zuo.html</id><summary type="html">&lt;p&gt;OpenCv in python and use&lt;/p&gt;
</summary><content type="html">&lt;p&gt;OpenCv in python and use&lt;/p&gt;


&lt;p&gt;實作系統Ubuntu 14.04&lt;/p&gt;
&lt;p&gt;剛開始必須要先安裝依些相關的compiler以及設定黨
步驟如同老師所下載的順序&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# apt-get 更新
$ sudo apt-get update
# apt-get 升級
$ sudo apt-get upgrade
# 安裝所需的開發套件
$ sudo apt-get install build-essential cmake git pkg-config
# 安裝編譯過程所需的程式庫
$ sudo apt-get install libjpeg8-dev libtiff4-dev libjasper-dev libpng12-dev
# 安裝編譯過程所需的程式庫
$ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
# 安裝編譯過程所需的程式庫
$ sudo apt-get install libgtk2.0-dev
# 安裝編譯過程所需的 fortran 編譯器
$ sudo apt-get install libatlas-base-dev gfortran
# 安裝編譯過程所需的原始碼
$ sudo apt-get install python3.4-dev
# 本台機器的 python 為 2.7 版, 而 python3 則為 python 3.4, 這裡安裝 numpy  模組
$ sudo pip3 install numpy
# 希望在帳號目錄下的 tmp 進行編譯工作
$ cd
#new folder
$ mkdir tmp
# 更換目錄到 tmp
$ cd tmp
# 利用 git clone 取得原始碼
$ git clone https://github.com/Itseez/opencv.git
# 準備進入倉儲切換分支
$ cd opencv
# 採用 3.1.0 版
$ git checkout 3.1.0
# 回到用戶目錄
$ cd ..
# 再利用 git clone 下載原始碼
$ git clone https://github.com/Itseez/opencv_contrib.git
# 準備進入倉儲切換分支
$ cd opencv_contrib
# 與 opencv 配合, 採用 3.1.0 版
$ git checkout 3.1.0

$ cd ..
# 準備開始建立程式庫
$ cd opencv

$ mkdir build

$ cd build

# 這裡會同時建立 Python2 與 Python3 的 OpenCV 程式庫檔案
$ cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D PYTHON_EXECUTABLE=$(which python3) \
    -D OPENCV_EXTRA_MODULES_PATH= ./../../opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..

$ make -j4

$ sudo make install

$ sudo ldconfig

&lt;/pre&gt;

&lt;p&gt;&lt;img src="http://coursemdetw.github.io/project_site_files/files/2016spring/opencv_python3_windows.png" width="800" /&gt;&lt;/p&gt;
&lt;p&gt;有做些許更改同樣也可以達到使用上的設定&lt;/p&gt;
&lt;p&gt;windows中
只需要開起2016spring中把py檔
用cmd line 來執行
下python3 你的程式碼的名子
只要有攝影機就可以執行
請注意
必須要裝好攝影機的驅動才可以執行cvcapture(0)
否則無法執行
0是預設的第1台攝影機
1是第2台
以此類推&lt;/p&gt;</content><category term="OpenCv"></category></entry><entry><title>40323123 - 專題參考資料</title><link href="http://project.mde.tw/blog/40323123-zhuan-ti-can-kao-zi-liao.html" rel="alternate"></link><published>2016-05-13T11:29:00+08:00</published><updated>2016-05-13T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-05-13:/blog/40323123-zhuan-ti-can-kao-zi-liao.html</id><summary type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;
</summary><content type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;


&lt;p&gt;1.回報目前專題進度:
事項一:目前題目定義 製作一台3D printer跟atom同樣款式的
事項二:因為有三組的成員，目前分配如下所示&lt;/p&gt;
&lt;p&gt;40323123 這組:利用octopi來進行遠端控制，以及自動下料等的問題，自動下料的機構利用GA進行運算&lt;/p&gt;
&lt;p&gt;40323250 這組:進行組裝，設計，Onshape組裝，V-Rep(組裝設計模擬)&lt;/p&gt;
&lt;p&gt;黃婉菁這組:先利用opencv來產生3d module並轉換成stl進行列印(主要目的影像建模出3Dstl)&lt;/p&gt;
&lt;p&gt;參考資料:
1.octopi
&lt;a href="http://plugins.octoprint.org/"&gt;octopi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.octoprintDocs
&lt;a href="http://docs.octoprint.org/en/master/"&gt;octoprint Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.octopi_github
&lt;a href="https://github.com/foosel/OctoPrint/wiki"&gt;octoprint WIKI&lt;/a&gt;
&lt;a href="https://github.com/foosel/OctoPrint/wiki/FAQ"&gt;FAQ&lt;/a&gt;
&lt;a href="https://github.com/guysoft/OctoPi"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4.flux 3d printer中的底板樣式以及掃描方式
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/l9ZISxSo2X0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;5.OpenCv 3d nodule
&lt;a href="http://www.opencv.org.cn/"&gt;OpenCv可參考&lt;/a&gt;&lt;/p&gt;</content><category term="3d printer"></category></entry><entry><title>保養3D列印機</title><link href="http://project.mde.tw/blog/bao-yang-3dlie-yin-ji.html" rel="alternate"></link><published>2016-05-13T11:29:00+08:00</published><updated>2016-05-13T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-05-13:/blog/bao-yang-3dlie-yin-ji.html</id><summary type="html">&lt;p&gt;Control 3D printer and some Question&lt;/p&gt;
</summary><content type="html">&lt;p&gt;Control 3D printer and some Question&lt;/p&gt;


&lt;p&gt;1.第一步清理平台&lt;/p&gt;
&lt;p&gt;2.幫滑軌上專用潤滑油&lt;/p&gt;
&lt;p&gt;3.加熱後將線材退出&lt;/p&gt;
&lt;p&gt;4.清理機台外觀&lt;/p&gt;
&lt;p&gt;5.確保滑軌滑動順利&lt;/p&gt;
&lt;p&gt;約兩個禮拜做一次，自動校正，不要太長使用，會導致買新的噴頭。
詳細注意事項，在另行公告&lt;/p&gt;</content><category term="3d printer"></category></entry><entry><title>40323143 - 3D printer 列印完下料後的倉儲機構設計理念及繪圖</title><link href="http://project.mde.tw/blog/40323143-3d-printer-lie-yin-wan-xia-liao-hou-de-cang-chu-ji-gou-she-ji-li-nian-ji-hui-tu.html" rel="alternate"></link><published>2016-03-19T12:00:00+08:00</published><updated>2016-03-19T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-03-19:/blog/40323143-3d-printer-lie-yin-wan-xia-liao-hou-de-cang-chu-ji-gou-she-ji-li-nian-ji-hui-tu.html</id><summary type="html">&lt;p&gt;只要是具備協同權限的用戶, 都可以在機械設計專題網誌中貢獻內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;只要是具備協同權限的用戶, 都可以在機械設計專題網誌中貢獻內容&lt;/p&gt;


&lt;p&gt;這裡為 40323130 所寫的文章主要內容&lt;/p&gt;
&lt;p&gt;這是設計構想的全圖&lt;/p&gt;
&lt;p&gt;&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/asm0001.stl"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;我的想法是讓3D printer 在一個輸送帶上的平面列印，在輸送帶後方因為曲率不同使成品自然脫落，然後用一個盛盤接住成品一動到固定位置，使成盤傾斜讓成品掉落我們想要放置的位置。&lt;/p&gt;
&lt;p&gt;我使用一個由上而往看下呈一個工字型的機構，因為我認為這種機構機構簡單、組裝容易、運動路徑明確，控制上應該比較方便，可以節省很多製造、控制上的麻煩。&lt;/p&gt;
&lt;p&gt;動力方面想使用馬達接上摩擦輪驅動另外兩個摩擦輪，原本想用齒輪作為動力傳輸，但考慮到組原想要自己製造出來的想法，齒輪對我們來說製造難度太高，所以改用摩擦輪。&lt;/p&gt;
&lt;p&gt;組裝上也是盡量用簡單方便的方法組裝，例如摩擦輪就只是挖一個槽用重力固定，馬達安裝是用夾板鎖螺栓固定，其餘都是鎖螺栓夾緊，在組裝上應該不會有困難。&lt;/p&gt;
&lt;p&gt;零件圖:&lt;/p&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/1long.stl"&gt;&lt;/script&gt;

&lt;p&gt;&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/2long.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/3.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/3long.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/4-02.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/4-46.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/5.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/6.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/6-3.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/46-2.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/a.stl"&gt;&lt;/script&gt;
&lt;script src="https://embed.github.com/view/3d/coursemdetw/project_site/gh-pages/blog/theme/files/40323143/b.stl"&gt;&lt;/script&gt;&lt;/p&gt;</content><category term="範例"></category></entry><entry><title>40323143 - 說明如何參與協同機械設計專題網誌編寫</title><link href="http://project.mde.tw/blog/40323143-shuo-ming-ru-he-can-yu-xie-tong-ji-jie-she-ji-zhuan-ti-wang-zhi-bian-xie.html" rel="alternate"></link><published>2016-03-09T12:00:00+08:00</published><updated>2016-03-09T12:00:00+08:00</updated><author><name>40323143</name></author><id>tag:project.mde.tw,2016-03-09:/blog/40323143-shuo-ming-ru-he-can-yu-xie-tong-ji-jie-she-ji-zhuan-ti-wang-zhi-bian-xie.html</id><summary type="html">&lt;p&gt;只要是具備協同權限的用戶, 都可以在機械設計專題網誌中貢獻內容&lt;/p&gt;
</summary><content type="html">&lt;p&gt;只要是具備協同權限的用戶, 都可以在機械設計專題網誌中貢獻內容&lt;/p&gt;


&lt;p&gt;這裡為 40323130 所寫的文章主要內容&lt;/p&gt;
&lt;p&gt;本機械設計專題網誌的架構包含近端與遠端的資料檢視設計, 專案資料以 Leo Editor 進行管理.&lt;/p&gt;
&lt;p&gt;以下教學影片示範從 &lt;a href="http://project.mde.tw"&gt;http://project.mde.tw&lt;/a&gt; 機械設計專題網誌中取得倉儲的網址後, 可以利用 git clone 複製倉儲資料, 之後:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;利用 git checkout gh-pages 將工作目錄指到 Github pages 的對應分支內容&lt;/li&gt;
&lt;li&gt;以 Leo Editor 開啟 users 目錄下的 user_template.leo 檔案&lt;/li&gt;
&lt;li&gt;根據自己的帳號, 修改 .md 檔案存檔的名稱, 目的在透過加入帳號與時間註記, 避免 content 目錄中的檔案彼此複寫&lt;/li&gt;
&lt;li&gt;在 .md 的 Title 標題中, 冠上自己的帳號, 主要也是避免 Pelican 將 .md 根據標題轉成 html 時, 產生檔案複寫&lt;/li&gt;
&lt;li&gt;本系統的 Pelican 分為近端與遠端轉檔按鈕, 因此若要在近端檢查時, 與要推送到 Github 時採用不同轉檔按鈕&lt;/li&gt;
&lt;li&gt;為了簡化 git 指令的 add, commit 與 push, 加入 ungit, 只要啟動隨身系統候, 再利用 start_ungit.bat 開啟, 就可以在瀏覽器中簡化改版過程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Vimeo:&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/157247703" width="500" height="281" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/157247703"&gt;2016project_1&lt;/a&gt; from &lt;a href="https://vimeo.com/user24079973"&gt;虎尾科大機械設計工程&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Youtube:&lt;/p&gt;
&lt;iframe width="420" height="315" src="https://www.youtube.com/embed/hQR1wxALifU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="範例"></category></entry><entry><title>40323123 - 3d printer</title><link href="http://project.mde.tw/blog/40323123-3d-printer.html" rel="alternate"></link><published>2016-03-06T11:29:00+08:00</published><updated>2016-03-06T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-03-06:/blog/40323123-3d-printer.html</id><summary type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;
</summary><content type="html">&lt;p&gt;raspberry pi  connect 3d printer to control the 3d printer &lt;/p&gt;


&lt;p&gt;遠端控制3D列印
這邊使用的遠端列印是使用web client控制&lt;/p&gt;
&lt;p&gt;目前有兩套在觀望的系統~
一個是
&lt;a href="http://octoprint.org/download/"&gt;octopi&lt;/a&gt;
另一個是
&lt;a href="https://www.astroprint.com/downloads"&gt;Astropromt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;或者是我們自己寫一套
兩套皆使用樹梅派當為控制電腦及server
使用心得:在之前已經有安裝過octopi，使用狀況是不錯，但是gui介面有些許的問題，使用上是沒什麼大礙，在3D printer的控制板，做動方式，像是一般CNC一樣，接收
G指令
&lt;a href="http://reprap.org/wiki/G-code"&gt;Gcoce 大全&lt;/a&gt;
&lt;a href="http://www.slideshare.net/roboard/3d-printer-marlin"&gt;控制系統的code解析&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這兩套系統，都有開放原始碼，不過因為解析程式有巨大的阻礙，因為對python和樹梅派不熟悉，導致只會安裝不會自己編譯。&lt;/p&gt;</content><category term="3d printer"></category></entry><entry><title>40323123 - 專題組員的範例文章標題</title><link href="http://project.mde.tw/blog/40323123-zhuan-ti-zu-yuan-de-fan-li-wen-zhang-biao-ti.html" rel="alternate"></link><published>2016-03-01T11:29:00+08:00</published><updated>2016-03-01T11:29:00+08:00</updated><author><name>40323123</name></author><id>tag:project.mde.tw,2016-03-01:/blog/40323123-zhuan-ti-zu-yuan-de-fan-li-wen-zhang-biao-ti.html</id><summary type="html">&lt;p&gt;這裡放入 40323123 所寫的文章摘要&lt;/p&gt;
</summary><content type="html">&lt;p&gt;這裡放入 40323123 所寫的文章摘要&lt;/p&gt;


&lt;p&gt;這裡為 40323123 所寫的文章主要內容&lt;/p&gt;</content><category term="範例"></category></entry></feed>